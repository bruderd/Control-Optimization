function [y1,xf1,xf2] = NARX_NeuralNetworkFunction(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 22-Aug-2018 16:32:47.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   x2 = 6xTS matrix, input #2
%   xi1 = 3x2 matrix, initial 2 delay states for input #1.
%   xi2 = 6x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 6xTS matrix, output #1
%   xf1 = 3x2 matrix, final 2 delay states for input #1.
%   xf2 = 6x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0];
x1_step1.gain = [0.20053699350483;0.200544041106296;0.200280392549569];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-0.156274843142796;-0.148885540376267;-0.106342153265596;-0.133510159664189;-0.139378367975141;-0.0515426322556757];
x2_step1.gain = [6.02925470600584;5.80239714539318;19.5174170890666;7.66459323490276;7.02419411493605;19.1826794012276];
x2_step1.ymin = -1;

% Layer 1
b1 = [1.3247597185582107;1.2231720845838878;-0.2131055880961655;-0.0098864633406322011;-0.014875372518307809;-0.0021636668794074157;0.0022680487425503623;0.34490922671013852;-0.33866510280599588;-1.634729316232975];
IW1_1 = [0.10946418948380147 -0.19169837838484313 -0.10575987173137812 -0.11319461039463867 0.19877389386282443 0.11100447422437916;-0.068198724545771125 -0.061320951701721693 0.029297466736664883 0.068550000801691047 0.06247962805065492 -0.029438476963055651;0.041325833153333255 -0.049498727963610489 -0.053524438649505825 -0.042457941743059988 0.051674284466126624 0.055769606118799372;0.04015997270043542 -0.058769892085653981 -0.059068431502076142 -0.041448831166489099 0.061329289371542701 0.061672463157618769;-0.046758472750368985 0.067184334780404018 0.066881533792698525 0.0482423158660161 -0.070110502730641538 -0.069826258012047421;-0.059290798438125715 0.077622836756524996 0.089065663302284839 0.061168965676102499 -0.081251664089238451 -0.092952899649644261;0.040631114124060341 -0.055837965947529135 -0.059192033872094423 -0.041952505108124157 0.058338544425645546 0.061808003648040913;-0.019724384579934463 0.0067714768313412912 0.017765935504416595 0.020147198662266677 -0.0072812434414966506 -0.018386461162129684;0.065627564789645002 -0.087731128851454607 -0.10678679877303199 -0.067703224437370368 0.091822870301074846 0.11141005744939277;0.04665584612838089 0.09490386468470477 0.025736997165550536 -0.045410124917433348 -0.10086987786849737 -0.028425322722406828];
IW1_2 = [-0.023190010704909308 -0.44571959362025843 -0.085380958803844179 -0.3138597525808221 -0.40782976467505677 -0.012864121914875522 -0.10580329751059188 0.50591243527412899 -0.32547447531982626 0.17316327675404042 0.27260816889859046 -0.17336530570349479;0.070974100370183341 0.0082643808936729256 -0.16637478367230185 -0.17367878366853073 -0.2445897927729124 0.24838694507289391 -0.45115481248809558 -0.10886022765336945 0.29137207973944856 0.029809715811771907 0.11226599931827941 -0.16131202026104541;0.030531942153584988 0.36913889629577218 0.2276220425032571 0.19803063226014539 -0.16395285648308375 -0.097236780455505309 -0.074111236042502179 -0.16888947616061883 -0.15450101790906065 -0.12345027110589415 0.087296764912905223 -0.0078922325909646721;0.094886736589060688 0.049075325703109261 0.19193234411944884 0.11298004706508408 -0.28074665967111395 0.1226931662057365 -0.054557087833372195 -0.13010412911727431 -0.17872952940270256 -0.079846577679973857 0.1430189401093819 -0.12817055953774956;-0.013445026886667983 -0.24158175435523044 -0.14757743866607909 -0.10457200555849044 -0.027796953175422849 -0.48376450048563607 0.026390750173405357 0.16096665301547217 0.17759738657862145 0.079152206847260848 0.0082089726695654848 0.31876427286380149;-0.11051382400881878 -0.29204857349109525 -0.28236726723260147 0.24552584793887108 -0.085263495541240839 -0.10599840255308449 0.079328401474885624 0.2937892763981082 0.24289460572257843 -0.087287827855104916 0.035572155365755947 0.14929508609664527;-0.024915717499454874 0.09776338973986802 0.14720532171598949 0.24404153260256584 0.22051044965611899 -0.0029380191652064406 -0.033277463204449506 -0.1575381395977096 -0.149426587178971 -0.14518277782354358 -0.10638073660953469 -0.063358050207604058;0.33976879244301017 0.07227253489138169 -0.17249333740431039 0.18549865918575537 0.18039310996027322 -0.12246902487106377 -0.088255803428034713 -0.0047546651208848455 0.090931302718062171 -0.096939914946496383 -0.092254942895895656 0.071482567577996675;-0.078391645766169207 0.59804841677412357 -0.10773026410343667 -0.08689090508713615 -0.21208781418328604 -0.047335247257977366 -0.011153781824111308 -0.55524651709348316 -0.18475252331292813 -0.011445408648557486 0.098904649731848079 -0.083418673367936055;0.28294160120270123 -0.18465155159202309 -0.22649485535809105 -0.22821139061629014 0.17239011161648157 0.18244932842891659 -0.19528569099386953 -0.21736835797289245 0.078047779881455587 0.074775376243077604 -0.028618042349743498 0.022098990590150778];

% Layer 2
b2 = [0.45781631303224024;-0.38012494307202221;0.27772774293837554;0.058782072653599887;0.22110438293984164;0.23417947220474727];
LW2_1 = [-0.38074428756344081 -1.3077518717589443 -0.43530613220975306 1.8371128772247234 0.11795768609184422 -1.1966889636447571 -1.4489697017592338 2.5851005888902727 -0.58421434523116533 0.15915543884632985;0.14867377958370562 -0.28808815518652131 2.4946720336867032 -2.5637040243381657 -1.3517498317176653 -0.077103689396784289 -1.6903820959085916 0.5642872521394493 0.22838199565116518 -0.93104317210073329;-1.4165706741267263 0.45453866338958149 1.4288995639548694 0.91267445310645656 0.71068628318254812 -1.7239069737681381 -0.037473471083268386 -0.90433233056971551 -2.1527586854148764 -0.52183166516612833;-0.26590816070217616 -0.35714422006948898 0.82661185840675089 1.4414216350392459 -0.7039962547911891 3.1582143052821601 2.5845499416807547 0.70120230074162149 -0.40256188045226288 -0.30925468780961851;-0.27391871885611724 -0.30376696873668696 -0.84367695934255016 -3.2905757881631099 -0.53523123512685855 -1.2532081105778272 2.5771406120390203 0.60515485085859499 -0.41503379702611226 0.31328277027611956;-0.3979826456634894 0.24772941605168067 -1.3791658155683924 0.23685558862446535 -3.7582744469898848 0.70178280342331179 -1.2311595408165712 -0.48070887797342388 -0.60126728483525371 0.50950144054084168];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [6.02925470600584;5.80239714539318;19.5174170890666;7.66459323490276;7.02419411493605;19.1826794012276];
y1_step1.xoffset = [-0.156274843142796;-0.148885540376267;-0.106342153265596;-0.133510159664189;-0.139378367975141;-0.0515426322556757];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(3,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(6,1)];

% Allocate Outputs
y1 = zeros(6,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),6,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),12,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
