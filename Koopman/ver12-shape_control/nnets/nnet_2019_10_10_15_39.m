function [Y,Xf,Af] = nnet_2019_10_10_15_39(X,~,~)
%NNET_2019_10_10_15_39 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 15:39:39.
% 
% [Y] = nnet_2019_10_10_15_39(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.82532776301053;-1.71125346058976;-1.5187386742199;-0.934000861229765;-0.654870640188324;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [0.562661758271945;0.634321348391472;0.689945943153594;1.06857136798463;1.59400027932063;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.042710439623032288303;-0.96388559617132441026;0.49275277422381363879;-0.47947419626559828476;-0.021170844154734528436;0.050573285375331143709;0.53647558690494689948;-0.054439114430716938065;-0.65156583180015315016;1.3108549578934172164];
IW1_1 = [0.03261288214741057262 -0.23809063616668446617 0.026027398846890689721 -0.03416271986593669846 -0.028549561414100987217 -1.1641374082959785596 -0.64015738124604915082 -0.29152431930699884699 -0.32044937068939860492 -0.23876829374877403533 -0.10069953724703224751;0.13166153214876491484 -0.10714107646171135146 0.87841275127268558798 -0.0065624460275968930778 0.53632517160673509604 0.010019961324375919326 -0.67295478193742075401 -0.63993127611061173532 -0.013691433876183592075 -0.37235774585271119719 -0.31659707162579603379;-0.22228736190576733889 -0.038009372218113020303 -0.32038785463075908355 -0.038549460179717304209 0.02550654955170535837 -1.4950830204577099103 -0.84619545937486528864 -0.38957790172751338709 -0.42274431295171593925 -0.31100378644400678008 -0.13137877256472418885;0.10161257255705775926 0.095531636810549228067 0.15854982839139197814 -0.15956781727361887824 -0.077255688152926924039 -1.4571173508039745315 -0.8420341160841164907 -0.38833795180542751702 -0.40708338916045078149 -0.29729979399033912291 -0.13001209520730089286;0.18197382394779926251 -0.45179041890862159381 0.22502182450367630429 0.092691871032378525541 0.0091156895009604308605 0.061746850499844151139 -0.24532210552635033696 -0.29582631828222022419 0.18980311241086700313 0.135401321308079442 0.064218528310849759544;-0.042125738544038379696 0.12745964093516867766 -0.043317424827048298108 -0.028602013458151619857 0.038049969769278456366 0.098588865054661078968 0.49341385620966959902 0.50329965794041131577 -0.37669919024426135046 -0.2782994495008128677 -0.10270447996091626452;0.26420071009561740816 -0.20994714385590537709 1.5609641242371752323 -0.18505271981144219562 1.0889259271479829749 0.096586107060772363742 -0.25296289825477835667 0.52705854147634079165 0.29156019443743674824 -0.25881349367439054898 0.35779997550633763082;0.040792772396298741799 0.21310972900120561668 0.77783872825454536404 -0.19742644115234139757 0.62666202081835098436 0.10713283574975684953 0.13974082099425214065 0.223529223036982444 0.13700048737602926741 0.085929694955214339092 -0.023845572625443102466;-0.069179326575083258111 -0.15226920476811089955 -0.40810808881550153515 0.23721496101709060866 -0.38926033671104792733 -0.014915611254191836477 -0.70081439836796699527 -0.72927528224740778562 0.035698012464634658325 -0.40400190374464861609 -0.28623033110251266953;-0.43477991972011392763 0.045134216563565206226 -1.9693341938384187895 0.42660951686264536598 -1.3548912816891669486 0.18762207855880938534 -0.52593925890704251724 0.79631696571080068381 -0.19233425299869158498 -0.068815428534481887235 0.050923293894571820817];

% Layer 2
b2 = [0.279875679110692277;0.57287398995497051946;0.38113478689456087301];
LW2_1 = [-30.11511572651370372 -3.2110993600178159291 15.606843904978418891 15.088892578366031927 14.892118392827873308 11.952914922838045797 0.11999205360579795476 1.387097761810073715 3.0351522540724875654 -0.53604041332680008036;-18.15704256938511918 1.8262986342836295961 9.5508923618479162343 9.164931548880357326 9.6928207724147412705 7.2583104506828366453 -1.4363661742033637658 0.61553658863993143679 -1.5945336399565113172 1.0122405291657194937;-10.129459544147449535 2.0183978460699569801 4.9694930338360787658 4.7746655115240548284 1.911695921949704724 2.4516826222621306286 1.4180535249735530812 -4.5436901232891901969 -1.92754330205914437 -0.81178646579790292304];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
