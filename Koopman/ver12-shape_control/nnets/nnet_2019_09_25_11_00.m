function [Y,Xf,Af] = nnet_2019_09_25_11_00(X,~,~)
%NNET_2019_09_25_11_00 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Sep-2019 11:00:13.
% 
% [Y] = nnet_2019_09_25_11_00(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 28xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.392394275851464;-0.510244428642363;-0.501986316523756;-0.371058380968684;-0.36215196173858;-0.534175726158681;-0.342530590475156;-0.38456421904716;-0.409104118458054;-0.382449101831422;-0.447151918180926;-0.412327659045142;-0.27310413033015;-0.317600274489114;-0.24115316843727;-0.284510543192972;-0.329731870062972;-0.267429432572253;-0.35011139637633;-0.30007873299909;-0.338628117362352;-0.255564665793069;-0.35292067498051;-0.353133843369879;-0.341265019054495;-0.340261170086751;-0.389583850262427;-4.44089209850063e-14];
x1_step1.gain = [2.47247744122538;2.01807058102319;1.90771254543129;2.84757951115024;2.45705479459526;2.02452952683121;2.97674836208629;2.68370822622252;2.38761080238807;2.52934993318126;2.31889222463124;2.2811073403309;3.42811243633894;3.35825701168262;3.48833101915456;3.47055240407503;3.44858543461346;3.32822646582829;3.08746606710992;3.24578863049745;3.01092090995433;3.31233757772837;3.00683732272261;2.73152119949267;2.95530241420986;2.8619715892497;2.74017823641817;31329388712142.6];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.8900973554279233424;-1.258183542066448446;0.53589300497726288786;1.4751465986640570627;0.00088991082715273242543;2.166014804279328132;0.18279635022139190115;0.87642685193792835285;1.143589308404342253;-1.6479935732860440112];
IW1_1 = [4.590609597040333334 12.159339030190011499 6.9198967079062976282 -4.6277904385735224579 -8.5434605116291031379 -4.1474524480994015008 3.5991519331679278082 1.0659001522037312437 -13.594211667316836056 -4.9952274980518840408 -20.602777571883237329 -5.5179140430948585561 -7.4089619514285285362 -3.7477771599243876466 -1.9134890763528988877 -5.2939448617290576493 12.40412654297012196 21.407300256153902751 5.9137652124967274858 -0.60268409657394605983 18.540078727003965753 6.7532936323138947898 9.5962175456232277071 2.7057635485327367064 4.5564922982735449608 22.84318943715243222 6.7087151462032466043 0.13121838501958724144;-0.45480772994855889202 0.25839715257644085833 0.61529817443274148481 4.1176387918909043151 6.3260598645249901395 2.6497315718029628151 -1.4314077587023101845 -8.1569328660091571237 -8.1620616511201014021 0.66369389972855941107 -1.9416735463172765108 -0.55587105404820769117 9.4365301151836256111 -19.986940185355713595 -13.269579772304521015 2.2017773564989084889 28.929045672531000122 -11.290546626691265075 -14.194516858202149479 8.6338681526371843233 8.7441455355590367304 9.1828891000043739723 -11.1560986691339874 -10.464656980214144255 2.423180911787907732 3.1173579885181315063 -0.93467281127294832288 -0.12099676794768757238;-1.0763026261786345916 -2.9971341009494856245 -1.5530424386315537788 -1.4302231254058430654 -0.80246429633187044139 0.75024293043782674939 -2.3100225360412647291 -7.0086500018577098103 -13.463051831994372165 0.034041813375817679688 -7.1260006058806784068 0.71327204434871549488 -0.092835875042959190018 31.99453730830568432 46.538823964249814935 1.0766629322266652036 -33.021408349951386185 -2.1133567310436558451 98.587209302944103229 9.7277490336427501205 12.795865739650476911 -50.313662890556130947 -101.67351865548967282 0.71388405904620089171 6.1586792117607371821 9.4148281129236828235 -1.4667703716107238776 0.030003751791842676877;-1.1459022500428632796 -3.2040313573559489058 -1.6815921796432018454 -1.6807243470305548438 -1.2192642768238834972 0.49559891541738415599 -2.8793417195990933521 -7.5310700282540103956 -13.222066285693005128 -1.6785022240543585603 -6.6631065675291338835 3.7974408004492565816 0.0063285021322622148077 35.981095840077799153 52.041741550736674071 0.89490167929798314361 -33.383165481583326084 9.4323615996080878432 117.78522588078557476 11.046843958152770426 14.979812104120258098 -51.948714737876116487 -98.349535520095628272 10.772103808180707674 5.0719282919460138004 7.4794540619189202602 -2.2424834560829629559 -0.00027224738361365232939;3.4301023695713768191 1.5860162246232256678 -0.65224148891681688056 0.56851703271882325641 0.58657966845447018223 -0.13822062300028920001 -2.358047743916789063 -2.5390079619423349122 -1.7794223961183155414 0.72246887687030914016 -0.14473230849325041669 0.019309206922244057797 -3.0602925198203942969 -3.8738723315600775976 -1.4215995368484832806 1.4994162943379480968 -3.7449698177279064915 -11.155417352591326718 -8.9686535133476681381 2.8998684718192571097 0.99090546094809639488 -0.63325391616878867751 -4.577520402037677627 -5.129784431019935198 0.60625282291774640342 0.041280695597950514686 -0.3272747016674437126 0.38670569872250437626;8.7714781224803672899 15.662196215409982969 4.7134214641813381164 6.161673198922851924 19.805743471922575338 8.1513220328934501424 4.8053187399188175277 2.5480222264231544571 -9.0073090015673535902 3.5707511511356866407 -9.2505279841651262274 -4.894990127254157386 -9.3068550103097891224 4.7560875691439532531 7.3712964461520318338 -4.0220965952736307258 -50.213768855347147735 -2.1158639458108838838 24.126354139974967694 -4.5177886848828592292 11.810692955821309624 -29.296530635911995688 -0.70376269663013890643 17.142749453912337287 -0.88994828445601537048 12.204004715166654194 0.32904528574235358818 0.1942975609913112911;0.80708897771872767368 1.9633835681378111193 0.66633075045851275497 1.8452579381010505433 1.7109393983646199455 -0.12670689828834738599 2.5724520107101822575 9.2186397197413452176 15.542005423161660005 -2.1146204140952815642 1.7286247291537750748 -2.8062024356185024665 0.62990813230393749578 -31.557223845578427301 -47.780581094232168482 -1.838981604211312515 38.326724470548668933 14.104791821379222938 -98.251873091911022584 -11.822717219558439794 -11.201926351815709282 57.395300044689093966 122.6534823301384165 7.4346514554081934989 -8.9966356178344568661 -5.8724019485776359772 6.0025354561171209156 -0.073861939756893285614;2.9299813834739700802 5.0073887661203873023 2.0089489834157507886 -2.195676401169077252 -2.6367058813191714961 -0.47474213768669654145 3.9665366313263819009 5.0763979515139077137 4.3244368144064004866 -1.3435902320344963456 0.6547020906373131055 0.17022412710366177646 -7.9615085905173357261 0.022384846246502044381 2.8369105009487101121 -4.1985174348374147968 -0.8781081586869425859 18.387390046764462426 18.037691133946008648 -6.7634260762710898263 -2.6743943823033027307 1.0475222468197946668 9.114633120894986007 9.9710687326721654244 0.0040470017758709115122 -0.5707041730356298137 0.30744050763594221731 -0.64718017970798358274;0.71448203085725270345 0.30689037437822780374 -0.28591507124101034343 -4.5464146305589370201 -6.9601723924807128441 -2.9380695757062058604 0.89054136097272984518 8.7185951707626063723 8.2466001291207948753 -0.70341871126935406888 1.0966413149078464428 0.23338712583937845646 -10.964144592407581769 19.412854745036852933 12.927635692862635253 -2.5794153910557438003 -30.966226112270945237 10.588905303318506768 12.722697306103247783 -9.8925716429066632429 -9.1519096129100514503 -9.4329604691114088411 11.792036309037071007 10.039600709345915419 -2.8170973103524579173 -2.4101190290211631506 1.4084498659772222151 0.22741666030956422806;-9.3697646593837298212 -19.638642555117922228 -9.1581640590385031686 -1.9735224770834500774 -6.1662136078164051511 0.26154480305024452313 -4.1921897707411481804 0.2693938696303338487 21.391616426545130736 -0.25219205374607001069 25.179242865088237835 8.222687263114247358 8.8793610338392241488 7.9059331969243320515 5.4513394895493201275 6.4479295858303107281 22.59566658887535695 -14.556339380017028873 -12.483322605312414666 -0.63788768801323569857 -24.770798752443926816 12.094754465983470482 -13.537566525074185009 -13.383352525877802108 -6.0647049780240793737 -29.929669629007957354 -6.4534295062876534388 -0.9434383563239119308];

% Layer 2
b2 = [-0.11212305837413102938;-0.093216495348761335693;-0.005303380898608386386];
LW2_1 = [-0.07142632483199250204 -0.14112875528212412424 -0.087898765392377370409 0.046541581638383962283 0.79052741269526982659 0.0049222066257161994907 -0.055801328162690941315 0.39839480197023330321 -0.097516423442459629345 0.0041296249851991949364;0.652422116599064017 -4.035071018367769824 0.37582293811221506585 -0.18525318537936416585 0.29858128071704476136 0.55316846130786678781 0.14866058676731985777 -0.61333909829491994881 -3.5798154577347442995 0.55199536834024276466;-0.042627042577241730514 -0.079686167414959985233 4.9202389634587051503 -2.2937410846461618874 0.035618952709019748026 0.022230909729285167065 2.2683660849593039188 0.060587133574341971165 -0.091428690392259523434 -0.0189058823771080034];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
