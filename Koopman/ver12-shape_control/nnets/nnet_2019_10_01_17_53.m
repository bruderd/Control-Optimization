function [Y,Xf,Af] = nnet_2019_10_01_17_53(X,~,~)
%NNET_2019_10_01_17_53 neural network simulation function.
%
% Auto-generated by MATLAB, 01-Oct-2019 17:53:38.
% 
% [Y] = nnet_2019_10_01_17_53(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 10xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.749720656203565;-0.891308949473909;-0.664105989705942;-0.617739618427872;-0.696796887959158;-0.593541514140334;-0.475816774691974;-0.437771949090291;-0.682102362765662;-1];
x1_step1.gain = [1.22299741919723;1.18669128331523;1.58384680219454;1.49188307716652;1.42051694502548;1.55559283715676;1.98857166841134;1.93600032324937;1.38915837625341;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.80756629481159480921;0.64502188446289654422;-1.0083785994500542582;0.46099941848339148764;-1.9571564264827396862;1.1655484098977548779;-0.334291675197192939;-0.50904391130326864801;-1.2194287870849789268;-3.2446826606096488277];
IW1_1 = [-3.6908500684602696396 -2.4287504721457651158 -3.7618508190244646094 1.2797548294890959131 -3.56225319588656264 1.8056058459266242089 1.9065031782940766725 1.3813307091166076024 2.6296009079598858804 90867920552068.875;-5.6519571459442623507 4.2844069928026105032 6.4503278111754411839 2.4221526053394124567 8.6999647204959593694 1.3802057916920662528 -2.5469299995681926596 -0.6439796941679820641 -5.7326400746139123399 -64571912434639.023438;-2.0172902817555562471 -0.54857999731031747981 2.2366791566028734195 -1.2380045580201557431 1.6734789610556894957 -0.36282875404333314595 -0.26779159166756832944 0.010851410183283040356 -0.95833009708293348528 -1862232629767.2746582;-3.1899342731730961908 -1.2474921935651244187 0.34070867697702544863 -0.45328828403662863034 0.49050523341097967966 1.3491361339125598207 -0.09310938974131904855 1.1421173966818125578 -0.094343720863391072884 -97557498303146;4.3652340163852958455 2.8028401900529784641 -1.2553770498277743162 -1.0664601776239448494 -0.022185653835393406852 -4.1983425748554701329 0.018238443239789015049 -2.7483453524569538828 0.43794722006611491727 32292960657387.070313;-8.0242962510166631063 -0.25608627453826332543 -0.7837810066056284386 0.04482355890809223975 -1.9545757544211688206 4.0125244860297808458 1.657709949062863064 3.0188317529790227312 0.29701011827336515347 -81828270651854;-3.2314533990424543219 2.1028653523877975928 -0.40452264348104738367 1.0438634356379010715 1.4933645557280315064 2.7869432656337860266 -1.4506053582429669913 1.0216004469086614748 -1.1009715390317014183 -79168473399100.6875;4.8071403542303281498 0.91197581258629656364 -0.42172476976551170891 0.82473049485588345586 -0.085036988590080103689 -2.5860165552282849966 -0.057131002984774942322 -1.891456538085271033 0.32165005848617728157 73646638298692.09375;-2.6609528715669075183 -0.11340995384914384636 2.5896956685443401902 -1.3134424205835939503 1.8180294300774120231 0.17476394067781353403 -0.53289742527133121541 0.2898244183025722176 -1.4098425263003220298 26747505121875.890625;28.389771409124683998 28.375265906325580545 42.830786877185687445 -5.1729253440936924235 52.886843104900790991 -2.5248746441982787836 -15.090457722573276556 -24.342254404092724229 -10.337635060896912975 2206574424473.7802734];

% Layer 2
b2 = [0.16541337011145734737;0.20929975734559805312;0.17529050340059942892];
LW2_1 = [0.80361507743369742229 0.39746632425674160993 3.1583076255845363711 -3.5392807025306378677 -0.39054429043384436548 -0.95730810454551429345 0.17984016127724786194 -2.9664167746339216158 -2.6566647703707286787 -0.026679686452425774995;0.39698835407393501251 0.1885886916383991696 6.94620788361645225 -4.3113851715691957622 -0.68327819468432071659 -0.69034229733536667251 0.70593480358256588403 -3.2875499902462275159 -6.0222781015234332358 -0.11553112831872124067;0.18825056811571194704 0.064048137909689675795 3.3771356705286486033 -1.8877581793483135808 -0.28802680055526103109 -0.37377096358399547471 0.35531071172619932419 -1.5644501125409684406 -2.9563874515200145865 -0.028751136814129489572];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
