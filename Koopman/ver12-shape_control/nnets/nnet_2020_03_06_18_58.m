function [Y,Xf,Af] = nnet_2020_03_06_18_58(X,~,~)
%NNET_2020_03_06_18_58 neural network simulation function.
%
% Auto-generated by MATLAB, 06-Mar-2020 18:58:13.
% 
% [Y] = nnet_2020_03_06_18_58(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.886914585955709;-0.744238567112595;-0.416283397251588;-1;-1];
x1_step1.gain = [1.46727731793285;1.26407676173263;2.56636660828267;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.7055622391974756269;-2.3394382730241098933;1.2017265408466359933;2.4762086214656475747;-3.0270726035380572938;4.2175381863002927574;-2.8421259395524769431;5.7928687232239317595;0.4960196837536202108;-3.8629010253601920866;1.0139080707492515998;-0.27346075813327086479;9.0518662376892997656;-3.6985519542191225284;0.062565627817072769212;6.5563392481006657064;0.72888426771769421197;15.543796709677025092;4.2773009615743635692;13.975993001724946296;0.055652648863257686562;-16.850577721855955815;-3.8186141054598072841;-12.769275002974117328;1.084312085989636909;-11.883751781513225865;4.3020014160114783408;4.7440115210363034137;3.8293849073937620275;-5.4432923922229026203];
IW1_1 = [0.42174244902773183608 -0.76067279789696107262 0.24503765259083315486 1.7608559980184526061 -0.47897379407472201462;-0.51391962145660019523 1.2786528977303652788 -0.57283991424340841014 -1.3740891678190292335 -1.4546155285279107616;-0.6106800862487369308 2.1688396994473904122 -0.056574082331896501097 0.14046095599656813202 0.65940765129771561348;3.6622173439121210592 -1.1433716280841663693 -0.65145527540833447766 13.020386759417984734 1.704317036389008333;3.592394834181037222 -0.90343079307279006152 -2.8325032638301324006 2.3581968469329397387 -1.8517609686586165019;-0.29138824739508778494 -7.1933103576348562669 -2.9271622467744595752 -32.739712494511316265 -8.7483549203476140832;3.4715632653904200389 -0.88314185502087794166 -2.6787655262144554058 0.078590138688504382336 0.15975219205308321957;1.1512851343022236783 1.8246029098466656215 1.8607891983472477637 4.6597585479429231015 -10.055568429284225118;-1.8339210769199383311 1.5615694849109034159 1.2899049562205961994 2.0381775535210393535 1.2353939144452734666;-1.2029003953036709884 -0.41258803671365024135 -2.1254985432637552023 0.7448717817768051308 4.4566844550353845733;-0.070200941774933786621 0.49017984094228000957 -0.19265456557781632241 -1.2205159697746768011 0.60630172455555908506;0.95469027192495348189 -1.8223498310521513144 -0.20448563232106395371 -6.025764925719700571 1.6227947640006668006;-5.640135431539580857 9.4466678593610762249 1.8538861768690098053 31.929331165127628367 -1.8389382020672262463;-8.1071805382113240057 -5.5202169334887862817 -0.18094521172854510782 -0.72262745829450292234 -0.66037453419743119554;4.4729098651241390172 -2.1239233149868530504 1.1397494373982359761 -4.3203906061740218192 -3.435139798997820737;11.529769439436307721 8.6759346714470133577 7.3025539180828422658 -2.8885646647635851991 -26.621242005376235085;1.1011449806272046725 -2.8730560160335465447 -0.19063914208070520395 -0.46337565916804274169 -1.3401218607002296501;3.4797151903172700571 3.1723995069297061811 0.63948105003030386584 -15.53465794464113614 -20.800125212413323794;0.98583003300490734677 -1.0296744138602371699 0.0014060759284208260156 8.4232415420598432121 -1.1089038617740591963;-4.7599244748869695698 -2.6899201154643312961 -2.6571674678033407879 -10.911242966817392031 -12.397166500635698583;0.65271913387100566339 -1.4386026784525993705 -0.044141737975850477149 -0.65203216968797605979 -0.19898308590408422813;-3.9237261430207892587 -3.822509983083246965 -0.78948831670307528796 16.238746333622959384 22.468565729839959033;-1.4604554815421220137 -0.70232705611888901487 -2.4101828771150612951 1.2981579068888051687 4.6139751331383180855;1.436902823323177536 -0.016261302358168930327 -0.99953149845210698121 -14.213132920994231867 6.1931336684991045161;0.82360939662887078239 -1.2672503484468702339 0.020473230479326570003 0.017111877956456952865 0.62716755225301146215;4.4623954968804886434 3.2140564284257795435 2.7755518176814333309 9.7151188691436622946 9.8217384429005019086;4.0811006045481672544 8.1610055199881639254 1.7381582709932479336 1.2319888469832860345 -1.3493435327645528776;-2.0071773526119098818 -3.5521938191845712218 -0.31467116100640213361 -2.1158829976955964014 4.7147852430571406401;2.4720719533197783591 4.8617282943256956429 2.1374682568573986075 3.4831676133661284567 -3.6371613569168088631;-0.64812821081006632973 0.55275780677804564611 -0.087431028440981453653 -4.9283959751605284083 2.8924375899552043911];

% Layer 2
b2 = [-0.97956442269340560092;0.86623458739013681207;-0.69534224330333549435];
LW2_1 = [-0.41452951789313585707 -1.3106172578676116292 1.9567625539966111425 -0.17398836841562903555 -0.30903778977428847385 -0.59976605393336412941 -0.15319855132057588754 0.35894788948507516668 -0.67094788163678653614 -3.021465579469097662 -2.7302537969547748808 0.25097168922782286948 -0.3721074138302576384 -0.026843336248177432357 -0.32342160523651103388 -0.14097075430844954735 -1.5864613639173037463 -0.07427308440321779559 0.64156010468381508005 0.83752593226460447795 3.2691629943182829443 -0.054835438643134351566 2.5733093317453041848 0.34403415022297462178 -2.3760370325787536494 0.80902175194152026183 -0.064337269574433531005 0.042524906883348423392 0.0004295856707575110723 -1.1421750422561469662;-1.9244892632720556058 3.1266805523079228557 -3.4588643886306456032 0.44912772097465714083 0.6030470331779854698 0.56115817480864782496 0.13100944659454785701 -0.33000014439834213231 1.0477900304085630001 4.8742878092530652623 0.7191043247786963466 -0.1675247486882164849 0.24343155078561690141 0.16624983066471446524 0.49015706222727856156 0.079321587488355771445 2.0584664626019053557 1.0257285950620955717 -0.8454602135485490555 -0.82412007137206910734 -5.0730533450928678718 0.99106594353469867897 -4.1260080003011587735 -0.063014833926132787778 5.9105317196088726917 -0.73168090084837356102 0.20806427588363721193 -0.070696339655202264374 0.22004784197889748487 0.98282648704477870716;-3.946210050770933897 2.2075991326693613637 1.42683505178082215 -0.19270589159358464393 0.23218354648637035131 0.56794206430734228697 0.36468223639385083379 -0.24177071062378635569 0.67316480182194071702 0.025304961532529549051 -4.7952306833032176669 -0.47535533666610241266 0.53899769858778889819 -0.24106280756374962038 0.016510733781178954516 0.14076852494414621164 -0.82244165434721638874 -1.5221287492626758286 -0.20090194597935873144 -0.69779674306361705316 2.3999013297928191157 -1.5009006316080997223 -0.35088331219225188384 -0.62696433760748404573 1.973134730998986841 -0.88535324386287961307 -0.24402171644302533826 0.7906797504856868386 -0.29398645688509905671 0.73003965644056179052];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
