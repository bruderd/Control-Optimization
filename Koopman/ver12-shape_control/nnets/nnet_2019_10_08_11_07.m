function [Y,Xf,Af] = nnet_2019_10_08_11_07(X,~,~)
%NNET_2019_10_08_11_07 neural network simulation function.
%
% Auto-generated by MATLAB, 08-Oct-2019 11:07:40.
% 
% [Y] = nnet_2019_10_08_11_07(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.66904481973302;-1.56373294439454;-1.22860504768207;-1.3061463782146;-0.949512550212366;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [0.517241332274923;0.678253416733415;0.886882266693122;0.765131413845666;1.0601203069455;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.078787135248161638268;1.264641090408227031;0.92588132004444378964;0.79723390737789601168;0.16913553686491461514;0.84342551784817243465;-0.28673132703261910992;-0.76300099518693509371;-1.2480198013100196608;-1.1383641992213371363];
IW1_1 = [-0.29027562216130992079 -0.36686530059062621989 0.15288867994998850408 -0.37695087373345209647 0.037783023881764923879 0.66141449695503851114 0.31489638122339758119 0.13364051426154541224 0.071984120658328459852 0.0030913130118262635397 0.0092792781908947151448;-0.49482866265251163052 -0.13548275601504994325 0.28366472168168122003 -2.7526694037625292211 -0.73395792534632442461 -0.14602440738130140208 -0.52734663055123942588 0.50009128366644606256 0.079331042558217643168 0.019368275326322331037 0.1445239272917232809;-0.2456679652169265482 0.13300440362974336184 0.1544322848434684925 -1.9295703110598791952 -0.50244992174863900569 -0.35190419192375993473 -0.028827889938608394771 0.0070805267013855817393 0.16753350497778571326 0.11813667148618772762 0.079043077765043448513;0.06077263234003818515 -0.12284405105574042194 -0.20243643060041027759 0.053184762452343395389 -0.27882502549675319825 2.1298003606164428447 1.0466270612544466001 0.48567075457597214116 0.63087686051328617509 0.40406603666381613049 0.13981580736927720632;-0.51460198474991103446 0.39791160681423121126 0.16437297880077239576 0.22110345231081551809 -0.84468393859122736789 -1.6963658485164210266 -0.88940873780172824414 -0.4011449776446334714 -0.66175996230592926128 -0.42648760831901572077 -0.17860591239880985182;-0.41627366707829616121 -0.25606016916996504618 0.25785726595310248799 -1.80178453473243394 -0.39392073273593142257 0.11792229834654911758 -0.1553015558215045111 -0.049929688034443503453 0.075340148815762147949 0.034718039991090854368 0.063345669488169553674;-0.27207696868826997116 -0.13570447119624773347 0.12991992671526880754 -1.0789433164706332402 0.031374278490699868127 0.35706775939571877565 0.47994660924041843142 -0.29794956498905711406 0.050680417715495154618 0.47068981710807489272 -0.35320334147887361143;-0.6039826922848299251 -0.58098685565371710471 0.44489367405761492957 -0.28484185906665676624 -0.20852095103887119398 -2.3194510950014155526 -1.1148493520425484249 -0.50480345319186525899 -0.61550550682824056725 -0.38338639778362604282 -0.13535141170774955821;-0.5222453546705406735 -0.049577315067004162907 0.22363338309227431822 -2.009957171363195183 0.78209324977315330951 0.10701404223710546393 0.2639767229034645224 0.1639903396679634473 -0.010925448120680070901 0.096092858469182584891 0.11279664886230787724;-0.31268195961012396067 0.11553503376527046731 0.22741228666719418006 -1.8578487963183758502 0.69322415648371393804 -0.066827981670855823859 -0.21636915494406783189 -0.20292742887540901608 0.056941863728792542487 -0.091898356162039729345 -0.059863107549157565379];

% Layer 2
b2 = [0.78728291589257248795;0.83176658407908043991;-0.064846265704111089034];
LW2_1 = [7.6830417270634852045 0.61116171175153166661 1.7916318718605275251 -6.1818287681921519905 3.0974566095884270567 -4.0760847254735255163 -0.35880738779908927238 -5.5080287445592270856 -1.961157503449833861 1.2054604058947557821;2.1237565496931365416 1.5084048397049532042 -2.5723329698741013161 -4.0591776515017068405 1.9714012146892525568 -0.13573114950146097923 1.2853791572896251516 -3.6652839411222744026 2.7751972560784907706 -3.3300369529481459452;1.9759595829579956749 -2.0057467615255095694 -0.19683284937594125452 -2.9363424260037911395 1.1913274311730366328 2.9873314891073565747 -1.4101745387279018829 -2.6924549933884351915 3.2908883460120113007 -2.9560424653998667033];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
