function [Y,Xf,Af] = nnet_2019_10_10_15_35(X,~,~)
%NNET_2019_10_10_15_35 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 15:35:55.
% 
% [Y] = nnet_2019_10_10_15_35(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 10xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.0064546195102;-1.59263789532822;-1.69376108840923;-1.01147936025086;-0.853946009236609;-1.00334807979479;-0.868539961989501;-0.475645079817848;-1;-1];
x1_step1.gain = [0.468367636688883;0.676037238922945;0.629616030050692;0.938320357949417;0.973323516934126;1.05496352029134;1.07463792061029;2.25990454785755;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.9109055880221517132;-1.1858193916592540962;1.0913109140597048174;-1.1584893217962553003;0.4049305443638970825;-0.10542708250354120014;1.5871047224085568228;2.0903085837094526056;-0.82532888741637155938;1.8708583532545084438];
IW1_1 = [0.025986638693239135639 0.36566787607288075979 0.48890571672295057848 1.5758349441354124743 2.4253510508017033231 1.3835718750377687947 0.14590648927108848532 -0.22763097089596831535 -2.7808873811303862489 -1.0725922388919819639;0.3628170264825122393 1.0718165815021571952 -0.47724640083132141566 -0.64658452783958975107 1.5062391473347744864 -0.32347226156354080828 -0.077017908557210801312 0.20655237037159396296 2.2402790962654082207 -0.43466011682754684964;-0.98534906185013937385 -1.8419652303318032605 2.5541196738336688909 -1.6676827953655071202 0.39895934557170620316 -3.0985029128508490004 0.83900509749259555292 0.33170156991122945467 0.32810613386215942144 -2.0733552005529314322;-0.066032254500612896919 2.372079379374766539 1.1506934573943854438 -0.34103359669721483582 1.3252631814477555672 -5.9221429050782017356 -0.68414672004239363012 -1.1448123693950318369 3.5744288331496583133 0.69058346336461717829;-0.40065554784597262605 0.27616233710745446972 2.1085615877225993842 -0.0027492964942486802088 0.71222225338562095143 -2.752351561735702834 0.32964414257967689093 -0.093329410267979126536 0.12263909508330785025 -2.1768145875612479045;1.7987044914226635317 2.398200591117411129 -0.38641741252778860627 1.1260878432917234004 0.67504313793014214529 1.0176788740347946227 -4.4933973519710299627 -1.048260442047368457 -0.61003359688656122461 4.878932085178820266;0.16664094476480628693 -0.65713636503257299992 -0.4962037828959787733 -1.327202354087951397 -1.6686880579384024692 -0.79206558982584773787 0.072211843769993455666 0.26642764851932076997 2.2102856058619910762 1.1521018983828177351;2.3151461128645407506 0.66216453662777940981 3.052213165421055141 0.4895933050805955089 3.6223853675699273502 1.3224251024493220985 3.4824409738935351299 -0.59785932858199919426 1.8905948094059423781 -2.3771488810990564211;-0.84083058595986004402 -0.90865245020000151577 -0.94964814015167442474 -0.422122041866214881 -1.4278335435260103292 0.94695222679997248516 -0.39233996144856758681 0.54337163239940988735 -0.80114652817789000494 0.950261231654966676;0.47356013460449364327 0.069324661704464024536 0.71481902186730017501 0.6629976932052010774 -0.89034858903751101789 -0.91510850556278278134 0.11672809853035137628 -0.25077288765772204338 -3.1852169973019455185 0.71563233345893895176];

% Layer 2
b2 = [-0.51046112683963906775;-0.44946003355625857578;-0.15625580129081970138];
LW2_1 = [1.5677131319680832622 -2.2953059163668489973 -0.50544564268060121481 0.4430547059700126189 0.80880534810171111904 0.25870815916967143666 2.302888416390744819 0.42668672970192889071 0.31104437091062148157 -1.829093828292368995;2.401370135171805309 -1.3393200648643042161 0.3728608367602968543 0.18378941902837969691 -0.66403994264386145829 -0.22009205410036833395 2.3896513806383778977 -0.46519580592384357498 -1.1536400952216012694 -0.76987497997801468408;0.80249821488700101568 -0.51828259037052126779 0.26581734096175502202 0.058195842699097943829 -0.73337197048784819042 -0.39775147877741168223 0.72287767179933926087 -0.32229605023115776019 -0.70617723720197256299 -0.24377568341873012692];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
