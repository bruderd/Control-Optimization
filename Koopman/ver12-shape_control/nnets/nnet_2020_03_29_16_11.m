function [Y,Xf,Af] = nnet_2020_03_29_16_11(X,~,~)
%NNET_2020_03_29_16_11 neural network simulation function.
%
% Auto-generated by MATLAB, 29-Mar-2020 16:11:16.
% 
% [Y] = nnet_2020_03_29_16_11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.526466664933733;-1;-1];
x1_step1.gain = [1.9016166778046;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4851920609446338517;-3.7967932374053421363;-3.5310322232193214198;3.6163387878585817603;1.5596983280311726983;2.6177057145698223728;-2.302842059668592789;0.89361309898859120349;1.3852463841372317788;1.5740879403118934743;2.2526595726666700514;1.1882138770733863264;-0.56749056538156517071;0.97456249844270192995;0.35695842708768438234;-0.35562765912205240859;0.18181973061032502548;0.10521392289826388133;-0.82711150189471638328;-1.0947935747146451124;2.6298712475170944458;2.2511371005889122543;-2.7017175048927835057;3.0003660907907856448;-2.9029444541164961535;-3.0893983363876134085;-3.8535932078618237995;3.9821574387630556124;4.3877701815184941836;-3.7786848938586641289];
IW1_1 = [-3.4103561508714861361 -3.3140427204809768114 0.82637971152186295853;3.8467623619973081439 -1.6493783502968173416 -1.5786914363191968391;3.9766531081786724577 -0.48381485400152141052 -1.854928083996674415;-0.1212376538605858256 -4.295342752426862809 -1.0041029353849695305;-7.5135356692865276074 4.9690476583838290026 -0.69802558814921744634;-2.4080422248455750633 2.3844032962010373033 2.8994311850766569805;2.5421834153520039834 1.9282818325839317097 -3.0249491932136098882;-3.3622394126809229675 1.3069044318475253608 1.5692727527636789464;-6.2886413812082206931 3.8950865058662089702 -0.77688827946814187353;-4.1762114692240102087 2.1776074898364465859 -1.2927524091495123937;-3.669512318216901825 1.24011909904731632 -0.12699193617317366956;-3.0219847344016108615 2.1026738739777104392 2.0746331661952659431;2.9015974387106253651 -0.16849339798310461469 3.8388055563407630366;-0.20073739209647267767 0.88531940209554227383 4.9398522965067002133;-1.5189044563665168308 -2.4420199347845992222 -3.7716443131777133146;-1.631856433664787831 -1.9556354005611900071 -2.4001614660451271455;-0.87107247091638950742 -2.1745641994868285529 2.8411952308219525776;-3.2753974345057845774 -0.90881144955940862395 -2.7207364248487007075;-2.3716871788069986415 -2.4011627877264896114 1.8516316830603101184;-0.95343055824247735508 -0.75146690329421894639 3.6599387389553119654;2.9404598259936158833 -2.9991571498415354746 -3.8471626635639197822;1.3298404238730301419 2.3514777287948742668 3.0465283555274749183;-0.80289861159972442106 2.3652365871043854462 -3.3672355246464666934;1.8951329616142571499 -3.8453955080088855212 0.072658293798015249898;-1.8868332262300182567 3.077685885161792978 -2.821294656767476372;-2.8225952885013141369 -1.5148153262931214336 4.0615205939079066511;-1.3762982126452008025 -1.6176643592363026958 3.0415912430634324259;1.7697357353952511971 1.7064659730300961726 3.4842409414354258423;-0.15074101374234524786 2.8962299821701509295 2.4826370793873695497;-2.5099546675478103808 2.7631642775754694519 2.1815300752712598609];

% Layer 2
b2 = -0.35685214163545914134;
LW2_1 = [1.0192542411286389381 0.037212142156134261906 0.70448477733380332477 -0.62242296257821017047 -1.0528997341115731157 -0.69834313368156164525 0.48209719299643460921 -1.0966653602118829891 1.7390081282515379435 -1.0524788491149916769 0.94827326759477059692 0.57536635247028578011 0.43281629409578481482 0.44337953187459233639 -0.38949647069901621732 1.212624172516541865 1.1261767503313246941 -0.40982237882847843968 -0.50397335021362943408 -1.2861938767742207013 -0.10491114374844685841 0.35726891881993105837 0.92001982798604031721 1.6984637970029907716 0.14226410550192072901 0.34984196703695835673 -0.10319128713377069551 0.22574348088465254203 0.18048056926837285907 0.21309292396203696751];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
