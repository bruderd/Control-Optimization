function [Y,Xf,Af] = nnet_2019_10_01_17_33(X,~,~)
%NNET_2019_10_01_17_33 neural network simulation function.
%
% Auto-generated by MATLAB, 01-Oct-2019 17:33:47.
% 
% [Y] = nnet_2019_10_01_17_33(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.34476644872508;-0.96159813110824;-0.911667704988021;-0.676676944525988;-0.631564676222516];
x1_step1.gain = [0.709694181281201;0.97638358203474;1.10447757104138;1.49106664585379;1.7101199068683];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.1769373687123856342;-0.51540448259851068258;0.75697709499715826187;-0.059845870692204483632;-1.5937247777144976091;-1.6794274985899260155;1.1896745081415647238;0.035935330767259812679;-0.11955750474241075287;2.8006641228201449856;-0.096638764368473822897;0.97858404088593098358;-0.1296677621980380779;0.97775057668533527089;4.1911985355846095302;1.4723759951882335884;-2.7403530343606194997;-1.4666786740901096575;1.0665289032827032223;-1.8058772105233442673;-1.0105537794240668781;4.351133253678826307;-0.22958950915198084175;0.22347243095613969488;-1.0523696595926683717;1.0265024152468635865;0.12832105696200848954;2.6820801154022149149;-0.74776003497659004893;2.2389695068646302545];
IW1_1 = [-6.2013804465757900175 1.4645514223332443127 -5.0628205086230080312 5.154428036930131185 -3.1454604294819428212;8.0392094155987194881 2.2252218347087233674 -3.0100731852211337625 -3.0240486125023187114 -3.024867315425808556;10.631505639638611171 -7.2968482395484404179 -5.233041710243268696 6.0490899352432325742 5.4709915872709213858;10.350357543478938993 16.688773798829771522 7.7727061684879226178 -11.584493769548274145 -6.3883349036197181192;5.2970716995934781224 5.4477775858385184549 5.3123075805440000963 -6.0457842254467930587 6.8110448934775966734;4.4703393006025873291 3.2255597370961779369 0.49269248628838402393 3.1033465908541257861 -3.7783991647593575536;-11.341359388310898737 6.6757270928844709701 2.1207149814269214971 -0.79677944318706761528 2.8528351096778861162;54.244879129910032134 -18.781740974765551044 -12.37601816229285312 -9.0084238794051998411 -2.0723019257754993205;6.6795827029135130815 3.7444315668156589183 0.65429940898034177899 -2.2720049669172772688 0.49072770607530696862;-5.2433784147064050885 -1.3012986479401114082 -21.595242037473951768 11.398247365030529821 12.456613490704640412;-3.6033540690052454636 17.820527370327603478 -5.6306498796830943832 -13.063187893390358241 10.322881636580760301;-6.1283062088122051136 33.290601797104223181 -10.047214088376639651 -22.580683611826973589 21.30793736429104257;15.154833144530558187 -2.8681620764056798834 13.016444962733274338 44.406544357258589173 11.691011225505073767;-0.63706601039658627972 10.983213460781866999 -3.0279866549237191009 18.42312377669324519 -3.9880524178356582254;-9.2923145544398426665 31.132095576679986948 -20.062838047134896158 49.868893616150032244 -20.477786579510521392;39.243627331999228147 -6.3075277825478242022 -4.7523735135181457423 -12.430119971838191617 -0.51252152956394314565;-12.702070529681083855 -44.282839227612377897 -43.923423123272385737 -7.8202470627868585495 4.8655907840620011839;16.475065716667810278 14.374674837381707704 12.404051539639754154 34.086197033835851755 18.875854570151179956;33.842615158778919238 -5.6085161892452379817 -4.2304489085745267118 -10.516229340289038774 -0.598359237386530185;-13.889679044921352968 -5.2347053299122912051 0.35849340935597068247 5.1854891313230861982 -0.90738664777100330738;11.104082486039011712 -5.5292597850797937653 -5.4767882035959658538 2.3720029666590209949 -4.2073067842975548913;14.080025001016139186 11.553395350560895949 8.2181988428353474063 -5.481197239349532957 -4.6470532771138115535;-11.322907020051873772 30.752163934312630289 7.1205815462041552877 -22.549404587200207573 1.3230271587491773122;10.670124036313200833 -29.057730382709838324 -6.4891142991704242604 21.220371879622053513 -1.7010207606384022405;-0.58026502013381597855 0.41718415213042475687 0.49860676005515219833 -0.2305412931630394513 -1.4693000956976407512;0.61996864875018475871 -0.23744232846821061722 -0.47813531043924339947 0.5856536547077916266 1.4371691180257732956;-13.301293290058589847 2.8723245036971882804 -11.692022855401553727 -40.021512907803803216 -9.7697161879717189237;5.2753926612278609909 3.0794480432351711841 0.3254071266304340293 3.5007919494464601051 -2.3244206752346454614;-4.9511578128289093215 7.9646967782895536914 6.6576941406870000506 -5.4950924950359967269 -5.3786089892130375389;4.3407831714157234515 2.5484431438982473317 0.024770748569292344587 2.8574424365606692078 -1.7757471295625304464];

% Layer 2
b2 = [-0.57933533096990430522;0.24821203613959313961;0.1574708026294219243];
LW2_1 = [0.35943145028435252719 -0.17482217654349987979 -0.51629100777674297174 0.11093191841420474431 0.36438206138327189354 0.2915201755978686915 -0.39744175627311401078 0.62092774118192661792 -0.30387501568918118267 0.073744399295629953217 -0.43821446885525294768 0.23214098873806421341 -1.2634865656062890249 -0.39721006704148759114 0.26093080256889517043 2.0253629499704626227 -0.13156236126162501598 0.12714485038855419252 -2.7198843755299466629 -0.39447458395479395588 -0.16935442087824800761 -0.12737687091217705926 -2.887169289715150633 -3.0663817828401267462 -6.9621326211945468998 -6.7584297916223334823 -1.2782461210861604251 -2.531161077496941747 -0.39649210407439455794 3.0819106934741644643;0.056648241162246801284 -0.15400119220079450111 0.22690629289009997538 -0.10724157940648419707 -0.034281745491011754445 -0.084651818453539487419 0.073227133760973783794 0.42840465867843385839 0.2974883585209522896 0.10628987446476723111 -0.30228512727271766858 0.19949540057954753824 -0.35486834324220362102 -0.33024831404050147832 0.19032942552900911082 1.3102626818550500154 0.0023013969191566481867 0.13441227779610481763 -1.7907630023236016381 0.089884562865332556791 0.24825769659014676471 0.1092779845836203273 -1.3567446510789726855 -1.578442720720923953 -0.46832426440529895117 -0.70781460662974093889 -0.35066361899977349648 1.177823052816098226 0.3269489733572547574 -1.4095498550434941709;0.025416270377198801195 -0.086353395141345115626 0.24740655094940897096 -0.10639153031264235449 -0.056748255902417756025 -0.045689542216523805485 0.0025281087913402618128 0.10300055002292117512 0.20671178222459266061 -0.037889777263654514372 -0.072463978740745560447 0.06075058257406013712 -1.1259623066690067628 -0.070162200498546739569 0.09339462546667144649 0.57303077021331216834 0.039927496192636656447 0.040616495786564649206 -0.64241288719939382279 0.13909138313308735957 0.040499375747384734614 0.088813313668067231377 0.97555246080997759517 0.94612424575887799083 0.42092744565053397121 0.3831575016347124607 -1.0631363793432209164 0.17374666293943580309 0.33512889608716084355 -0.32268019529845132221];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
