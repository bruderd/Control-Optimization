function [Y,Xf,Af] = nnet_2020_03_28_17_57(X,~,~)
%NNET_2020_03_28_17_57 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:57:58.
% 
% [Y] = nnet_2020_03_28_17_57(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.422238488070504;-1;-1];
x1_step1.gain = [1.08119114827815;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.3989416056571943869;-3.5528474023552285566;-4.0066329399575879577;3.5942836101408408567;-3.4329605897443649098;3.1046117974375015969;4.329521550063007318;-3.5430879647159239099;-2.5219622289264780335;1.0484137007433278477;1.0403597834815372369;0.064981874631937219799;-1.4369781371931444891;-0.62633144153804620746;0.53244074738895263987;-0.055096079341959869335;-0.15561262184899860017;-1.669034163827544992;-1.2849550388233859088;-1.5538857068082652102;-2.251097460346433099;1.4137577886042689279;2.518799598828025843;-4.4308279166035173802;-3.787380049389280412;3.2002012673101796203;-3.5796862742060704399;3.2447015681257287412;4.1368408007448413954;3.8530305157771245206];
IW1_1 = [-2.7917806092440557997 3.0061338688189906954 -1.1610242904885066384;0.50840296410583729614 -3.6046238670434154194 -2.9361867785961783817;3.2612107313712033196 3.7191894047716260729 0.84964281884616710272;-2.780201795844852608 -2.1983275155473278595 1.9185908887134732748;2.5133353195708121319 2.0686419153961472794 2.7491371625702667458;-3.1388476723376341759 -1.1446236634883077965 -3.2628907808946219227;1.1563313897801219543 -4.4199507612250776845 -3.304220274452875028;0.18460242152058858878 0.13237716615280814558 3.7029640338130898058;3.4284533170100091048 0.45943880085848237682 2.0469331734798812406;-2.4126281219866974048 -1.3406950721795194426 -3.4990823193943945135;-1.9842916786072952728 -1.583420103780732946 3.5250869337194217223;-2.2153642201846079907 4.9214100042901796073 0.4224166371557191435;4.4689815706776769844 -5.020193143797505364 -1.784239840222197504;1.1091537276658660627 -2.6376822507587021072 2.6290120242872281331;-1.4239889296007113284 -0.67781048114662201254 -3.1228994315390519176;-3.2726083187808634456 -0.31349563601910990229 -2.6015337276677539258;-3.5406936078837887294 -1.8487984002399260319 -0.97632436518415144366;-2.7233664301855182721 1.9980019211634651999 2.3013512082745313236;-3.9278617438858387523 2.073178043171784779 -0.53876700319569792441;-1.4782737752456378555 0.53163447681823872148 4.5809783518219191478;-2.4563486348391987413 -5.262394302378505806 1.2208256338927372386;3.329055977693656132 3.645347810250378906 0.1388919272370683633;0.87811745580511013642 -3.4673612818235244326 4.0959461844112743378;-2.6875246043239262583 3.9482643351162320933 2.9463732811399698797;-1.6729242853728780727 1.1896205556974350781 -3.0463613190093430383;2.6777391562697760996 -0.92902563873975951836 0.36706109669400172058;-1.4688997184999734724 3.465032908622994956 -2.776992223286742334;0.34600308357872561205 2.5184750365534123162 4.564579393807284724;4.3439738780795966733 -0.019966120258723331349 -2.0170660938311599786;0.63359889129873492308 4.6297628487081965432 1.6005756998986628847];

% Layer 2
b2 = 1.5725673505406307928;
LW2_1 = [-0.84559827263190479041 -0.48705243937990694292 1.1911269585051846853 -0.039606994517221556784 -0.8840764925154028786 1.4222043480246291391 -2.1293690642821991865 2.6746599747187880247 -0.48114217244966772657 0.18610754507787125034 0.022352352061364717806 -0.94815316362270629647 0.43719511791766640929 -0.72151569425819739312 -0.47526053965931036593 0.14154117429581938858 0.43828208189532630312 -0.40831994716978570192 0.9059441890420298904 -0.53475435362783063642 1.0450274311696214902 0.88330843557263094556 -0.38111622272728595817 -1.6862593267783989592 -0.72435521524162760354 -1.5152018575522578914 -0.3416217739407571008 -0.689795988083496181 0.50342578086674560911 1.6224106716258266392];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
