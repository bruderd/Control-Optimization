function [Y,Xf,Af] = nnet_2019_10_10_16_24(X,~,~)
%NNET_2019_10_10_16_24 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 16:24:56.
% 
% [Y] = nnet_2019_10_10_16_24(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.579754433464736;-0.805543758446051;-0.203588990146155;-0.125523154590286;-0.223927909142362;-6.17935470084711e-13;-1;-1];
x1_step1.gain = [2.14010824611054;2.03372170692418;6.20638380148667;8.55015998110298;7.84113097277866;981642116310.616;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.6649756562919018066;-2.3290865259882336247;-1.4652721166994715496;0.67525316120040046464;3.7717599933876142515;0.35394461888968253849;0.79591245637910179589;-0.34269438015890180127;1.0589285213020604992;-1.4785360702071728145;-2.0287230150009367691;3.2793661466367107771;-1.3438575948815965067;3.623377141017945835;0.92120170911468179931;0.94600462039251298485;-0.41682898861494876996;0.068917611827970626237;1.6057702950294330257;-2.5692739095524510518;2.116059956822484267;-2.7939218067250997102;-2.3446848670677011839;2.6664043914830801718;1.4566804165962472517;4.0141733393230509819;-1.1913663805192857836;3.5125098090998765343;4.5662757031992606827;-2.4666701198431626452];
IW1_1 = [-5.9705987156610245137 -3.4065721592994484546 11.776059098359286992 11.048640118866112303 2.4557850999654595725 13.716505181557922199 2.5151276886250544251 -0.43678497210241040705;3.2528212228471069523 -4.5059630717230456654 16.058628350479700941 2.6637487121609328966 7.3594003926448579023 21.775982067997269098 5.7635620900907627018 2.1637611048288012405;-2.7007939200476434038 0.23745980517135792387 -2.2562223860794077268 2.1836092516413967424 -0.21295060391121556354 -1.7350067611656576627 -1.0006847719751159609 -1.4642679359624568569;1.8073836295164782406 -0.95812086842180044233 3.2707556329664195793 -1.2934850240266848598 0.30407756871673796706 2.9946180755128763984 1.493061125881121276 0.16413501218170339913;8.517019303317072243 -3.3308430598081759655 13.98349460166401137 0.66589795981239952027 2.1631468579296857513 14.186393059970251684 5.3699607095439096938 6.4657388272361844272;-5.1277002002947362769 0.22877574795337415892 -3.658341900854994222 5.9861164175940970722 0.12193504750034696305 -2.451234557733148467 0.59716909775767723634 -1.8440880481862698126;-2.2666548100389034559 0.042552595296970772976 -2.3843022697500058094 -0.61358363603609267223 -0.49458789458639762504 -3.4151343473341131407 2.0530505749363840984 3.3328525122159495808;-2.484147841305742066 0.78636977416625020165 -3.7990623805764314191 3.1295486362089000032 0.10104535546782174305 -2.9535846411568100756 -2.0990654028519144525 -0.54134492039828063792;1.5150196208034576451 -2.1624480474488185777 -1.8154239158560929734 -4.3088787775885535325 0.83740776186556153959 -2.3960619340008602052 1.5823691346232808819 2.8055391480097657819;-2.8034830007815845221 0.7643683135110602711 -3.8007893712449156709 0.94178632147927399121 0.36532847137531976323 -3.1902456998049939507 -2.3162117025139465909 0.20315683497066602814;-3.8836326913330938559 2.9982311334919717893 -11.344701254423403824 -0.22524767655986907555 -2.1951541919463313235 -12.023070821964259025 2.053808445887099321 1.2031266741930484176;1.7005943633416193972 1.1474032466341459457 28.910182724102298835 10.841236489412295896 -2.3305644699042957768 25.536791972116173355 8.2593329943597435516 2.5958954719934266286;-14.179756853801185557 0.58509310357563759641 -15.785293562443621695 11.573446996173155199 1.3553371178850788237 -13.805618869344920441 -2.2793240053015497715 -2.2999478731386360231;-8.1907383688048565062 -7.0645038622784221971 -0.38129236631407470437 12.502724095294212248 4.4289142422727154624 3.0394072602174637687 -3.1189673078833859421 0.69089976965265720299;-1.8875769950234553285 -0.82529972607550305952 0.75884049934420627626 1.8464972892348949784 -0.075355608066307783188 0.60160839063009496908 1.5304071073917264734 1.9326771079234579265;-0.43234752034944751165 -2.176215619008365465 6.0729804061171925866 -0.90819288780115681181 2.3133408864594269261 7.1333552635245460749 1.9271377753892067197 -1.0859895140652375822;0.42934194073625642218 0.0031932088488752820299 2.8403586531989892805 1.4049930611360137434 0.24938560718847518904 3.1264008777514029624 -0.19619597352912687693 -1.4113488017902409144;-0.15905655354569347981 -0.28874485682654965624 -3.2834169671428394821 3.0032449390855275873 0.31239193472834325682 -2.6848874593686673506 -0.8858468580699668804 -1.0435797184819308736;5.7223876287235881932 -3.393458886512429995 16.455293692076448764 2.9415989883811257677 4.2128093846016465562 19.332272031568759729 -1.6645438280482007798 -2.0044552675740128223;-6.0912441200392084539 9.8944945137502937627 14.235759670308899771 17.749172856610591964 -1.1625326424740045628 17.674202193776309855 -3.2117505400838961549 -1.473484539435203633;0.74548925865665671697 -1.3837504683671071337 -2.3309841555223420606 0.93672960305685637472 0.1810060391345471309 -2.3878623889098484767 -2.3218310472518863818 -2.1079066700149566849;-2.9310012425188043395 3.5782612956765986745 -13.45164317242809382 -3.9436062356304275589 -2.7454685230211275382 -14.177777167093623234 0.21131112619932293506 -1.9801903711988877443;2.9397434237032835647 3.7239565388160635884 -12.822831855449173588 -4.6312968375571141877 -4.7008663578852019072 -16.136670834917637762 1.7473887219755539491 -2.8238608347637570439;-2.0050370186015169516 -1.3862921006368105203 11.48308870128047765 3.9293968426011156581 1.3710080202250034542 11.442368777815666192 -1.0503882239984865254 -1.779594613096241229;1.3928355721198664163 -3.457308496021879396 10.336941385357743428 -1.4491670387174397927 2.2860446628216108955 11.015829842459792687 0.14648293582476118457 -0.54433520432054427474;10.643888239721855271 -12.316779719463042397 -5.1174941101499822338 -20.104189394464995644 3.0902278838127776872 -6.6103644234929870294 3.1636751178440691845 1.1653387630064242497;3.2553367990355135397 -0.041809627345271528631 0.39859533255121393225 -5.049220251755833111 -0.50569918182686401931 -0.44139877733297316897 -1.2026964562239805812 0.54066771737574115253;-8.0364730249882736501 -6.6824621902116136951 -0.78043878758986517941 12.238276309679283926 4.1346078564452222182 2.4799161306266408467 -3.095188144183636858 0.64165930170030627266;-2.8805246427044686186 -2.6233945890730892003 10.417932736244242875 7.0065856697848545309 0.63970813830498540753 10.802709106060394362 -0.25649075795834019864 -2.2813687920063276948;13.541905223431326633 -0.038155217278062397712 1.4836057901868566766 -17.795338187334255764 -1.973118467183661684 -4.1466828554996792988 -1.8633452156847662984 2.392299421677196225];

% Layer 2
b2 = [-0.47467793528180113327;-0.8530639363028820199;1.9688887748664336552];
LW2_1 = [-0.28645405798025541655 -0.14540620668236570179 -0.41051563851734274024 1.7330409761870912977 -0.23700939119031633195 -1.1118385085899715747 -1.0437152936814098059 0.57324357622869770434 1.1691530404843841762 1.0232199256090050987 -0.075116250140911527966 -0.060794840312727686793 -0.21437175221688570259 -0.41973722077786801421 0.50958492211452632858 -0.49735704813500736243 0.82799541196417492106 0.36726277473145124697 -0.25798784378284722596 0.24466306122725631211 -0.17937840508029634368 0.31854624208793141937 0.29943168185841667617 0.43547946797162034871 0.19241991717509626669 0.13991144360200236108 -1.2016428398949374756 0.36379525919181437965 -0.29609211562466830614 -0.30157465042345127371;0.33803495265378513679 0.3104412590979525044 -2.3357722499871407251 -7.2535874202379693187 -0.19707948781047013309 1.9536757540269418243 -0.06369531371120125407 -3.2061771156950107375 0.61611058147084329928 -1.9037688647194399572 -1.942303344339184612 0.32896609055818415435 -0.47079737445894931369 -7.9910006660547274748 0.47139410224555439166 1.5392534127400445687 1.0639074714676042266 0.35367336974413793316 0.088370204804307392332 -0.25381149760278592931 -1.4166981758369179278 -0.019503398885355783393 -0.46433596705685409312 -1.3305352547284217124 -1.1101307287335062668 -0.30187467106983340015 1.3428919222751458662 8.3173185016098347688 1.0096426778881859576 0.66280205667252045654;-1.1732402976386941962 -0.52277465538397283051 5.9538091955888896578 17.117884028339350522 -0.5283685268701444615 0.37568856289996321873 1.8880393363373204618 7.3941658183081813149 -2.7533808826633641154 5.0694840352676964201 2.3144000184370483453 -0.0035221425605804919899 -0.39000744078442867169 -10.55572253147620998 -3.5934742089127351683 -1.654594530025289334 -6.4463195313356020932 -3.0064557873101822594 1.1252060781137158685 -0.86710937836019652547 2.2904716213438005568 -1.5058869008483919405 0.70856088694212127077 -0.16413844577968919602 2.5084345634435685213 -0.92023080312453309215 -2.1335731268408628658 11.092441799910984557 -0.84983895001213594078 -0.14687074042849065925];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
