function [Y,Xf,Af] = nnet_2019_10_08_11_06(X,~,~)
%NNET_2019_10_08_11_06 neural network simulation function.
%
% Auto-generated by MATLAB, 08-Oct-2019 11:06:21.
% 
% [Y] = nnet_2019_10_08_11_06(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.51340622361997;-1.53976903304538;-0.960722794658146;-1.27576849053006;-0.573344751508362;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [0.605845791525084;0.687916700597617;1.04897820455213;0.762329478522047;1.47940426503462;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.4943260511673471802;-0.22658083561214836799;0.31816737597126232284;-0.0760989490972707322;-1.068797100628802399;0.12609715392272460854;-0.46206563121245680659;0.14015825099085221783;0.70472765245282631419;1.116832971013695941];
IW1_1 = [0.13338951201652540779 -0.22190625435956609635 0.052653587650479075077 1.0450395603924016452 0.52064718794588937811 0.16932284142728076803 -0.6756261579131195294 -0.72448931691499207641 0.13828528095944817022 -0.31418198501847938164 -0.41126162592781684291;-0.29537707331284596135 -0.25909438731423850566 0.081499608214877727885 -0.12091584894094989377 0.017533156995690336866 -1.3927404476947800038 -0.72620680443936580506 -0.34509892478230730362 -0.41718995247964912876 -0.26647672369368641254 -0.13188563421567398026;-0.47555644786525724799 0.22869604058089518239 0.10744143247224141602 -0.56117359114970899459 0.22906322477809959448 -1.9956849087632586581 -1.1276674832573883034 -0.56165772299925209587 -0.63789642837787052798 -0.38736015373895321678 -0.19305254539562910487;-0.16171209449750675868 0.024131965832476454104 0.014828967870521365252 -1.0462676336707112945 -0.52076058920989942713 0.085546689454437038758 0.24838975082510578174 0.10527166308843369236 0.19900672716540779295 0.24211763209248049478 0.062323265919899638321;0.55063703144334241735 0.36811527246611480679 -0.24641543642319421736 2.3126919106891952183 1.300208795839834508 -0.20070516995161591378 0.32317739911653547979 -0.77049862931587154158 -0.34045200092532318381 -0.26950949543649965756 -0.18997283940108633526;0.045867942622360984017 0.31411424789180353301 -0.013284260278721109552 -0.1953441485793789012 -0.026956278270030758354 0.56338432031257767996 1.2223108373819047134 1.1163118414760129227 -0.94662769602537366609 -0.69419383613429741509 -0.19278118237085273279;-0.28173201029745215118 -0.032918690126013706865 -0.0046264600286836880111 -1.4440712267203745789 -0.68569604290285490755 -0.045444317167757604381 0.42637331863492256012 -0.022067732982813604431 0.20016424416024258814 0.56478374145470411349 -0.079359594620655962705;-0.23277570804530023363 -0.28636978479338387471 0.059042331329761339742 -0.12270626869824302618 -0.060711439996506640082 0.0014906603467782133382 0.02345388581625904717 0.019833762760925785495 -0.019683865202430379793 -0.019825356190860440875 0.013099921760973940593;-0.14177177003079013962 -0.27226727701341002508 0.016949955837237636047 -0.20753941638319292617 0.12649574507534172563 1.7647107721159096538 0.98616747846394681165 0.49047863260637725169 0.53069728713291142164 0.32906524730669939327 0.16330869805553030472;-0.38277144413481339891 -0.35617620701409241635 0.22873314857521775956 -1.8884942666761554975 -0.87525596595299592906 0.26760832345687707301 -0.89497031155388473422 -1.1374530774462057181 0.12762434312438905581 -0.37664967282286820893 -0.53599013607984447027];

% Layer 2
b2 = [-1.9898452563769746249;-1.0051499040286653308;-0.89302203251169276488];
LW2_1 = [2.2819020781316776691 -14.027119781356907069 5.7398935804088182522 1.4670418350480780578 0.34381305373620657528 1.5680932387091077729 -0.61585808743149983435 14.684432271632301692 -8.2733415563536851778 -1.2288790261674527038;-0.38128466129806215523 -9.215501828197687928 3.5379658771794231242 -6.9234696781144382527 -0.85842711629029211373 0.78696721728120533346 3.7177535116328339626 8.4409428934382262355 -5.0500667597878390325 0.37847331772457248888;-1.7767334947146107282 -4.5587577951202984394 1.7561642899310290211 0.12132997535464891403 0.91162929520830482399 0.013702535738518428765 -1.8008501823482370163 5.5595958668526126445 -2.5786256859139067288 1.1270832769637189053];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
