function [Y,Xf,Af] = nnet_2019_12_02_15_56(X,~,~)
%NNET_2019_12_02_15_56 neural network simulation function.
%
% Auto-generated by MATLAB, 02-Dec-2019 15:56:48.
% 
% [Y] = nnet_2019_12_02_15_56(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.5170403647526;-0.305295933447741;-0.171516760736325;-0.578052651223436;-0.47190455100716;-1;-1];
x1_step1.gain = [1.05908752122499;1.7157735137028;3.28417479757919;2.02479090908734;2.57478356157986;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.6229925353973415625;-1.5025881165295562614;2.2265961713391733134;1.6214851657354192316;-0.67525503058305602622;3.1674748231590523773;1.460070836473962963;-2.7626321793660628678;-2.4428359627839575374;2.9240363667716264828;-0.73915606830346458622;0.66811794556679870993;2.5272328486655850632;-0.25134535264556323586;0.15600413605613785983;-1.2835013695567458747;0.030966619007771999106;-1.0471948791840399728;-3.638197210100296175;0.43866908210594279804;1.6435681388435390282;-1.371002380757536665;-4.6228777022783980044;-3.25864879983338529;-4.5262817635615499867;-2.7689793962380719883;2.4445883798190020109;-2.7917810486699772277;-2.828799084989740642;-2.5348222984908308497];
IW1_1 = [-0.71812680458730759891 -0.74851024263272347703 1.2654614402788018079 -0.37675444807251634582 0.49714166567212364489 1.7142170008361119482 -7.0699590753546202038;-0.42155594467603180187 -1.4052329937049987674 -0.49092162108263615039 0.44588840736700696699 -0.44511718077833489771 -2.5788596318833572063 -0.58730861604620276939;-1.6669521870902297422 -0.65494236945293859975 -1.0003319478385244157 0.26641137352674015837 -0.88086071125525855496 -0.16455880801469383035 0.64143571680266309176;-0.56353478325065520238 0.81806770403667705693 1.7222135471258399608 0.14136047671499624157 0.26791835433378657916 -1.3929873175406581876 -2.1926605169219657299;0.9457046263705781719 1.833054513394138052 -0.067107453318026630273 1.4852323012756636356 4.3671415155347013126 -2.3028119675467815242 0.59779736946995021274;-1.0219958478264612456 -1.1009556081429463514 2.1781366481573889438 -0.38063912690704537756 0.77224626439029986358 4.7985994326974568125 -4.7978411259075928186;-1.2504638024088541304 0.32156814430549907069 1.5038633080077152826 0.31339057829830380131 0.13902070615958306288 -0.6440491613064796006 -2.3280821512392222417;0.89712890141839884972 0.64437204794440094968 -1.7281266414589633307 -0.26228391939658168841 -0.67127347018680205704 -5.7720866518251314758 6.4920491300728810913;-1.4267660257289016545 0.20769759019521880083 -0.350563443174947309 -0.074991361694522973291 -2.5413245386138578752 2.2416565238613395117 3.7198274276953604556;-0.98195226344477248848 -1.1542457702094215399 2.4658878874793570546 -0.34349548439244032005 0.77670664987809689972 3.7235369988916158235 -4.4501044746443909617;1.9024361633591670984 1.1105745291463624547 1.5793658834989008355 -0.47875124154414472333 1.2605006482859268946 1.3683717887401158908 2.5973336899196546312;0.57580053694429633726 0.79676866866072892925 0.26494402888744583713 -0.5839667955964341628 0.49508074094769155549 2.0053411638329259326 0.19959137725248130013;1.0557242034714251488 2.4098952361989720572 2.9680447907469469371 -0.35977736589591746696 0.60978398022180746452 -3.6723130419360265897 -1.9517262368525603033;-0.53881046302213775334 3.4560313048549362591 -2.4856871500114698925 0.51630488688498354932 0.19416780787230392136 -6.0608911533548122108 3.3606857559162235383;0.66007962143309084624 -3.1898301232898171875 2.3935633123167456837 -0.40965325920977946339 -0.15825581217190037853 5.7415420584486955846 -3.3348044145966624363;-0.40698593475620969961 -0.66037861676544373779 -1.2534001287857752249 -0.79940135147071500477 0.29106173264387918964 0.92127782185900319867 -1.8018513813570522508;-0.53313780091904361402 -1.5666124423019516243 0.65477622129842361076 -1.3601844962379405768 -0.66981672971001493533 1.2588818675937603064 -0.33962532005373463617;2.1389754275060472999 1.1235018922288848575 1.5146442926475263135 -0.65242987657831075232 1.4076435069704471559 1.7276401326726185115 2.4395652188497423118;1.0407976268849710166 1.0757229158682009018 -2.1242167737044357345 0.51462993620504571268 -0.8648166693656679227 -6.2405574165314297019 5.3974078890152705767;2.7684387804747672135 1.3636315280149449158 -1.1232515614426592521 0.76988414159301821194 0.3202752901574377753 2.7671851709625947535 2.1961047206599153547;0.20346300217625062912 0.95926859127864094745 1.0735409910864488481 0.83373002373238414009 0.13249703996536832395 -0.24587592289271095747 2.2038555076557302392;1.0850783574067790482 0.003694513940767038887 1.6388222940829384466 -0.54992549257516076811 0.28092889977955209924 -0.03061443925469553573 0.39938682848954826232;0.092059960690651546078 1.2475898069867399354 -1.0657875600805988281 0.43432951783671625012 0.1931313369797460211 1.7993099270026515768 5.5852111368292138849;0.19770165144672599555 -0.74557893719553758327 0.66412688286767529444 -0.31354327339465992708 0.40119551232734956825 -0.16941108682456229584 5.01418098226671205;1.0278129098446457945 -0.79402466270102711743 -2.2320655354991592034 0.82723435425554103784 0.55362115945260137462 2.2694012740682305562 -0.53054293478714142918;1.2471503955500331529 -1.1184643477738287487 1.4408254313263468838 -0.37511152971931693845 0.38144027676390046544 1.1803483580668812092 0.32177428235662042244;0.082937613034834906101 -1.3769044031692831975 0.40213391834079670328 -1.0863055935872996116 -0.63811677073827921536 -0.18780334878004498189 -0.20951905412545668295;-1.1039105003112743564 -0.067442456762039762475 -0.50245373751935129558 0.35571818645236974454 -1.5273609722533985078 0.52130308655146040397 3.2773843505718507352;-0.29684779683604900491 -1.0227572934520166026 -0.39907277714947464453 -0.22031366864334331335 0.4924238832281078726 3.3027432873296374005 0.69917532622259259689;-1.1649581235157531189 0.73721679831111197601 -0.87519404274866996474 -0.012903946869466947564 -0.080242324387103602934 -1.4290486692777992772 -0.098777068674301055085];

% Layer 2
b2 = 0.52761219606630038736;
LW2_1 = [-1.1421291412297340795 1.5101350654503113979 0.92917343449722333837 2.9001358163970167858 -0.11190710124559512251 5.8087667563975715623 -2.1576376135369783604 -0.34125676556308759402 -1.6308138657687358819 -2.7903104656246071613 -1.8166503726051208556 2.4806266448046287998 -0.64872278762824953091 1.3868238514051915988 1.4460768673536821272 -0.80970414797315848343 -0.42408476636063174858 1.6828482990613111703 2.9452881834599282662 0.003904561108119841608 -0.79461672409633876679 1.1958400408122602521 -1.5611768980946478802 0.22437228156857422223 -1.1091510689042716198 -0.8614910922154548345 -0.45667920544038675956 3.385611415387144163 0.90663568207535316645 0.18087364805885672303];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
