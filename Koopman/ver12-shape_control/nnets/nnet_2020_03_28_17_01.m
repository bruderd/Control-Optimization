function [Y,Xf,Af] = nnet_2020_03_28_17_01(X,~,~)
%NNET_2020_03_28_17_01 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:01:39.
% 
% [Y] = nnet_2020_03_28_17_01(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 9xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.900923112814887;-0.363962300763704;-0.752833983577846;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [1.10260557724062;2.68823140590788;1.39487712360571;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.1852544355326317671;2.0182241026640577175;1.6899812484331697693;2.4713342002847071832;-1.3801039649928950048;-2.1576407382449849237;-1.0743265520450944184;0.13387167689030232687;-0.33003163635338511606;-0.92355185646110860009;0.3058452552140251135;-0.10918997115679816845;-0.27242180269688193173;0.38045034037779290603;0.36114594012786060961;0.8845460476959904339;-0.57456458190616099824;-0.1940733828832554575;0.7158663844651069752;0.27263239161365687702;1.3455620704337742932;0.41329008145418510978;-1.248255044379916523;-0.11196045576151295031;1.0209729023731235475;-1.1615774245299952394;1.5508794689261886646;-1.4348567980667690236;-1.5472496595413900433;-2.0836097874055967694];
IW1_1 = [-1.1537962791372486926 0.12800859629481772806 -0.54577697372063238568 -0.24025657674049047396 -1.1489289959462007928 0.73999238161603664299 0.19406611995002939763 0.19741995563330164143 0.64018637961881186271;-0.97128101252061671556 -0.14430769862869255449 0.0082069653814472887793 0.20429420405208295608 -0.36533352806421326431 -1.2040416088258072413 -0.32616149197190963394 -0.43449006727100142333 -0.20778122359896103455;-0.74494437373646504863 -0.3696891140036779877 -0.13422724324904322657 0.28163666301391676594 0.77661438860071818624 -1.1827865130292352092 -0.19536065206430056063 0.16948642896831883631 0.18929518413917034714;-1.1271453180953434625 0.14871233337633554816 -0.5533255231294850196 0.6189722503002184073 -1.0917760881085858404 0.32513058383170034826 0.69178257369641282803 -0.67012771688388406144 1.0000417618073134118;0.69738544230824117687 -0.69148268199081253105 -0.0051796990504594277172 0.047920696074154084387 0.79619613651865139836 -1.1848301592689758355 -0.51688903680842801514 0.2508461900350188456 0.93255403907069200908;-0.0062182424911446168569 -0.47131259183799656398 0.45145864046320416385 0.56381229679099820196 -1.0010571778137919985 -0.86828760197629228923 -0.14031216041550997886 -0.80437381364949844809 -1.8592037892696953172;0.58930740791789471 -0.20921028894791077191 0.12059930620984957161 -0.96171791714244836413 0.064992724128471374145 -1.0470623510282817126 0.95961567853487284019 0.63679279988408499236 0.12616741691207558618;-0.59131912069709080537 -0.37216760785447894344 0.10065630477730680425 0.68884998971709865412 -0.33180497949578213746 -0.84503021500953778844 0.95682240366088922023 -0.40941325623206714646 -0.68839699447510693808;0.7870764232983328279 0.94289263689214830588 -0.3661455647208228803 0.15596965341097612789 -0.25261933694551536034 -0.91677560793063139766 0.18639998667272583699 0.34762666106343653727 -0.061613912050318395131;0.58475826580980128089 0.28080659726158763156 0.39336723518622729312 1.2437991858787518229 -0.079417192648757212181 -0.72576990312817457607 -0.60165008555248422617 -0.26025216716169469189 0.63491059102982394524;0.25555729552825512396 0.018818887993878243015 0.23966507047938603869 -0.66037869855674025121 0.55400932928108370668 -0.66183875869505170986 0.024596067787837502805 1.0823158046371343932 -0.10750558662858374082;-0.24049138788972743153 -0.50359507214940801845 0.27012738791506923919 -0.18821591720444499907 0.61526484080918675268 0.51306342733354126651 -0.62411678766717237909 0.6023215070362533119 0.86623761399126220084;0.39558697109777779533 0.23797003690231144368 -0.89841272364719859667 1.1990458178295173575 0.059115663172570394324 -0.20945986255339660298 -0.61577752966289678316 -1.0238086720024022203 -0.60503948650791972153;-0.31513635196624556478 -0.76397774315649380483 -1.0313797855986255314 0.32532309292270422674 0.87589779263541234222 1.2378054198222316895 0.026930726897203077774 -0.094676374991767675571 0.15099791702165399343;-0.61929665858696258951 -0.61323500748857007192 0.61334961917061381342 0.48462208076047813554 0.4430986761843591637 -0.6362658601845220252 0.64067812685586145172 0.6393717878067362026 -0.32037770666036480272;0.15746185911296853299 -0.45431987767431580849 -1.5654672392314967766 -1.4112542035571258303 -0.36329734107167427348 1.0600809300553333259 -0.61545800654277071917 0.11138526129570748557 0.55934109388965547183;-0.65594047097669361257 0.29718652331404704636 0.89903924003247581709 -0.75477599962747610185 -0.48686498578823139693 0.89656874430954469624 -1.0314679745794090859 -0.47035695576618169467 -1.3192408153630530432;0.025582698433245891489 0.79252600531248862392 0.86680798910126455326 -0.86280309528186283075 -0.58133359748537782874 0.32141477774254928468 -0.79112512248555977301 -0.70956517908473293321 0.18150511444894670832;-0.034603418155038506709 -0.30634313288337744474 -1.0985977915715796627 0.56964916699545731227 0.2548298180783415412 -0.23063886185811913188 1.4226746548195361441 0.14685218802237953728 0.90223892712415088013;0.22403579866079828542 0.72539857062818802191 -0.39985838469676310281 -0.4883062371098733645 -0.23387304684547749467 -0.52824803091851324499 -0.53663303517713945023 0.12491493869451417154 -0.28646709322454450009;0.47378092219281914277 0.27298041434750580647 -0.58607233547235304538 -0.82941464638549378119 -0.16789895884398389758 -0.4734169023020314282 0.043749255044910853596 0.58052392305588962351 -1.2309868288868992536;-0.1442142249122257136 -0.2035195219537817013 0.50856722563216405497 -0.84963514280415985969 -0.12560501007692995157 -1.1854331861650062585 0.5624140065225334828 -0.28725896053767641103 0.11441817219907846059;-0.91263726751413221105 0.53459670061628095095 -0.051826859147607304279 -1.2329775395564697149 0.5194630084316470553 0.72885469410982484106 -1.0415399727291576593 0.081906559212530816172 0.32932474098714281663;-1.0160165564229293178 -0.11818751300619770306 -0.19632315649574874628 -0.17854259095897204168 -0.18486518537727320011 -0.64764556763964420405 0.75137088004138086195 0.0098801181443956970218 -0.46162935945456745612;-0.11118095456272647503 -0.20102643981239659565 -0.3780996414703927111 1.3568966330140566079 -0.057566339242866033932 -0.3773294477701791827 -0.43339600545303264001 -0.25465139480751136647 -1.0706210300437117855;-1.5637829742904489905 0.80339615505880657143 0.2270269025794739437 0.26115954034008453943 0.20612600278305112655 -1.0703013341691973714 -0.23602362803339796415 -0.40360720485797485502 -0.19279369128487630625;1.4769373171436157577 -0.46815210474661872464 -0.13785654787846390867 0.010004151635486093624 0.18594085935420393008 0.062277952726364244063 -0.81972287620774386685 1.1267532186664495075 0.29117209773324104205;0.070964445920244839661 0.12203729269679997049 -0.84383996479091127885 -1.1303307512782916344 -0.42946586173973505529 -1.0143191542172276254 -0.51426654779100922088 0.16359094378210042864 -1.9572309650756138932;0.093352680303576643372 0.69928841518944395705 0.51942616676829433953 -0.707128925350755555 -0.028452464873117422339 0.5132906822965560556 0.42770879635051367584 0.39819042997579251475 1.2885793369557720922;-0.19255002057456088727 0.09612056082894863962 0.84980214771921924743 0.30566258801857015825 0.23544405931467676796 0.14398044581682689635 0.84908077401205617196 -1.3883897219707581616 0.53266321156381413182];

% Layer 2
b2 = [0.43899621278234662869;-0.55248642884776821838];
LW2_1 = [-0.4194634845170481241 0.10117159702766222173 -0.51002218705875401739 0.49461988795053141166 -0.3925056416022622563 0.35338448178284331824 0.75292702834334979123 0.36859164278110112534 0.43125309381873899728 -0.35394020106200840825 0.052528940989209620127 0.27949769715686523242 0.37021535873418931484 0.40521079339210636094 0.19118172613498932155 0.073171131156349517033 0.61039660166907849792 0.45550933879868649168 0.58931316997290594806 -0.47039336276760052025 -0.27585312173451337348 -0.23500776715541515927 0.16355706528069563488 -0.81816920292010886229 0.28790558411256372828 0.22317866552997980834 0.11464992426342671128 -0.32635629541084870686 -0.17960884490852377371 0.078100800232399722467;0.28318411588602604434 0.85394581645489608945 0.836451260480704617 -0.55952487004864748243 0.45841510138391416973 0.3361880793759978725 -0.93146692078782356017 -1.2279178201782650071 -0.63914863859575976601 0.9123952802636562387 0.46083810894335375252 1.1268637130274663516 -0.1290876245321253557 0.50765178206268846139 -0.8775019948773045142 0.18207614822344866945 0.4676117115432952831 0.73597238036368639591 0.58913672671430672434 1.0445744589664469615 0.42236175350703025755 -0.018839224165577251463 -0.71398688642939001081 0.28446777443485593562 -0.31746986394066251114 -0.71010987901663324973 -1.1327745213326323448 -0.33448742106513473793 0.16972575766684183662 0.47776006446072083467];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
