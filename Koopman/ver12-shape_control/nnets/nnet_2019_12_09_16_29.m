function [Y,Xf,Af] = nnet_2019_12_09_16_29(X,~,~)
%NNET_2019_12_09_16_29 neural network simulation function.
%
% Auto-generated by MATLAB, 09-Dec-2019 16:29:02.
% 
% [Y] = nnet_2019_12_09_16_29(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.390273673100271;-0.217679531347045;-1;-1];
x1_step1.gain = [2.39706706826541;3.97473815734734;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.5700170477346040432;1.6525092779456844738;-3.6356138855812050181;-0.71226318639337848904;4.0041324239571842725;2.2733870895224024267;-0.95340829685598582621;0.15961239118512798862;-3.3710711209208503725;0.30282742500889370252;-1.1715264336492354769;-3.5207128426092890727;-0.18707722130730217169;0.028724376864607634868;-0.30194408819155488244;2.1752745126527792685;-0.53314557364952985807;-0.05513773875876554903;-0.50002641770283051681;8.7919905391262940242;6.0613298464038756208;-0.14806864996698770875;-0.041888505163777976781;2.9083714292663440659;2.9490998013383222798;2.4172087894356750759;2.6043441140618064367;4.3560421421061210623;-5.657846322278357043;-6.7889407135177330943];
IW1_1 = [4.5250998529461448072 1.9163315008158559039 -0.99737562540212043594 1.8173047084446374289;-5.0146690880595743423 -0.75148878691484843895 0.54965846496302173119 0.66636957551945730227;-1.4358670321627227118 0.17638884071705032697 -3.0653261802289497595 2.650301327213643976;0.83355288237534119755 2.8719298940522204333 0.95869332363234793792 -0.46508453652739822903;-0.3698660559972297146 4.0174829240111504802 1.8812226124057667143 -4.096206822804774994;-6.3208568635767496957 -0.80933800835990610256 0.33061705665766738527 1.0536475189999092716;-2.0361883020603883665 -1.8835820925449646701 3.5360162204277272302 0.33745133185795150865;0.15269187911556167392 -0.86227703170280611822 0.96844495609747494047 -3.4984986138282789803;0.077142567469449058182 -1.8808149563533058668 -4.1507337477255665803 4.8153198791198112971;-10.809110612202667667 -1.0515689985048628508 8.8170143554645683537 -1.2060790396818152903;4.0832750741154502094 0.62938725792930527714 -0.68604654719149260611 -0.27988784650963360878;0.34643830183316520754 -2.4539499141949039362 -4.1320250993417895202 5.2413376238076532232;-0.39286872861381011424 -1.1561425549656607625 0.89175602191520630946 3.7933925301987527767;-0.5362404166982664977 2.2521275681303003502 -0.11661799565609762275 0.35369248119860086099;-0.066364700118092062597 1.0124670664373474072 -0.64457076911275268394 2.9701693258480443838;-0.20005326392792197043 0.76704914106567656518 2.8845277993140228112 -2.7371169730087108185;0.041006043665596104975 0.98948291685974265608 -0.085987554727392001563 2.3865937580904783566;-0.78397874900747821503 2.4483425796035134248 0.24882210403261836862 0.10276159274012459932;-2.1062975411461142272 -1.7762194421583075155 3.6067727953201775826 0.8505218662468999602;-0.23113020086771002282 2.6137292814488910508 -0.32746067178628557315 -9.9550782738977119379;-0.49737711360393305204 3.5307681795709600081 -1.4060817998165593412 -7.6931483452710569537;2.145812688386719902 0.92663025530104170535 0.10250355082541705298 0.6929228942436226335;-0.27716854300148729973 -1.2851378887783526661 0.74735808643743495416 4.1469474851734444698;3.8735513363759284111 1.5880889837705221002 1.5211115106467629765 -0.08650500195995061703;1.3632336043189885455 0.49005624198568226157 -2.4351610475375906617 -0.15786979065194031713;6.8223224771298234259 0.75233056733546255224 -6.8826101785111477582 0.74107184472156228949;3.0815929888119160118 1.5838162759472120822 0.96340903021319546085 0.37778299560601374951;-0.0039680936130937621842 1.3836943345453820431 2.5354554051552891103 -1.0020354030518954236;-0.18526507690020949104 -3.2940382730696629032 5.6699596974856207865 4.7868943569038391317;-3.7574887237261171968 -2.0497468010256878479 -1.4757142764170803062 6.5920711747304556738];

% Layer 2
b2 = -0.19733997960022345297;
LW2_1 = [0.20703052119997641944 -3.389879026506034787 1.1912133627723620055 -0.24528558065695932333 -0.79919077710517294477 1.19130264593831936 0.7052826358771909776 -2.1514255027766471251 7.9691273453173590013 -0.13981574215841810482 -2.8022169323390770934 -6.3055008636740561556 -1.618755183538267195 -1.8481566219315208599 -4.6382594826251564157 3.0886470718918670464 3.4702276413954975531 1.5804916495828251755 -0.54882653992768004603 1.49263430631461258 -1.2835853059731201498 0.87308354302856239215 1.2146102138821268657 -0.3923989612727154519 0.56535756229698197473 0.15176411941705933439 0.58551880924936350326 -0.12249175089582554909 -0.9872355490697988234 0.48715525089034150685];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
