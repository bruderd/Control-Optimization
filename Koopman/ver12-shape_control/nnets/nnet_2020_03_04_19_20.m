function [Y,Xf,Af] = nnet_2020_03_04_19_20(X,~,~)
%NNET_2020_03_04_19_20 neural network simulation function.
%
% Auto-generated by MATLAB, 04-Mar-2020 19:20:28.
% 
% [Y] = nnet_2020_03_04_19_20(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 9xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.672317519319836;-1.26533204671309;-0.725244105489169;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [1.34245350430145;1.20637861670929;1.7092829313303;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.773457878058304793;-1.9769420082667272798;1.84846506568304636;-1.8696580120902721589;-1.1138378774490313994;-1.816743876687227921;1.3704488994729961959;-0.63760480819303155808;-1.2728926331069720934;0.84241822142234412674;-0.80222594417670189948;-1.6593004780053972613;0.410294359538357023;-0.47721121604866278965;-0.26167692078614496198;0.035340955606801428834;-0.13661417616359522453;-0.27499339935064587293;0.20481695252227299919;-0.094810448753297554836;0.90247641887780782888;0.90143977103119110605;-1.0687545216513250068;-0.6586610075177740109;0.82656941744964296248;-1.7870569996306846505;0.76201303616967386301;-1.8566151194250082312;-1.9168176347976413343;1.6064694521111713144];
IW1_1 = [0.017387326007252703469 0.26857181086256581848 0.66274708292911521657 1.1389931637229875339 -0.23308717072060489151 -0.14820349377995561957 0.0029581538765634501215 0.94098921470846863535 -0.49440484794467570717;-0.17245992188146563873 0.77790272317792252821 0.2281239204842140933 -1.1384900157133728271 -0.92638390092153177768 0.65001069000936839704 -0.097843317394475576299 1.2767299138723060548 0.025666714557492982529;-0.95175170155740040911 0.86717143524817141831 -0.36666681663123223966 1.2130811409529609346 0.11125783771760983099 0.67755907913509449969 0.42898723891286150156 0.14464666503768303096 -1.1167424711607314425;0.062375925775230170456 -0.78425567944566043632 -0.24763134028396138753 -1.0045635687193124053 0.13651030794104168642 0.26818124387759673111 1.1123864821871423114 -0.99858247835891644772 -0.43146806229602796545;0.50151089355898570421 -0.38965963450575258342 -0.015194408138274370645 0.97145985737254281212 0.91875258191974473743 -0.013930856616993602184 0.87817558305573450994 -0.29347436717552877194 -0.087004912571165077262;0.044862336335056950121 -0.81729507315174920734 0.69384783135167671375 -0.40798379661283706854 -1.0868681421729173842 0.53613327637475372001 1.4514398645482562422 -0.069293890383592071647 -0.40816993108141569335;0.38958904850327841229 -1.2838837064578865199 -0.25587548650657732097 0.90681858836374995558 -0.11308637153544828791 0.72972153548489426811 -0.15399297575691206497 -1.0763040970783801509 -0.34399956504653611544;-0.012307507544274370881 -0.24653900697831845901 0.19261282409775798419 0.8852523224120528722 0.98132384237468051058 -0.35899941398459067621 -0.31802593887499613912 1.0650553217851692622 -0.79972644889962374304;0.2041700379782007968 -0.9393784846373749442 0.77382070462683949508 -0.054478980573560674416 0.51795382981538373723 0.70073341437988789782 -0.016113627744528721819 0.96045464941094971234 -0.22579882065988970963;-0.74067528149202721544 -0.004235799868208885155 -0.30212188195876010788 -0.68013101811247067552 0.049685712277397459102 -1.0642649905686865086 0.48533555938588940348 -1.1469868082877165971 0.70909986012183634507;0.94626610546970768567 0.20189005586112304669 0.03084129143974741194 0.76734085299065057928 0.095495281996884381903 -0.68932537499613888432 0.78763554778614286445 0.034591086097857527693 -0.2547136221265539624;0.32053038132153160999 0.96766765560112966149 0.46466387344235693391 0.94050633012035322889 0.14124792100371327819 0.31315431038065139058 -1.0089653594459211394 0.13820362262283444887 0.55547434626338321184;-1.2440302088457639851 -0.9422741408430536092 0.57653718201741999128 1.0332201864053704998 -1.0504583011320025587 -0.023295992296601168714 -0.33077432758936820001 0.35618996569043326339 0.38360633204640715022;0.2741830251142988728 -0.49177387480659773278 -0.81815681738016710067 -1.6789030830670064187 1.2080636909684530078 -0.1864686564053156248 -0.8498092461119119978 0.41606098014862269441 0.032175715133799888401;-1.0065062155725243986 0.45300382896035285007 -0.94456390747564411559 -0.22028424386783218569 -0.53988663205454878735 -0.51833052866961815131 -0.14212971872630281167 -1.0448032925532060311 -0.77426883109324096122;0.15935487636209552664 0.62075418809468274617 -0.49507893855235268754 0.14793214942105073484 0.095576863417775256848 0.41240516345172695267 -0.77197021642488372617 -1.5290570747014393671 0.02851506378229360858;-0.60922091837164771277 0.29181651064091967962 -0.17710727869561593284 0.13870790053572709666 -0.24565993785037920638 -0.39764558584662840213 0.16908897441486855917 -0.9749636615345469437 0.012718209964644790547;0.16442758418853783975 0.70457712764527835603 1.4236004756408437988 0.44226853902658364026 -0.8703706855815672716 -0.42578845289112099426 -0.92509839488705936095 1.0497750088215509479 0.69008276387742983893;0.4149137727233846995 -0.57388018964248055376 1.0926623326566224925 -0.66434064077184873387 0.033307274816744877888 0.82846644494353538501 -0.72205840987697700317 -0.57408967318347381426 0.16403634952391907276;0.91083622289324916999 -0.1664010138451325338 0.10104758781243407262 -0.80754088305216042976 -0.65827695623904591837 0.84486940259927512109 -0.021752227746482995924 -0.96756908953396636441 0.35211047812211870855;0.91008797704003141504 -0.8612647971430303917 0.68198544490150647679 -1.5173864159253394046 -0.03223627319732265406 0.81563130520865567696 -0.16715431201290470442 0.73316142260284833387 -0.316055600261978209;-0.74086023501814068926 -0.93017406677781255819 0.0062806865751415573776 0.74211023840195189383 0.52948379782543997241 0.69090116050364547284 -0.56750674376180509917 -1.5116624719697313584 0.93891280725916326233;0.47502371383203656485 -0.31661740466253851523 0.95681995943658049164 -0.18677645903626183266 -0.018356541432469713343 0.8510250734257142069 -0.46827366440202744524 -0.32283061477762342584 -0.63481802310299362269;-0.73885852142598407166 0.18497552126944827311 -0.6000655222757825813 0.44744793897270601635 0.095118879361937927475 -1.0599823411510935767 -0.26626043485438699587 -0.84532465481094198889 0.71407937861342585251;0.68730521465283345162 0.91600501913687915057 -0.24990682814050560467 -0.41512551583193368909 0.10101742354987702788 0.79222156646520203171 0.61156104134970001862 -0.25548870808913703989 -0.67519722543472771026;0.41041136725320398471 -0.57589732591150288865 0.1911559143183404752 -1.6020375584424699777 0.53528317416138126994 0.35327513397611520762 -0.332945995856907484 -0.58463653345999266886 -0.93475403028387793469;0.84607262955471163046 1.0421917962326048279 -0.6536603144172088431 -0.070373904181176560879 0.72658991521342186637 0.20983972395737979233 0.21964775287222595979 -1.1253078014939681406 -0.12480187472106386848;-1.2218561843018269641 -0.43031868433255809903 0.54515945307681801246 1.1633126727385645349 -0.63489493417448705781 0.43621379026795598088 -0.19181801899095754504 -0.14923972580763456008 0.079835998875474545322;-0.17752324329902854916 0.37309294723306335451 -0.16973441584530424286 -0.33258783452950835269 0.75410830039054221885 0.042271051491293523683 0.94415774326884283063 -0.96136636672661146541 0.028395455148129813971;1.1391039013726527163 0.63787323364699954897 -0.019560764952021449103 -0.42868129100266888498 -0.3295371661590386636 -0.043253287607672823156 -0.70836150160631816686 1.1270135629804995947 0.99422948798740140575];

% Layer 2
b2 = [-0.072177695796630636504;-0.35628787232790742889];
LW2_1 = [0.25351658126497522705 -0.2166473377493979835 0.1619012881962589856 0.46745279609365669726 -0.47227902353773659749 0.22511403468919347071 0.18671086291602412288 0.12804329312673959351 -0.25350936985085115172 -0.12379173355634760789 1.1489699132855990538 -0.99100968011151702175 0.13278288092651677199 -0.48933037333745321718 0.047594043257014564952 -0.18061987989623923268 -0.041771429682291763563 0.0065393247824064399884 0.091296932887887607966 -0.22531696773872458839 -0.22021924160812500482 -0.23694124976821781536 -0.13586042285904237348 0.055933883750365495646 0.84275691593573043292 0.20915948418886459725 -0.18051689919291694086 0.5870020881281342584 -0.26283026698142869515 0.070064566441819436937;0.66747497132368427408 0.68500392071933779992 -0.62060150255176249612 -1.1800183410140083762 0.51664960210471433388 -1.3749052465133115852 -0.34670200309043730513 -0.52143468081346466825 0.890322095975367378 0.1347511986500045944 -0.58759156401031398254 0.24198599658735669982 -0.31167763125815867165 0.90385699113452488973 -0.083785172342898450726 0.61022775364003178922 -1.2004096681884330877 0.5931281176914061648 -0.52507348699790545865 0.11449720489823221603 0.46501624939649000012 0.90678080009246042614 0.36384720074537629797 0.67805317250775865023 -0.95509763441576345233 -0.81124130551609274775 0.16486367607600244112 -0.41867787335048439745 0.11104905500439972432 -0.26147981129216479879];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
