function [Y,Xf,Af] = nnet_2019_09_26_18_56(X,~,~)
%NNET_2019_09_26_18_56 neural network simulation function.
%
% Auto-generated by MATLAB, 26-Sep-2019 18:56:57.
% 
% [Y] = nnet_2019_09_26_18_56(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 6xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.328004934281199;-0.24833072874126;-0.310407780936612;-0.332490962581605;-0.222380283827923;-0.251624334552772;-0.207057537459137;-0.236144333392277;-0.199675135015533;-0.193479658076882;-0.173080733755509];
x1_step1.gain = [2.68822868408073;3.4044242602084;2.92795156447014;3.03620428491605;4.52357737778732;3.64112217497048;3.95465840909408;4.49894863182871;5.06109811123841;4.99520320600703;4.90338114473734];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.16169936822559824452;-1.2376941117826176786;0.52488482439439443361;1.0607535576020590273;-1.4319044354191621249;0.57956287772962744587;-1.505505856106979401;-3.8514598905873942414;0.46168385220641533495;4.3630647115920133672];
IW1_1 = [-0.91092069421246468774 0.99076462305749868342 -0.52769970280272082697 -0.0034578376638173336302 0.12626032766643999206 -0.89532274834297520538 -0.830219990334828295 0.22935009444824150382 -0.37982202910868778645 0.79975347928921169949 -0.4538294053933581429;-0.89386215281699066271 -3.5706382386886779123 0.61647019367890698582 0.37921104696033536285 1.4063639876973377252 -0.70746031717449553433 0.92095242958171497083 -0.8902352611400407012 0.88692174179873728423 -0.36834674848836407302 -0.024727525017135994212;2.3488849866782550713 1.7776477705914335292 1.2070828678623115593 -0.078675075463927254815 -1.9105867776809764003 4.4069504901565590416 0.56585542884220740856 1.3350795496953049568 -0.48339642692149625836 -0.38128656172085412246 -1.559428667837035265;1.5121692534964503718 1.9910783587621501134 9.1248018489162490141 -6.234904192786669519 -2.6890931871531282837 14.959834035787325845 -6.1945902646082124932 -1.1962999192495957779 5.1498043693007398147 1.5735988737673187732 -9.9195376486336392929;2.1707906206117684178 1.3344849272613796831 -2.2725780421488344096 3.4269916424537476551 0.011098787136754148519 -1.4440224201463864873 1.2646968560582867447 -0.20962974586202867688 -0.21203439444471536279 2.9387437082331229199 -7.7225820653129533255;-4.2186727005999955509 1.4363451603468722073 5.7994612217544574406 -0.42209744297610962693 -1.1783736098305990225 0.4696993803732413264 3.1605679788902616423 1.7143085699005187195 8.4994521015897479543 0.20587991702858252085 4.0463125594369033777;-1.2822471496379044265 -2.288923809162650258 -8.0184165534505265072 4.3878432969303649003 2.830919369755125814 -18.539347029091771901 -0.1856393187724003635 0.10612774341388500621 -6.5089161599478728704 4.801647871634435738 7.0532947336489373313;-1.2014116878386811305 -5.6442471109384406702 1.5594112504553920839 0.49555644022770939383 1.7864254105012034035 -5.4477954351095059238 2.7307889258877251493 1.9899717785690200778 0.56697774697170588709 -0.58492157881778805706 -0.9967086982400552575;0.14491598273072947567 0.54389788194600219295 -0.39400036009894684463 -0.024475662872092667638 0.31769354505223212914 -1.665935010122927995 -0.48689867681268839128 0.35233202015742354218 -0.20114027120953903438 0.9690070924406530839 -0.58503340503721124044;11.678219949939039779 -3.1782192830996924826 -6.0412219341996884481 2.8541242341359005508 1.7255314249052136066 -14.658150934686762668 -3.5454859577133777115 -2.6203135998867712608 -3.197459144136286735 5.1158832676605880962 5.5778202096196185522];

% Layer 2
b2 = [-0.28189809259821241305;0.19972048647096712903;-0.14756147984329673339;-0.3483772575365964852;0.55462588704140025619;-0.5410423153582568645];
LW2_1 = [-1.3671968381244601343 -0.30966572778452045034 -0.1785571703298024504 0.019229223147964109863 0.090680895965026334093 -0.17591189244856286766 -0.18924247361803933631 0.19255287577790819453 1.3674334612056853189 -0.011149258977002352716;0.94072902249242684736 0.39518536964184847182 0.340200044737262286 -0.082526946063615214122 -0.12719414504819917533 0.19088439028325793201 0.31213458575674080109 -0.19882367164187450537 -0.84518839851224791815 0.021265420072760464476;-0.76411712928624364594 -0.40721847302552993675 -0.38047296251528084365 0.088681120947807209887 0.13040537005384061908 -0.1921840565281285329 -0.30916639843964616174 0.19419938773760034301 0.60910135060013603781 -0.025359902215914324752;-0.41789228200104183708 0.93207787707641076569 0.24616170818376389984 -0.23441857762757656314 -0.20823156862127675804 0.036914684640873801635 -0.1908492101345829195 -0.44074415379314063612 1.2074128400737369482 -0.22195771484209914082;0.44864048217665636331 -0.80125133711507035006 -0.39564501365549636924 0.43095405575317924374 0.24285629903394262419 -0.088943089696694524471 0.32060937814369638854 0.50468599176002615359 -1.644085070823125605 0.29077828005262218447;-0.4070916412763170289 0.69797520590552908359 0.39647186457848654362 -0.43826577558104740096 -0.21716704931876659734 0.10006259567177477887 -0.31973892966833483698 -0.4775166809656312128 1.5632461636254486592 -0.27589579135984154679];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1;1;1;1];
y1_step1.xoffset = [-1;-1;-1;-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
