function [Y,Xf,Af] = nnet_2019_11_04_17_15(X,~,~)
%NNET_2019_11_04_17_15 neural network simulation function.
%
% Auto-generated by MATLAB, 04-Nov-2019 17:15:08.
% 
% [Y] = nnet_2019_11_04_17_15(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.161443988792658;-0.0348157881121125;-1];
x1_step1.gain = [4.48952859324753;7.93185821039875;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4471016517907173693;-4.2254938535494801499;-3.4455456429966671017;-3.3432945020803499503;1.1832128322450539137;2.2566155012649868894;2.3189959132848851908;2.7184757142208599845;3.5061870506601433561;1.7287987847376276029;-2.3521654560438380877;1.525127559808347355;-2.2135708597130161479;-0.069019509980209142741;-0.1968633511686200821;0.69078263665468986332;2.5040991477326772774;0.63881891732744555679;-1.5830482442260338516;-1.7029131786834803552;-0.1333511807685385242;-2.0087835979487094207;-3.0568029341785663;2.3065076326553231034;-3.3661703194123964167;-1.2422574309919816038;-3.4553189404152022668;-3.7258570488985123248;-3.1336163401158079189;4.1649513587045667862];
IW1_1 = [-2.6122530309702751694 2.142211128285455235 2.6505129179477537882;3.6098973277906187818 1.9883417772186173789 -1.0546236177820478286;-0.083425762503561484706 -2.636535994518161008 5.3957751781705836081;2.2045953076681041871 3.4830395245534160331 1.6337430446767939873;-1.6786989179944409312 1.9486113761138645906 3.0463547170733038527;-2.8906682225036499645 -0.25376097565641431153 -2.5244328435043761338;-1.9371302288235654476 -3.2215527410435269573 1.2493350758815449097;-2.294857912817299006 -2.7962401463899793086 -2.2807169092174408576;-1.5923839555406875679 -2.9208473009264759312 -4.6868205816310641865;-0.65247544247038324894 -3.9097901346115464527 -1.9300174116635628874;1.3071314574207544279 -5.06485479769830782 1.6285590718798992338;-1.1302207968083570755 5.6464799765199149562 2.5844846154415495043;2.9384206929773468708 -6.4769529324403301018 -11.675555691111638268;3.6011196299612375782 2.1252964474787932048 1.3469485608534579324;-3.6352449797620960403 2.4543634448120377201 3.4220035857654438338;4.0895196005100231673 0.26038558726137200905 2.2782491804966520377;-0.78009516396568190366 5.8108782329316461812 -2.4655335846560499924;4.6887144495813704026 -0.26807063807917302922 3.2439789690410205658;-3.1351362410794094693 -1.7054034458283089393 -2.2526465250226621606;-0.38859046873002306421 -4.1967992107918297151 -2.5192845970704254022;-0.15462781710668282997 0.7300387319055233748 -3.4299473675702305542;-2.4757782910705508073 2.1518950547853874511 2.8327669091986082961;0.22763083130126274267 -3.5397873578905270087 -3.1327653411378557635;2.9286569400066397861 -2.3633446782629268235 2.2835962557022497776;-1.7253282312289430767 -2.8056006543184524027 -3.1711655192381562607;-3.6265425484263804634 2.3382816923347218285 4.616888546340790711;-1.0824290379736518641 2.6544413715061652148 3.2641931831724759761;-3.5545730222150120348 2.3610670077917967902 0.8999788126969634483;-2.6765287476843493408 4.440747599578539706 -0.034297464114416822967;2.1048472358755496714 1.7354806611060284993 -4.0212861035392597486];

% Layer 2
b2 = 0.8316450321197800255;
LW2_1 = [0.59993370643653953778 0.31421843337676602648 -0.88096488855151866559 -0.49777045413990805844 1.6469219896656561719 0.61977600265837506921 0.99748301514179038563 0.4123913410626546816 -2.7622426937356316934 -0.12437675112691717882 1.5919526646576231954 -1.1479572464359821815 -0.72467914718302817167 -0.13451406356615305815 -1.5002899296425593612 0.45856301452900422033 1.2657196313216192429 0.82996437856992821835 1.9217338368863927656 -1.8675233095898571278 1.3264098629593332745 0.089168543087858834206 1.2438062309430475416 -0.71304317266169925382 -1.3129372796929419387 1.2341881787143047511 0.0018340099833116249931 0.074522679571926569997 0.68856644407650924311 0.44542078662975126413];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
