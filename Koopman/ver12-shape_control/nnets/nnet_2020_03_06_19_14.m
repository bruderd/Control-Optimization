function [Y,Xf,Af] = nnet_2020_03_06_19_14(X,~,~)
%NNET_2020_03_06_19_14 neural network simulation function.
%
% Auto-generated by MATLAB, 06-Mar-2020 19:14:37.
% 
% [Y] = nnet_2020_03_06_19_14(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 9xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.17070707434277;-1.15526182675664;-0.489781696199905;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [1.18276138080477;1.22185734591613;2.02778021006737;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.569250617640431722;1.8711083647797019935;1.7048432497892211934;-2.4047599923755713647;-1.5187433620637345033;-1.8772572365237953917;1.3890585994585376017;0.57724031963795696676;3.0659097907374079917;0.071712650895317794908;0.22282962585952981183;-0.12968722796053827606;-2.0356033584121706603;0.24195295027701654855;0.3320698845383844855;0.37886894944661653195;0.19859034694821714462;0.060407619913345700358;0.014732491667621781112;-1.0901317257213474221;-0.24378713154091402604;1.9655136070230214695;0.46059414243808388667;-0.29936683009311687576;-0.88192181484981801987;-2.40300516025719757;1.8562269013394063766;1.8350210288364710021;-2.3310032709814447749;2.2849561276005849741];
IW1_1 = [0.74050207327374384381 -0.47190827355704861867 0.37235427803734005847 0.18341217524715502929 0.27365969317924493387 -1.0016965280682523787 -0.65588255007068230196 0.1059298879311456193 -1.0640740768383223358;0.44003358396913583306 0.56492567738364640739 -0.27467389843681011552 -1.1472526490103713837 -0.38354074794133413695 0.87988160373638879541 -0.1429764040155561966 -0.7952127534980412138 0.99821824047966878357;-0.75991039856191300306 1.7480620985059789341 -0.038114450126856394552 0.64798971702758112468 -0.044278955772479394737 0.72598918388748046038 -0.94343588653391663446 -0.47928016499706371789 1.1580285506652514549;1.1360334427792198042 0.49029838233016992399 -0.46858990049595777849 -1.8734733395662328537 0.37715448037702725692 -0.91840134038433085539 -0.62376131877135543302 1.0390324574483960074 0.43774154495379080654;-0.57387312605999651893 -0.19687664768796694914 0.046497184584828016307 0.55828841127533146427 -0.058966366927209593052 0.28519347063202865611 -0.24791501937709414793 0.38340206058213133211 0.34800603918105799117;-1.0294081118057907265 -0.17427036099032974792 0.19093078725743964363 -1.2816260601413729248 0.17198356773996373303 0.61441041122063866364 -0.49631590535336006509 -0.2561699720068490449 0.12076771470947465781;-0.57231437409501328961 -0.81279512089176264578 -2.3143211263427292401 0.36620877532303419688 -1.117831829978755076 -0.50460522765760107422 1.0034827184538492872 0.87822011816661005312 1.1063773065547921615;-1.2951077889854014646 -0.92789423771318069178 -0.028286398640363474843 -0.69364402063750463245 -0.68433966966509318652 -0.57065068736734925192 -0.012148892295074239026 -0.063917375300287571083 0.77617778356985700494;1.2383688431878279168 -0.95451747610325010651 -0.47213696785461584104 1.2266414187699730132 -0.58924263182120983906 0.62778717112378545906 0.39935876078096155251 0.81169755921137010102 -1.3251334450033223078;-1.5804105802391146263 -0.17643445579453048699 0.18939433758202686708 0.40984911033701004746 0.13344486620160714296 0.23795023296710063332 0.47763104847569343159 0.040017979013431730084 -0.35847521003129506623;-0.68793226864640977247 0.035463358385187306043 0.16858527865484376762 0.33481416269280384057 -0.33838271085112003878 -1.0152159722269520348 0.28421011044963795378 -0.3368576879474217689 -0.12503785725685578889;-0.24825652647555065955 2.6293497625992987565 -1.2163405232074664397 1.5140117878709897781 -1.6730444339585321956 0.89122679295911966246 0.046766468508663248949 -1.1606459315139130428 0.72494229694914369411;-0.1701845440782503438 -0.7688769252762086559 -0.48180045935184451222 2.1495174347497201239 1.4210103613135300904 1.223700049747264762 0.35098297932879479744 2.779669494531270324 0.84508925464595130439;-0.21526264165003264339 -0.16949955734589977618 -0.25351034538376476801 0.025265112487027417687 0.056197071284117702805 -0.79695873878498035836 -0.071324654409915352882 1.0684155980237441952 -1.0383151021577765594;0.87234371569641344646 -0.13831460633099176838 -0.029064689716687033827 -1.5184730565768163046 -0.45159805284269349812 -0.42832636608914753662 0.60093227036360719051 -0.020285008461399925417 -0.5925650507223594321;0.96777991807863439355 -0.58776705910742099714 2.6813264885281475891 0.51502037098642217128 0.71878531893607200409 -0.37541967579519458509 -0.94063987621759004298 -0.20647568435648969154 -1.9877169987123419759;0.30166381318275159451 -0.43188612550772698118 1.2801906581782973582 0.74061522232602505778 0.37942282273521077407 -0.247568187965709674 -0.52449937452599026955 0.55639522439789401709 0.12184610154721964292;0.19458907564833577419 0.48003440084329451754 0.92155227502585390642 -0.041425348860728926359 -0.043675262466435632591 -0.60723159220656508506 -0.86317664682897499162 -0.65099952201798449991 0.35176937244397815663;-1.162554495784141162 -1.5478503711126621045 -2.0088795228688813843 -0.70965310230931766267 0.18360177776562192076 -0.24968770665043091284 -0.064240904851023281075 0.073358892558786359395 1.1792858232700393906;-0.99895288224108347297 -0.24708406529691906428 -0.38690475890254300007 1.0657483821799964563 1.2891059985128885401 -0.30746974794522102803 0.56083714738915091402 0.42841763036759650252 0.76854821011823093446;0.14963353634200110553 0.41696034042509644291 0.56450226995095298399 0.80578208644805582317 0.46105812873072726799 0.051916137181930416267 -0.40418230744613908856 -0.069200785248102025804 -1.4087607295577768696;0.1955467553531621272 1.0687957593313670568 0.82547358881383259277 -0.19905881809375836067 0.30644596729389284029 0.32815891663043483817 -1.5435297125804954277 1.059479238085896835 -0.57617418940501718971;0.78770853204756385857 -0.55755423149828198248 1.0190556333794194011 0.43039379489144224955 -0.062800938594056124331 -0.17233523945318285353 -0.24294545172453207993 -1.1005577225685791998 -0.16807657890006710844;-1.6186417907341579259 1.6889241511792163486 -0.38058698182268924093 -0.40494448098688523574 -0.096322753644423997343 -0.71371091476951209476 0.41336704725752099199 -0.051302562588388382625 -0.032772216165020608136;-1.0131952715149457056 -1.8548155558355559069 -1.1701442227791334361 0.44642216308839366423 0.86452888798898819278 0.37762121505633228224 0.5242299369888920868 0.61160111342293399517 -0.6761056354604830787;0.30265592076734004756 1.146277568548058845 -0.34448242362135506056 -1.5769732284571360559 0.13505025646829030284 -0.27741753005756775163 0.1828257058026787063 0.45418669749610418584 -1.0095471813974288278;0.63213270585162384396 1.1624880556625596384 1.2865648433747829404 0.2452918346266428351 -0.3539665781352073215 -0.7808368522103591447 -0.24576516047723023783 -1.2034443865392103756 -0.25773982423198904534;0.55864194894553376169 -0.04343126853938179821 0.20764804976942768944 1.592691184412633465 -0.56288739664058351497 0.50483903855324285814 0.21971044437545175776 0.00034934244797451760589 0.31107940293740643511;0.18241864322415948796 -1.0989083354719488828 0.48218402418661043818 1.7015648764107964563 0.63425916998544040748 1.0813379385768200347 0.80207605615978061486 0.28949371449575489468 0.38919895937162124477;0.16657894257518199299 -0.28045722946434364919 -0.4392858785327745097 -0.083088882538113126297 -1.268026239004358402 0.36061062618840727945 -0.74238341666347007486 -0.044575913930102913085 0.40461870939828181726];

% Layer 2
b2 = [0.71702221955310319057;-0.29075382835425644945];
LW2_1 = [0.5339021297429794588 -0.011061755643149413439 0.30641120322977566381 0.4894978798480923432 0.13973495645936620524 -0.31778309048177205698 0.17536519168386002776 -0.076058936114631270353 0.52590680024443958729 0.093381826845246707069 0.38805785757750160814 0.13255694569958409446 -0.035250624387358042711 -0.14658288849329401127 -0.28194289829165675165 0.099070551879352139468 0.040755301590325802852 -0.44063085560395415241 -0.1178755403156007131 -0.12349312230767993392 0.14353080903675879965 -0.23229644217550146634 0.18768920425195120827 0.22463049871165213789 -0.088084859916752578091 -0.48034530960949312073 -0.43759756955066475559 0.15408188882207188297 0.31327007774954362951 -0.90095285604170982641;-1.990876536686554843 -1.8023519519945858658 -0.87233152734733687694 -0.95593192013761418835 0.62414904111605873371 -0.6323512927056785804 -0.82710910240921398096 0.22990711729373919381 -2.1912309981957966976 0.39099008454532424572 -1.3373631108785826171 -0.17833958318110909591 0.10825801360815524854 1.0154829615558278455 -0.10180072003094270405 -0.36723092879482543971 -0.80104663741417581058 2.487470477158380433 0.30108712075107035844 0.76334656781309984108 -0.7450117416515522617 1.2194322197638558514 -1.2340374911335034724 -1.0072856039732491773 0.467024109916011676 2.1060043058746544808 1.708653440800647294 1.2905690351779484093 -0.79346588521866923127 1.8003638578175447105];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
