function [Y,Xf,Af] = nnet_2020_03_28_18_11(X,~,~)
%NNET_2020_03_28_18_11 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 18:11:32.
% 
% [Y] = nnet_2020_03_28_18_11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.72281305184405;-1.73348352713206;-0.541821809756084;-1;-1];
x1_step1.gain = [0.66507295998554;0.945745189107077;1.4794909223529;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.9639761692602815124;-2.7819206357071011304;2.0600613347717509072;-0.99639338504664776153;6.0827729582250675833;-1.6409140912753350516;2.2073573109440580708;1.0818390194205056432;-1.6522419563587906755;1.3451903666200331067;-2.7837670622062757886;-4.792101338156441237;0.25789842011350716522;-1.4097767175651336746;-0.07606468497259617767;-1.2672882911957099594;-0.63448931828130417099;1.3758785951146803583;3.4647458718708930014;0.41658725804397706005;2.8731457019708988021;-0.81898774088562653617;1.3193751008812353298;-1.2542646776123924646;-0.47235582942413517626;-2.5846656128230605098;3.5447758191501419489;-3.8133773058564570668;2.9784316433977715555;1.7812245409299374277];
IW1_1 = [0.45998576532490054181 -0.18528404649197577347 -2.3290691158631120494 -1.7392647045063485134 2.9591693681231139301;1.3874193285703493306 -1.2658168896811032855 1.218724895614422099 0.12519262481662785103 0.51151721218653811718;-1.4990142537717323634 1.3219141709156965181 0.048360809071316103458 1.9886053222913528948 -0.10398816595224083525;2.3038420148918938857 0.88552995293119740605 0.122121838929308002 1.5798250773183182272 -1.6799430589161936656;-6.188655834616341167 -1.0358990357952906347 -0.20447230232174368192 -0.5489233767041068468 -2.2578568603326374387;-1.4565463725630833913 0.50022377784394611577 -1.7838830762919066775 -4.1126483914881264425 1.4676649616030292833;-2.9720112820203361537 -1.8529208722193319936 -0.273473335032640541 0.18886725428427650342 -0.83610766332923658339;-0.88058467005039875453 -1.0191617262141849931 0.97270084952573432346 0.66359696873427354014 0.80413354223838284796;-1.8905970198210928501 4.8563468551533146567 4.6788322717120971461 -4.3117265918684140047 -2.1253858723728051849;-3.8863749486708254466 -0.74798135595460013558 0.15329877390073901045 0.19476135648206532869 2.578426872844349127;1.754007825281119759 1.3164796694216234219 2.1692276005296293739 4.2515906185352569935 0.042913620219773442044;1.6472449757478457855 -1.537247014201156059 -5.061184742256989999 1.3368504060570076675 5.2074966584786546164;1.0910058483498696891 -1.4022878148848443303 -8.8056206608062428387 -8.3095561908238302351 2.9020772565043313485;5.2206045708719006626 1.4469499860680696823 2.1807529731220633984 7.8786085840893518295 -1.5892054142493516888;0.27838924509431567378 -0.26086527197526510058 6.423985738210787666 -5.8910131142485626654 -1.3008820239331113644;1.6901652534811308914 -1.5177603727353903285 -0.36102623980051967711 -2.7782090143619533329 2.3704758882360317251;0.092192545407284026693 -0.53182029919572559873 0.43740048764805022907 0.28418738271900489956 3.2551605201883262453;-0.67774073999630712883 -1.0062504767343887213 -0.051889358732794883811 1.2366846092331753582 -1.751557838526182076;0.73193160818602154283 1.091188014082969282 0.21206140026551006939 3.5496151180582526941 -4.6443456862114294026;0.78367064389424223592 0.17738178997445522289 -1.9398354932675712092 -0.940725331463434844 0.73276924402096443867;2.219466333290861737 2.0417720769970482131 2.7067580053284787667 -0.30750824044083990838 -3.7049312590270231382;-0.65581602083185375207 1.5255448034438658933 1.4703456980572287005 2.1274137908820240916 -1.6728883191247223561;1.2551240148881408487 -0.45058259978894177333 -3.7668332898737415526 3.4756970376788403065 0.40770186386234386067;-0.54809481226361156381 0.30432462710886842849 -0.59251124107950092768 1.7622760737314380197 -2.0995828656928736677;-0.96418385908314707677 0.015672130385614040093 2.5154221865392134561 1.2767632301723199628 -0.36649678441472932633;-2.1745128755579345992 2.8203907704973913972 2.2129523715127517036 -2.7422771432660684177 -0.65011059897151957099;3.4266088366782394559 0.78359738127554212639 -0.042794213839718743542 5.1805751735897098698 -4.9332581565137614277;-1.4171662498073058778 -0.13946276368053187045 1.104313148228963648 -4.4718494017894938608 3.5796966477726366307;-0.23523077612123152735 -1.9329544378900134216 0.69249563397216407079 -1.2800738294122773198 -0.37451302117648349599;1.781453007527510346 0.80043252917708751504 0.75663622344711056744 -1.2578315724502464601 -1.1970902956830649089];

% Layer 2
b2 = 0.28700562969937920554;
LW2_1 = [-1.1514999024263354865 0.37798891332441331148 0.10311644022046834168 -0.93579628371554302024 -2.3773795657110095014 -0.42563927107302790276 -0.680953339490466103 -1.3329940072512556082 -0.10024384503572708605 1.4818980570683646381 -0.39012456263760553199 0.23238017772077634859 -0.12850414108819988024 -0.53824453719466514023 -0.15960053619704669958 -1.6561769689417025209 -1.5382148945083713443 0.66990142227044757739 -1.9479176808137632637 -0.92815659853758347708 -0.54858671348508247778 0.71049962756863904723 -0.23895817955706435964 -1.2938553173030298282 -0.73662808459058126687 -0.73462205304051375609 1.9253468526682202544 1.7528146276826341854 0.83432389384447169789 1.3124981600021252692];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
