function [Y,Xf,Af] = nnet_2019_12_09_14_20(X,~,~)
%NNET_2019_12_09_14_20 neural network simulation function.
%
% Auto-generated by MATLAB, 09-Dec-2019 14:20:38.
% 
% [Y] = nnet_2019_12_09_14_20(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.892460557255223;-0.159822973539726;-0.20395273342722;-1;-1];
x1_step1.gain = [1.76710987356228;2.19384987550025;4.13424934375881;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5999121176116775089;2.9442273431629257807;1.4880938794779974277;2.2963293227087042681;2.6213046619151323391;-0.846049698872289202;0.55529573012601651794;1.4211685874056576573;0.24091114278050790309;-1.2584898863309554873;0.9644808141796296086;1.0705636009898649164;0.11030989785716328877;-0.78989080572060521579;0.27107682673782262928;0.47030510711789252909;-0.26927102180272621812;1.3199238286102137341;-0.22470943592798051092;1.2824843317754452965;-0.75742014615226149754;-1.4000422244552639395;2.471880885947260964;-1.3448357903500847144;-1.647768236175070955;2.1702668282676542688;-2.2221739176990746856;2.711407385926489777;3.0685283962333391727;-2.7278389247458769695];
IW1_1 = [0.75026308850224299185 -2.1342365923038801867 -0.5704799680433135789 -1.5617492361183731298 0.89395170976489335413;-0.6378194479461558597 -0.24711768126381508659 1.2732600155138020792 0.094500649282877893786 -2.9286158323259834368;-1.3225547104422961109 -1.3412398257632629495 -0.67513495144034618711 1.7081083987843901362 0.92507238437296668288;-0.45895277070828083277 -0.89998026593310531673 -1.7821704734780894341 0.93884090908830686306 1.1970235910631630283;0.510884882268907492 -0.64224897678786208033 1.6498795623232085372 -1.2503730699182546982 -2.8051375674636327417;1.4122409392389525529 1.1804072492574582132 -0.67076670060718945887 -1.941304703439184598 -0.300068236534970334;1.0594452488270689194 -0.134314401937174005 0.23425695668173646125 1.7164202562171775313 -3.5211596170352748025;-1.137943621424196694 -0.65014740877839249933 -2.2704234784533912084 -1.2049612467019361617 -0.064061624100369668477;0.76394315842669968664 0.97935091266678298005 0.41542149954284157687 2.7678601174032038124 -0.32369307161673022133;1.5146836101022449483 1.2908488528039105958 0.98234902773297394507 1.1898308496130618472 2.015374897421465139;-0.38103447800893452957 -0.82870298367042427579 -2.0870197975155710957 1.0026508321336595753 -0.55333503646422455002;-1.2546598864827511743 -1.4041571951886222536 -0.82847899506979150175 -1.2788069425328971729 -1.4929925281496188028;1.6933348672402670498 -0.029760506740881681464 -0.5791945388732139266 -0.60205910186031896814 1.3757032969794409372;1.1568756745322410495 -0.20724059229585331532 -1.3042181715680907228 -1.0865132475014311897 -0.82694039413031361629;-0.094771039034238530041 1.1391790672341388646 0.31793067545378911332 1.4878751604543272169 1.1169166332289472976;1.1048933674514997971 -0.34747864709435261066 -0.39922105762304543886 1.338622224035574515 -2.7392661780688030149;-1.0485413945708017547 -0.024945906689259902955 -0.90789587846898667234 -3.6612723122529340358 2.5065915176902615613;0.96147649770539345138 0.17191019487237008123 0.83385948002436494075 -2.0874300962439877871 -2.0571113520583508283;-0.76535399301253403959 -1.1626389219441608525 -0.66943677486182162628 1.5400318695642059019 -0.46415327135788747581;0.34553031908437487063 -1.332360671362383675 -0.66276022666076517265 1.5635292897671790868 -1.7488969966521135113;-1.309362866123302771 -0.61129957731188366843 -0.91363965097995514242 -0.89507438399052685618 3.195355585535627263;-0.11313100845013486506 -2.776286025196827989 0.39125840040524995089 -0.50058721775776848784 0.52037368940725903244;-0.228014942012468802 -0.63482722854109063793 0.055977203614382783914 -1.0438558299847779942 -4.0958265358800680644;-0.43268593675617961214 -0.96507601801894082882 -0.61111358842169682948 0.37920539181187623567 2.5418777475051799186;-1.713875131291089593 -0.049677585015812812663 0.55655080213401075806 -1.8255416995801314606 1.1125059385384572508;0.62289269892805643192 -0.81964991869319814288 1.5233544361878328388 1.4927262566042396319 -3.2363847534371004144;-0.35072857658276523907 0.87193403662542323662 0.31873374919928038063 1.5275929670537999883 3.4548862170966883056;0.56790508542266204817 -0.6345674002672186953 1.7685091950388021065 0.47954586250407549297 -1.9457049992155548424;1.3472626442378496936 -1.1772444513485726958 0.59837557972228905268 -1.3803231196541507764 0.83716273975675870034;-1.0012687987474400142 2.045787644273825201 1.5649042083985051921 -0.011715336885946725509 0.26921568570785220365];

% Layer 2
b2 = -0.58803795729561425532;
LW2_1 = [0.43965883921190962447 1.2550952204794747491 0.74162798868160495491 -0.16345698712424513999 0.97347581669439808838 0.50856679084241585009 2.1337452918333221774 -0.23582434717697509097 0.54368820881907209408 0.83687848124457053789 -0.21937991857796301787 1.1701180878413710573 -0.35038768676773762722 0.28146848415058456361 0.62388478226475174715 -1.2883931397773373817 -0.31826198074936834503 -1.0369058448115553439 -0.50399946861157085554 -0.53202602143798594092 1.4050249530955942756 0.16080698455041012029 -1.7555674055215639839 -1.2341881457844430248 -0.32372107735166744114 -0.78054116728696532057 -1.7218238339211939802 -0.53875506007097551109 0.43373876880003248147 -0.33043811582480564493];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
