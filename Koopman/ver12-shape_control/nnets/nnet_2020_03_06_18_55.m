function [Y,Xf,Af] = nnet_2020_03_06_18_55(X,~,~)
%NNET_2020_03_06_18_55 neural network simulation function.
%
% Auto-generated by MATLAB, 06-Mar-2020 18:55:53.
% 
% [Y] = nnet_2020_03_06_18_55(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.377025548394748;-1;-1];
x1_step1.gain = [2.75753644256559;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.9622641143480124004;-1.7484182284670615193;-3.7743872818631944988;-14.343507724054425978;2.4139982912596233966;-7.9269248048723870426;3.2010391840299030619;1.1505769292191256881;8.3677771973841519326;-2.8451691666528211577;9.0071330718663364934;11.64237638880002379;-0.20734795137895623007;3.4603755298440512789;1.8512729045524984883;-0.80994798535906153969;-0.21694610286342078109;-1.3057137061875685458;-2.365693834816180452;3.5744146527353777287;-3.2572302964784110024;-3.1038620394429141669;2.0163837344632566939;-0.73926976819883438719;-7.3045195379195586582;2.6704268306468312844;-9.2416145202768174016;-4.8145065718208996941;-8.0601917252857564478;5.5886983249821193809];
IW1_1 = [0.85717576329552502834 4.0304952048932491948 1.0482800701867609483;-0.59844004383225590793 -0.72006800819431504568 -3.8433891926578831466;1.3954691582934446448 -0.22462198320096848914 3.7980628787639370003;0.2195399681975580275 -19.289893612325567318 2.8835808997231486828;-4.6009257782137966686 2.8369121287396521502 -0.38485477627175218585;-0.13322620458392800402 24.095501933846453113 11.722919579583773952;0.77768791357677691245 2.4306359608605023759 3.9057129182055558836;-0.43598423600265795441 -2.5612966544766546662 0.5741469794247555658;0.34972676185032702811 7.3057385954799727301 2.9166179093654416299;2.063027000228261354 16.2090478052732756 13.85489431833848073;0.28023151702784482309 8.7696307988762178809 -13.783968384670531648;2.800244440744211083 -6.8178965944900680185 -23.760744859639316928;-0.64920696490595197758 14.599710129155129223 1.9994192540771940081;-0.72075974518696839244 -7.5095252370771090611 -9.5853505923061295135;-0.70543750197949772751 -3.1675152886308004518 0.12925538616710671724;0.92588153079404578172 3.5336511332103546223 -0.29997133005932474781;-2.7218605921673688641 -28.080919739746235564 -16.993754178582456404;-0.61934917905452391285 15.994461048441294793 3.4066426593576379922;1.0994178138484596019 2.1836876793836834665 1.4509192182183929809;-0.34021971705564374444 10.990119688950841237 -0.33080333928938820964;1.4019525679895852299 4.8277683152819124146 -6.2834538087225588754;-1.1544996892522705334 -0.14948186297225157793 3.8596410591335144069;-0.16782571133824319976 3.3874415454669066783 -1.2456110184578119693;-0.69906056693289886361 -1.94767579271664526 -1.6988651946153525696;1.2031936354279857415 7.0797648478057766397 6.7888029716215294584;4.1884201196720907134 -2.3057595559507486627 -2.4486002406953559785;0.90047765415423441926 7.4778058538708309655 -8.0769435008272552068;0.059103011014213842345 -6.8239793793223402218 0.87717940637880842392;0.87834359589108890187 -6.2052847771957706513 8.0031987392295427242;0.28747915931643214238 4.2410976334820871259 2.8685303491000815335];

% Layer 2
b2 = [-0.34106449755042106409;0.08164362598043164998;0.73879821945221268997];
LW2_1 = [1.514589474603470487 0.85569026998433939113 0.82764702826349412224 0.084744099000372871688 0.3955346010142328228 -0.82809580264098703317 0.94689010825526864767 -3.5597174872322043804 0.30658855395382178521 0.7132568235729359607 0.24443463550211089186 -0.11338026596937954282 -5.080808762105751164 0.081897126114023860444 2.9151035691279845175 -2.4457132001526766807 0.60778559961829359271 5.6011652432403442603 0.68761013658243019808 -0.29743496541859265614 0.057143932181775304591 -0.90029395717843085922 0.39493945109675343552 -1.1385736488207809369 -0.095341704209986041785 -0.4034327544482345651 0.019322371605090604002 0.37526770087709704349 -0.15981854754579838396 0.0089813639388369864713;-2.514456636005562018 -1.0809337720422138585 -0.55185242950082824542 -0.56390136408188529238 -0.46379168329442566066 0.81291110732598603761 -0.72104665796540001743 4.0079613113385947898 -1.5023288760625508331 -0.70232910271602577712 -0.28610555784862495843 0.10519858554795140371 3.8165855369748973303 -0.31131873085984068661 -4.0088745013645876725 3.2718137513879530509 -0.57421771911816066325 -4.5574111421213858719 -1.3730348124993911885 -0.12919862167615861481 0.15118678319279438282 0.81058732763702789903 1.3442978432490404472 0.43377335338739925197 0.42206709403949371762 0.48281487663977779023 0.29946083044755372748 1.2961888523294626818 0.34212844930044294944 1.583548070672206487;0.65554184705099238784 0.15540752350976896889 -0.35343416061899912695 0.54956792995029291049 -0.34776281062704467173 0.47661619164108925961 -0.2159686009610733981 -1.7119709913251279776 1.7353631983920696502 -0.5306609456147521886 0.010042167259251886732 0.10872194644757654514 5.498220172574197484 0.27948945591716706227 1.77289714679885968 0.32466084227955932517 -0.55730305524639789372 -5.345742803593565462 0.52614836321891300663 0.70678494516414547277 -0.3120433169967068987 0.86543067557557529224 -2.9088549095873559303 0.3852256113806926674 -0.58012509269383227828 0.32039463968264603189 -0.38855593973202312563 -2.1549497725358635059 -0.51492769745892619238 -2.4957982182679190331];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
