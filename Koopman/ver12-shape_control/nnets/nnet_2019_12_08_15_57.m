function [Y,Xf,Af] = nnet_2019_12_08_15_57(X,~,~)
%NNET_2019_12_08_15_57 neural network simulation function.
%
% Auto-generated by MATLAB, 08-Dec-2019 15:57:55.
% 
% [Y] = nnet_2019_12_08_15_57(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-3.54667154161099;-3.37345023324148;-2.22156478599685;-1.69474640641464;-1;-1;-1;-1];
x1_step1.gain = [0.253038355413936;0.293870550051212;0.461532218050341;0.572757527041794;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.0996996004979444628;1.8460680232639652409;1.2110595877755820915;2.1573261094920921366;1.7665927922933746252;1.400289644440675163;-1.3223876498847086935;-1.1697462203795550018;-1.2286546046662316645;0.98077957434558826755;-0.68853303023111789294;-0.21999059001223797427;0.6863616988566731969;0.34553958658375955038;0.06683159263207501255;0.23931590299776853148;0.25732979331069172346;-0.65141923806637358485;0.64121859280153037375;-0.54905423945571718569;-0.087193378997746331938;0.72821866644501243027;-1.0488128424385587678;1.3726857303090873597;-1.3199381792666489144;1.5928318982309555008;1.8694338881911929384;-1.703602630257515127;1.8776865996743234977;-2.0593715090823643266];
IW1_1 = [-1.2627173736933119397 -1.0407124939573431099 -0.15955919096171602978 0.27736826032935701924 0.86854997254705257337 -1.3139033170140577145 -0.30241859362534123656 0.65653898479439498637;-0.12869644436534513621 -0.48988333370340786388 1.7996920326549818991 -0.56113501011754318704 0.2288052472996363329 -0.12428172607385706838 -0.33051535387543212741 -0.89882261882097458372;0.56036783043769156087 -1.2684393917692264875 -0.86474871038584699701 0.3315039144848200281 0.45411949845441046403 0.19872043975302453034 -1.097186270027299404 1.3970807795982009836;0.073177412013332387986 0.23480237793531547053 0.62106386797621437879 -0.61234074551825701249 -0.20950416882840444677 1.4109321459273320709 0.58331144647756882904 1.3604108942564629992;-1.2312270948365844347 -1.2161892055390672862 -0.22511372608350352365 0.28731957181732920015 -0.41688663510027124115 0.4042532473080332478 0.55600677782603968868 -0.80271545747481121147;0.54750510629798809781 0.66965002455228672673 1.0365621487730811712 0.078651963451005724171 1.0293935427295646257 0.1721330402151067529 -0.81237215468296242182 0.87772046206762577292;1.5711673975430742178 -0.74959250635710761301 0.7329133580414044502 0.97015913928080976802 0.61418223213546030426 0.26439090519188135353 -0.59705896320169016267 -1.0778800012332014902;0.17272390309459206836 1.2656714907674859738 -0.44152159710032107265 1.1401907557983885777 0.77901416308886795026 -0.57504521003141695346 -0.051692676724078415185 -0.8251227713085004245;1.0398103736802501995 0.99444518302254902853 0.31820422928301356214 -0.52660010659924494369 0.41528360187475477083 -1.043600146393121042 -0.38753165772907427478 -0.66994162120555966755;-1.0841738771455107226 -1.2881110620405149536 0.11226148607607085161 0.17437311491794099672 -0.89531669977904237978 0.5666622534722325355 -0.59826235741357958187 0.17634291039587407512;0.99543833071113096977 0.0533198620544375404 0.20470678094314809226 -0.93556122263408258988 -0.39600810473904368703 -0.0024318898369818844202 -1.2947693076548094648 -0.56418213749502543752;0.46202445119685570107 1.1992556063377970421 -0.74391409776970318646 0.37719716681666759506 -0.86814800266278857599 0.95219778946442112932 -0.9550379592847773047 -0.91724665849827502484;-0.49328554273182279033 0.80787408499223412051 -0.22238312447968427987 0.99533038096796266903 -1.2196493639194507796 -0.29265017002727122808 -0.22818313127946346364 -0.60279016194739132306;-0.71187903509362904231 -1.3179779728566276553 -0.38669759118799779118 0.22031575116843471474 0.33962258761540109475 -0.35869533676376491593 0.72416400259004398698 0.87331973881567803719;-1.0433931060251591116 0.66891156541433061111 -0.1527663493461391131 -0.40190363135519702187 0.98222918364262057356 0.39446541218675662543 -1.0494222372299737422 1.158129752728996209;-0.33055533649433344046 -0.028905003741364398984 -0.087128042675514841275 -1.4576851604885487923 1.2050093297611137455 -0.81952617947598938031 -0.79002075108940295056 -0.49695459448756046372;-0.14257581809629307767 -0.60431871431925865412 -0.20668633424928511966 1.1193910733097118815 0.37298283755645822435 0.14005322154919694344 -1.1106859876213512894 0.84094844278412417271;-1.1544158134540905003 1.6655804795583639688 0.90343976995410690822 -0.44112183063919546688 -0.67734885433058822368 -0.11893264570502302957 -1.2118513784291433666 0.083465322714217110578;1.2225677647393868863 -0.27725266459909431171 -0.023782008917489286248 1.039867150560504383 -0.87070742519915744762 0.04153557872577505472 -0.19050840736014645893 1.4145180059232060898;-0.95651930945208774038 -0.84946453968283563984 1.0387648196117167387 -0.83951495361990602362 0.91581128682027157506 0.51259933416585923283 -0.32346051600213221455 0.74970408067330607249;1.3407990884568521395 -0.49236898773686893493 0.26669092984530851087 0.36926067065657847133 0.48587184434044122794 -0.44254394419117998316 1.1270427793708166497 0.70868816084274399714;0.00010017692938774080957 -0.089121898969037743887 0.96076384010360871279 -0.9928722974969299564 1.1391407805155027155 -0.28693319916244719447 -0.68362973377724334245 -0.058205731385328210448;-0.53483550781120647866 0.3225316214336675924 -0.47048822896496711454 -0.98386265295054609048 -1.3875311276231672153 -0.48830535543046132974 -0.69357208350635823901 0.5271817488088158532;0.52038291956243132308 -0.87190996621744976114 -0.60899615782773774963 -1.1333148910244776886 1.1320733229819941457 0.0042034112430757251261 -0.30700703962945052883 0.41144792251790518467;-1.3122535076464427739 -0.42884481956797021462 -0.86223499975190254219 0.51858605063080875919 0.6808027454225756836 0.30920637907775433417 -0.77880035494979338306 -0.046813164660100249626;1.5009401743089842984 -0.91951325141067741242 -0.0621311546181284452 -0.46723983495484083805 -0.31263580499683846226 -0.068269403162879174762 -1.0739613367777585129 0.31151680710033780031;-0.28252833827046813786 1.4585756425243343593 -0.12837051186126371971 -0.37754372768549498973 0.124739359492492069 0.6573000831646256259 -0.43669664845760908234 -1.5117357111710614248;-0.24684516096710523714 0.65560988451291146717 1.0751665427350225457 -0.33836059008149249605 0.37498804203155905457 0.57796963782210619698 0.80408393191260962851 0.47612414450165035928;0.69381583346099440224 -0.3388314558997339021 -0.2558620705555335606 0.12531540156338455416 -1.2765551873398344185 0.87307072229328774871 -1.2857998358000839456 -0.65196129346272757576;-0.91679689812357967327 -0.32500011510922061087 -0.27321074561102459688 0.77262208412533361912 1.0436667258131007152 1.0754250517610581817 0.22875970808663753653 -1.1146517575244627718];

% Layer 2
b2 = 0.070384605903510477631;
LW2_1 = [-0.83334379307497263856 0.6273886064659931483 0.64049959944636136733 0.34587096076372714215 -0.24506349200677782219 -1.9879233349660152541 -0.47051474068129134354 -0.25663677752675412291 -0.057807170609519946403 0.2400236192753568143 -0.34351652062793608389 -0.33288976405038583906 0.27406740610885715892 -0.56933927507772086329 -0.51155172582805175097 -0.56346584802635613087 0.38238716879606277077 0.39564215538058256083 -1.0461637436962467618 0.078638917116455958611 0.46991622719387637908 -0.40525219502781656411 -0.45107581015917069811 -0.12578566938228966099 0.056476738247247866564 0.80663682474926856614 1.0596337428076625375 0.61945030010386392672 -0.24831543650772977538 -0.4080960254424338407];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
