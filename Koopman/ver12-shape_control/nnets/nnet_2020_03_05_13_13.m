function [Y,Xf,Af] = nnet_2020_03_05_13_13(X,~,~)
%NNET_2020_03_05_13_13 neural network simulation function.
%
% Auto-generated by MATLAB, 05-Mar-2020 13:13:49.
% 
% [Y] = nnet_2020_03_05_13_13(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.307855541544309;-0.27025442781422;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [3.06103169003993;4.0920960213284;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.1901394739563411207;2.9391831269356245571;1.353371760667420709;-2.0132424756159514878;-1.7715409419514489553;1.5848772130130008851;2.2035854441117592728;1.3270118417435545766;0.24989996472281458817;1.0377627439003351828;-0.958917448724046384;1.3412735905707651174;-0.020759474399112014253;-0.52569402618413274553;-0.27745337923925517121;-0.14827453318315678144;0.32178800477161739746;-0.62206737365956055186;1.9387912000421112513;0.089414224377092718643;-0.2816082555917247543;-0.43011995528940283329;-1.0764612656491576725;-2.1149472847591481717;0.90348532618490018375;-0.78683737650976848244;1.7104193003195280465;1.4745902645644621831;-2.5097066290663545551;-1.519332095997101284];
IW1_1 = [0.96142277039013490647 -0.75122919202007920614 -0.69459550876465048219 1.0501021788127804513 0.27376332634610561767 1.6578365282193734398 0.53182721356637907562 -0.54360605089214775187;-0.85429753429686505761 0.72904870891821438317 0.96307538202818354645 -1.5702539426158030889 -0.4796090530768473692 -1.9195689372381292692 0.35603485078950830589 1.1123408660331464137;0.02846784237263363937 -0.49402182905602304297 -0.23373280075442373627 1.172155350884395153 -0.10606821238930030926 -0.65114687736366672066 -2.0095004199589854288 -1.3019340412170015142;0.074489780331244245803 -0.73433605154617676014 -0.005556184104386926656 -0.88832031866878558013 0.68627799830262214975 0.16150246268487794543 0.26760709985058095395 0.30518582760820639477;0.25372044429614487582 -0.26380438628980340532 0.48453286705182080363 2.2561054653935226355 1.791316067515869026 0.82822417747367627072 1.2751686516355702494 -0.63146757209719284187;-0.69875851436889369062 0.48136791108025456243 0.53945566271299860706 -0.95455450248138873359 -1.0197820841138227621 0.60118188228426994169 1.5104757974266513898 1.2155751586987433299;0.015679044452415698274 0.096067633565551702191 1.2066001731289224264 2.7579569807600150533 1.3961801142598015968 -0.4894269210499094247 -0.15441178867498661642 1.5972142789242200767;-0.17537813606431515434 0.1723588392923460777 0.51386869072299790062 -0.39973949570852129742 -1.6213818810532465431 -0.60437084005528840525 -1.9131365282166552522 -1.4007294880315672714;-0.35300160292869209311 -0.18838817244262928696 0.76243038854154843165 -0.20797818241771384717 -0.63463270542440775035 0.54567453284315847739 -1.1374217645589994596 -2.3211959346208930199;-0.5009326557567034266 0.16094336451420718226 -0.14913888778059775087 0.022382339751238426728 1.4754912164425564303 -0.45710107393646326468 0.074850716014710855228 -0.96632566041631551279;-0.036467282363341978202 0.30703625744685580923 0.26560644583053394374 0.039395807805177207594 1.011253779688280785 0.061870397488935365005 -0.55815835872901120585 -0.42347841868950047983;-0.45017519762612362433 -0.26625433983188973031 -0.71348929314712739025 -1.8220919605762528892 0.31488424826861588501 -1.1849576682001079497 0.92757249853603551681 1.9000460435178763152;0.26583805781761954412 -0.059114184823372308009 1.3208519931191009533 0.66388920979747689799 -0.41904545585246527617 0.37290738466462242107 1.234789626557586395 0.17858393881093656552;-0.21736342061991065222 0.1201544170539591283 -1.2741225058789602542 -1.1851118770068322927 -0.12297276823963639025 0.070769393644836378621 -0.23152597670982172362 -0.04776156692824068406;0.010611633338244292474 -0.21242541921946456185 0.58491279320771871753 0.39760877590876808618 -0.31979521353385848004 0.69982895313686577232 2.2737789101563841143 1.4879603820796600822;-0.21831908757601101168 -0.1863336857530724644 0.25335723628566242382 -0.37275187648166019372 0.13764830697389440761 0.18463710676993386195 -0.85787349114116018267 -0.99882567162798652216;0.1142067629444451643 0.18673868403621637913 -0.99559722335685563177 -1.2881169372432872411 0.34561768717508517534 -1.2830671402633018197 -2.3135327649768115954 -0.24173109782050081207;-0.2307915442623793556 0.026584728371345997533 -0.76805947509447813903 -0.79496896503716274474 0.79730840133968716721 0.28297804433245626887 0.86666380244569052316 -0.84023327300615890945;0.215717899476569136 -0.057442937988312632591 -1.1995647712539432295 -2.2008120173590177693 -0.66669862518528510975 -0.1199834766807056502 1.3978079842020851853 2.0764452396451060778;-0.40036264294126966412 -0.1568412656881782441 -0.70603535263349848083 0.58575931724869167994 1.3034240654947266691 0.31105073592464227428 2.0019409025048098272 0.88250127779313169984;0.28577482992616887181 0.13021998056916625486 -0.76650692264324304936 0.35975101179915935923 0.79884453217205919628 -0.8114762690638327447 -1.2194874678152838321 0.44396349292335002268;0.31628940789597681515 0.3532908988243513293 0.93659188343892174622 0.4370925225946094006 -0.55622458819668174623 -0.16343831371399838992 -0.59818307908837720088 0.34189122541227923158;-0.22207784929427026865 -0.51752966373464204253 0.67843980764926958837 -0.57537993405669429769 -0.28691806296462030179 -0.5098523025603579617 0.71010443850349147521 0.4787052664451380557;-0.623243207483001882 -0.21403278605189843264 -0.99771037380858418331 0.40433668616915996452 1.6455091329730111571 -0.46685051973117847046 -2.5079841544372420969 -1.7790654629282025567;0.28063299821951143143 -0.06947652024112753455 1.0276207908293673032 0.37518830099889588503 -0.31812548280831909331 -0.31429665854331773067 -1.283977329234539333 -0.87647030848136464609;0.43214396134823918061 -0.18479633956050223187 -1.4085686995033941393 -0.6260992690594724408 0.31199317540517496061 -0.96522478929263166858 0.0069309543455532557354 0.51257470985927211515;0.77558258146161962454 -0.5457767271226668937 0.49010984034725957326 -1.240682367637754302 -0.91537151544727335395 -0.26240065301194426262 -1.1532380942702322724 -0.4594119997078796036;0.12033650190031705551 -0.3461767955086031967 -0.92550675327541642723 -0.93186448424210355235 1.0696248453713483872 0.31525014002010309788 -0.47603939824958119154 -0.6121330338115811287;-0.54553074722008265685 0.080573080367479413266 0.50930759127029601174 -1.3238161397028587185 -0.80326785299042835486 1.2589204379520384514 0.30159914913294194605 0.11850624318954719461;-0.35162341314257367086 0.42729885681118534579 -0.15994990516454440921 0.94686104178013774657 0.050559069146599008859 -0.4580978552622279043 -1.1843438006874982271 -0.67351988872376222783];

% Layer 2
b2 = [-0.070141691071567688343;-0.45871438104390460655;0.80832639543943685112];
LW2_1 = [-0.79046040936139094768 -0.74586855454638112395 0.44635675097923005472 -0.47935065162967865904 -0.16849573712636595202 -1.3269900605543230032 0.27791823677614641008 -0.68775219370599516289 -0.65846454172735791044 -0.027693502167363000244 0.056507397687206528669 -0.056539625195200768348 -0.057118263682995044916 -1.3849727061800300998 -0.76448125272829692278 -0.16609263618632824633 0.046984344449055200077 -0.056664196174559110231 0.17515302679523075957 0.11681605947262704848 -0.56248912175683729586 0.077158673569469898856 0.59802690601799757264 0.33242945747310170823 0.81511331943448739334 -0.99192692255467496132 -0.68385854889329455997 -0.1498370275409977026 0.51920625063019287815 -0.91199493134332609845;-0.50696028133629733592 -0.68182008434881413717 0.36820612303499977713 -0.1429770614188673461 -0.43226033302761024402 -0.99677740264797698444 0.37543338807483667141 0.02434013788409983281 0.61931619355160061335 -0.027335042528450162469 0.21337253653187202018 -0.38997921801803592246 -1.0702216045478520901 -2.8683321301529534075 -0.37014967046946944951 0.95609426893993720853 -0.38113178429584249063 -0.19813495111770740298 -0.84371299712067104881 1.6934557875755127387 0.81601577125221136377 1.7494196433522091194 -0.47285750807224130599 -1.2807610352617679883 -1.6653443657559361402 0.53139919693123860434 -0.44654934127042394953 -0.0026388227739670595817 -0.82807429968600243519 -0.58736700610036651771;-0.11531972726199452017 -0.55014227265164061809 -0.88275477484873876577 -0.21245925794306258494 2.1451118648583475945 1.1838771929153417695 3.963307018319741637 -2.5131858257865156148 -1.0290978759906459494 -0.80745483229180381457 -1.9121206494860158998 0.4852112057072953677 1.5644742018816426565 0.74373265430472312865 -4.2004608635707789688 1.4884217032423181504 -0.80172082036163005991 -1.1526518244636290156 -2.6406305755311367811 0.61833942026742727549 -1.6513213790490666177 0.96802058421213044159 0.47859718761949865407 -1.1903568248584002198 -1.8966486655800833816 0.45277523480543502288 0.46770897310381137624 1.7360206233362049932 0.71731877440432467719 0.70853768622145452127];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
