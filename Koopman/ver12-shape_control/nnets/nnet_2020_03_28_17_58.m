function [Y,Xf,Af] = nnet_2020_03_28_17_58(X,~,~)
%NNET_2020_03_28_17_58 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:58:41.
% 
% [Y] = nnet_2020_03_28_17_58(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.26637874953262;-1.69223650741029;-0.793964098205368;-1;-1];
x1_step1.gain = [0.78909507859529;0.792840350914509;1.5885550834287;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.2955434243622208079;-3.1592220206136039096;-1.9430698558308867607;-1.6669230250406059657;2.1899655695580935166;-1.446664528975309949;1.6432692053277766497;-0.91291615488997512884;1.5401329239958498896;1.4564935255609821052;1.2133313498716147283;-0.0091778516743586027044;-0.88171614647088203398;-0.25225984631690850923;-0.15498710795162293219;0.2834826653577433575;-0.79725380421873326409;-1.5478577523211152212;0.16129924898488709473;-1.2487291589845352924;1.5593292981048103574;1.3763217548864450368;-0.43243843711100304894;-1.9731428878584480469;-2.4037661268533088155;-2.7267937764214766894;2.3816555320565409026;2.1064217900062778277;-2.6135688634927136675;3.1245096927244215834];
IW1_1 = [2.118589524117940659 -0.16882697486849290724 0.25173151749423461343 2.0494866957384623163 -1.5697236770158260466;0.47388298444436488532 2.3681327287670459469 0.15896297530129557818 -4.5623829170068805894 1.1045756631190617458;1.5743712811509766869 -0.59391034237806172857 2.2702374744609117307 -2.1015524834777639107 -1.523078254196006176;1.1314070636005484349 1.3338344525662955142 0.79961270174999421467 -3.957760717395555794 0.35756040139626299457;0.13182594259415422733 -0.61428080627296377525 1.8478641126711743414 1.2828574789021320868 1.2298441695644621863;0.43860079313367561493 -1.5472946550630148899 0.90451099338609475264 3.9785160229515712516 1.5710685216751238968;-1.9225496811841329414 -1.1507793695944732448 1.5427632507082600366 -1.4985036278381926866 -1.3872614618543117615;0.0053021838144274146404 2.424798303947596434 0.41200427898766389667 0.23987486537834987188 0.82547504432104090721;-0.23059849466904844273 -2.3425228209566379967 0.43557541905046853747 2.5220073073553548326 -1.0584281630077723158;-0.49386093327010521792 -0.67173939373825319876 0.60261699424158787775 2.4552356890613862284 -1.8116312665842637664;-0.51059648335468010849 0.88072432147260659718 1.6923157371021779749 3.4806955825859100528 -1.1723269788935268831;-0.36883270653231181591 -2.7173606548139521699 0.5896262905802218679 -0.97388512808670979481 3.576939974282405732;0.4588893110828800026 0.4274989938515206811 -1.6611522043941646665 -2.725685452677656162 -2.1748679054509891806;-1.3616802567481531838 0.59419120809383996207 2.4655429657860827852 1.5976895366488661487 -1.9414747466755648553;-0.58445512671057908705 0.51124520008501994628 -0.41925412098855430187 -2.0338036121072406992 -2.1043684570107714649;-1.7715754693926510921 -0.38092005833912051527 2.3213862992781386652 0.31127793345278925718 -1.0771402627567967514;-1.6013246724995588988 0.39292149373939189161 1.0532359522739158653 2.5119159566758573199 2.4515431639396054742;-1.7442765054276978542 0.80811485896861512401 -5.8260765885186280855 1.6982397005778366861 3.583376922643455309;0.54841706559603253801 1.6547825448326383135 -2.0307313877346468978 1.7651869078718869233 1.177373201458897789;-1.3188955445038077485 0.40142411401687844164 1.1565803988402270086 -2.1541372407803107691 -0.42152335031796434039;0.35303410115598105046 2.2487226535078863598 -3.0736648632868504016 1.2679004895539676134 -1.0622097597003687941;1.1182106404149889656 -0.036357331640082563018 -1.499795818988784557 -1.8857154401537130628 -0.882100417283304572;-0.047064231964209821135 2.9829825016682836036 0.94006633512663506647 -0.31094192549014704197 -0.58430411320541975062;-0.25341450851892144414 -0.79360047135965872123 -1.0501615946997553408 -1.1882252503946122424 -1.1408292343281016823;0.31274732215136619162 -2.7458948461269216956 2.268644727164344399 -0.14798537282309126573 0.49708533280303374147;-1.4321524658595277124 -0.70779982609652714043 -2.3235090370765449919 1.7943679277468174149 0.24348076752393518762;2.0353596503502551229 2.2484737970780788174 -0.873590951457889342 0.31065020944353349819 0.08956466938059219618;1.8561397363695482099 0.74095864861311999672 0.19790096437807436214 -1.9416478078878216529 -0.033747489622370265006;-0.36376579982889384324 2.184093882565163014 -2.1413191693010271699 -1.0198766563757866166 -0.21361383984278639603;-0.21271762306464037096 0.13893388978398529821 -0.27810772855354953803 0.82030526701698802672 2.8850922715301332566];

% Layer 2
b2 = 0.3016513037440915479;
LW2_1 = [-0.36132677979081379016 1.0889185339913121098 0.30932249595571414957 -0.83880236496046467476 -0.55386578655708340602 1.5697958987686493337 0.34588060920086111105 1.7627423999599425297 -2.4180447219012313198 1.7351419214688934556 -0.81461355540631064098 -0.45946092830143164809 -0.46584854419012400317 0.42252900159506462385 1.4442938909955076454 0.51917385617423694733 0.68469605041011283308 -0.19915387110912288748 0.54863551500599261335 -1.0918115744910279474 -0.53446555094887182591 1.227152547035013086 -1.6124861016947551473 0.95306297445708754168 0.59933599866652331745 0.72904624864149492058 0.62070998718918202197 0.088417468951499253449 -1.0800287711426073134 0.92791693743086678392];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
