function [Y,Xf,Af] = nnet_2020_05_28_17_15(X,~,~)
%NNET_2020_05_28_17_15 neural network simulation function.
%
% Auto-generated by MATLAB, 28-May-2020 17:15:41.
% 
% [Y] = nnet_2020_05_28_17_15(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.257929022183291;-0.74911347898846;-1];
x1_step1.gain = [2.00278654186791;1.89122713229403;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4598305820604826621;4.0812703844947906262;3.4101090062620458276;-3.2823262614117445501;-2.8200505289842849876;2.4498113921700594986;2.5074541698554928537;-2.3555096098183851971;-1.9933219652458096238;1.5962087647000562374;1.371791165507410204;1.4762634446220426199;-0.66211513653960263337;-0.37532633659705905149;0.58280255437064965029;-0.32346095362699561759;-0.20468666818924100004;-0.87661312345538511259;1.0121036757521895133;-1.2517156374239970518;-1.3276884729233160432;-1.7820610062722512801;2.4660586662417895987;3.0362365965460305084;-2.9268344089715330192;-2.8980565881754709601;3.6510244157981892599;-3.408120846181909247;-4.1214475410984947601;-4.3932385708410901515];
IW1_1 = [-3.3434115736882441539 -1.0258869228533762374 -2.363539984818991968;-2.3367927254421587691 3.6317521365486435947 -0.41436465612528283753;-1.8511124784207173555 -3.8298752249822949345 1.8655155700566230514;1.8002263533841349474 -2.1201243517817793816 -3.1990646397197801676;2.3057275386026687691 3.9974799428096225995 0.40879028065755168564;-3.0395852186960214958 -0.79710215092918701441 -3.3383320931596727199;-3.7174941806139245593 1.8103146905884712758 -1.0295748440385310563;3.2259001362824335502 -2.816700748393912157 0.80321609719332776045;0.044404933304448918063 -2.0715111736460740666 3.6743404403614983167;-2.5664096230441533208 0.45951816259931987929 -3.3406777018214324215;-1.8271577314263109937 -2.2130385718099572223 -3.0089551118699140453;-1.8126599310345434812 3.6004949188717576547 -1.1697700772568726535;0.64639305926589540885 1.4983523400212788168 -3.6145677183546283118;1.2480503461234215834 -3.9971861242194264285 0.90862356074541594797;-3.1503002438941707375 -2.3840786826766229289 1.3851760864097988346;-3.0590476161357491591 -2.7185657086096468582 0.33826803264459814891;-0.28358677317757224889 2.0241713508411467437 -3.8427595088556634195;-2.7035642256017449192 1.7920203523280890945 -2.8248051168362446894;2.6559069511817785525 2.4308217110345777812 1.2038955508312509934;-1.0259747214251033753 -3.4061300107043659402 -1.757472005821813843;-1.283648018365998178 -0.72705581100855809495 3.8776526215265767483;-2.1271892053685901303 2.2576432898619720469 3.0718178289395012825;2.8441802726586704608 -2.1258327844215010316 2.080003542160966834;2.5119357549569718557 1.4449581679597482964 -3.1304216199980756663;-3.3220379315809842602 -2.0860912367301036596 2.1922381308209133444;-2.2396249483045327366 2.6435367259766846537 -2.3344313129600822165;2.3019010900284335719 -1.6196751965180908872 2.8199927792268821847;-2.4487452885118408119 3.0634141551333144982 -2.6304875053733374202;-1.9940393971705134835 -3.3380214254790425699 1.872275658407039689;-1.30574384954789946 1.7546368547174000518 -3.6215759031799228396];

% Layer 2
b2 = -0.10757370468731357327;
LW2_1 = [-0.081116231022142826212 -0.24446926613019553942 -0.75178297745876032643 -0.032827171712694225292 -0.19100680290545146711 0.082529953183582263621 -0.0053400253238843706921 0.093931554532735633822 0.035420323541197229478 -0.12784212462715854874 -0.042317779050904974492 0.084802203337307716091 -0.29603533770048467977 -0.037455135413873096029 -0.26671917248984627902 -0.010121319953133225272 -0.077248845058742382497 0.020570436192442427548 0.13649944508109029817 -0.068432222288495742069 0.039766325061925872353 0.022441311843916803004 0.12987051950561120939 0.65667122565621471875 -0.46244649679513633034 0.48412903063357409783 -0.1420458135181550674 -0.32410748308731712752 -0.12158987582815150574 -0.06831357670336200838];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
