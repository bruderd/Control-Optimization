function [Y,Xf,Af] = nnet_2019_09_26_19_15(X,~,~)
%NNET_2019_09_26_19_15 neural network simulation function.
%
% Auto-generated by MATLAB, 26-Sep-2019 19:15:35.
% 
% [Y] = nnet_2019_09_26_19_15(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.29314329779129;-1.6676920834097;-1.45913377230428;-1.16795046946147;-0.977312371164374;-0.999470372042821;-0.862876347044868;-0.50129048314039;-1.10941650401633;-0.51762363204476;-0.628296019697334];
x1_step1.gain = [0.836744357951312;0.599546244709657;0.721834212804555;0.822090939723586;1.0671312244397;0.964606800697992;1.13097650271253;2.0889823737114;1.15131967799754;1.77663181991742;1.63143717107252];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.55830016865935416792;-3.912843347845313513;-1.5255928443187696253;-0.79827720460378048806;-0.16517411600362427726;0.38736654458737612705;3.3139990859501726739;-3.618865056673183922;-1.7072042443224222374;1.2185572412978329382];
IW1_1 = [4.6018628324318484601 -14.517879952789053633 -2.2423447000487222169 15.908530552441305872 0.69790259506742902129 -27.094551090767527768 -1.0837895133267816394 -2.8984274977820772001 -13.774101998986614248 -6.1994783711557213124 7.0813020221275397859;5.0438527143562073007 3.1966333626844578575 -2.9485723384844781947 -1.167148090440160324 -0.77839901247203191481 -0.37359341180937372107 -2.4766701001445130537 -7.6499137773721432865 3.3018586980334672099 1.0065337546858101891 5.394633224572475072;2.4919919373390673201 1.3578992264132361267 -2.8329892411890469361 -0.051845988192235584191 6.02048842268031148 -2.137084069467070524 2.9270170661981858018 3.4173921832467160087 3.8806720453414826899 -1.9975087715751058681 9.568625197991620368;1.5840761122205053724 -0.35991945354794752099 0.36379297902168999945 0.02549317571945959246 -0.12313024119996934802 0.61308744802859760359 -0.0056033484247615074 0.97797208543507052614 0.37827686022593859372 -0.40235496875627291269 -0.71456539787252337792;0.99661269221797710305 1.9778001657655555068 0.62498145676904126589 2.5875441843870197189 -0.52376424413269340175 -0.33079777434648821588 1.0354739979039109254 -5.4727855591031620008 1.4717989171463115028 3.4863413818066528727 5.6401310880929411695;-3.8498661358044512504 5.3808504165216461956 -7.2051773103159026945 -5.8754255347790760311 2.0575492761519793561 -8.8830968860005743437 -0.24407493383899592221 -2.1986064423387317035 -7.5850766016196189412 1.6598249004850036403 -0.0793857058675974947;0.0080852341138392264108 -12.162339676419030354 -5.173287027541861427 10.679515993639757454 -0.89640137504949679581 -25.584688753717070853 0.58117934337404952849 -0.85037354432054712561 -16.649129258256579078 -6.5814260448819119631 4.2742823989502145565;-3.0472767097260797797 1.7545225511569721988 2.0475446323015340511 2.1032613428014417245 4.7678600032487050697 2.2798020363939421884 -5.2976178783391514315 -2.0625804296712741959 2.7858867028032814339 -0.083951079481317622544 2.44385883575212004;2.8952511405620411367 -1.1030069014401633343 0.63180955671009442209 1.060617568358632079 -1.7378217437060108352 1.2277848564263107445 -0.23484914891137198545 2.0216421369128552143 0.92620320817998902374 -0.41806084033165313851 -2.5538047866114017559;5.8322009985228522311 15.719569527164507505 -16.398529977702022364 -21.484200103784413471 -1.17028938146194883 -20.839219928289050898 -1.0213798134536933304 -3.3002265568506023996 -6.5278692553393540265 5.1794789892245649554 -4.6426669197805452427];

% Layer 2
b2 = [0.44428030683325053785;0.21227916999894266836;0.23378829269833667492];
LW2_1 = [0.00049014781236432860591 0.028569628677026288888 -0.0309519231287494756 2.0289110529328628907 -0.034964131476152390809 -0.13122882013333633799 0.012947370892088444494 -0.018974957315108981204 -0.45775730666073172204 0.02802808351108384069;-0.25846410454380752686 0.37044208097767317156 0.29703778780344664012 -1.4736133996252702705 -0.70586080834576681031 -0.2281954980153967083 0.29993467404691259715 0.2701716090666236858 0.96584662613177996171 0.13631845934552203059;-0.31000883104946463931 0.047814463580778308882 -0.21161055284216973016 0.66419551368362128585 0.19706173426292158957 -0.3781354196141805124 0.46249217043454660114 0.38937497147006028264 -0.20869001763343728029 0.45211697964170316499];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
