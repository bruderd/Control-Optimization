function [Y,Xf,Af] = nnet_2019_12_08_15_58(X,~,~)
%NNET_2019_12_08_15_58 neural network simulation function.
%
% Auto-generated by MATLAB, 08-Dec-2019 15:58:54.
% 
% [Y] = nnet_2019_12_08_15_58(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.92868953700157;-0.160741286572282;-0.204255968673678;-1;-1];
x1_step1.gain = [1.71613101793845;2.22931813258837;4.26382999606087;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [6.4556218260620523708;-0.42695961901815659978;-4.1787584907276293933;4.6392837058097891045;-1.0354363657883169925;-0.0070143374690231664881;-2.1142762587694847731;0.20368991396718549858;1.9619299551890172495;1.8661372668753395399;-2.9068456624616563211;2.3039282004258834213;2.3504522164016607988;-2.8357655204915741542;2.8192654178390603725;1.8361982675002650467;-2.3987710299645841339;-2.1058081248502551475;2.7167773264993519966;1.4417223575889857035;0.61062514337937767728;1.5799195519572424296;-2.8400514792131517083;-1.6267725677162214737;-0.64363519265960489335;0.013388597068718109673;-0.063711552817959649087;-2.1819480519685034992;2.7648849528487651206;4.3549941986909317393];
IW1_1 = [-0.75785311518463382985 -0.42480953051636127782 1.3293087475601164105 -0.47478253615899296269 -7.3607285324889719647;3.0181104332615249497 -0.9517610097234974198 -0.19701262736220837013 -3.1416649647830676706 -3.1695384915683089133;0.9101730495561928258 -0.045432222783610851091 -3.704505532870618012 -5.8204844233218517857 5.1223225181844940224;-0.38170507164267414302 0.33224915751881695103 3.1154116894058865306 3.7081702113694925416 -5.7433668984340044972;0.23775939718217739549 -1.0671134311647925141 -0.20753589864162605427 -1.5156119572390296391 -1.0651418307861104662;-0.43865647391473794325 -0.87786424212126656919 0.00038491821842703399098 -1.7811417820611410434 -0.6751570733312307615;0.88742617640150200931 0.97096798626692026879 -0.40413217214192942439 -1.4178186511730874741 2.7142721153024584879;1.1597510662878669496 2.2144493483626326302 0.35375205509815588201 -3.0767050414811403236 -2.8742370162437755887;-1.7509134706086479927 -0.40886795814895293688 0.19142363283184588019 -2.9752112085974977695 -0.25208938766322980252;-0.41281509659902887455 0.26362532636880708914 -0.22831562633244514848 0.45893128645943692678 -0.97746968471767947673;5.3149197272066732722 -1.3001947872250685379 1.0500589384897369705 -2.2287659379906870072 -2.9306583527479102003;-0.48766668563339810039 -0.3117729097699444285 0.55265676833236032639 1.7233723624929249141 -4.9823590704114026906;-0.038837836983601929652 0.042514413117642563256 0.36132837805194051306 3.797806693670905176 -3.2661888121594397916;0.13015371886992249673 -0.040827750699712332672 -1.9906088103405918943 -5.1852793231492064763 5.020036691948987162;-0.11667162120051439989 0.061267790309381613134 1.325711137358692282 5.0166461237349286861 -4.4696114478183588403;-1.0182344494744473007 0.1478288786953101952 -0.81499496340852095599 -0.17351086112092406477 -3.2269821002836733825;-1.9484588697964717596 -2.865274698787589891 -2.0332578259766909134 2.3219838528003644562 -0.13773173068859534407;1.2527968339972794798 -0.0053282659358248780912 0.83698363818630305833 0.39749311643936147131 3.2405350962202099652;2.0331426012800664083 2.357708376641622916 -2.3905756887306437442 -1.5804415443497474847 0.25934138663612438247;1.9997581284948844349 0.60320631631079135726 0.50558057221388308378 0.99567602495024942755 -2.0454964564759317014;1.2555357972722203108 1.7705954827539713836 0.37495343731358787842 -0.61280567902030802507 -1.6054906004968516608;2.5221996853212367284 3.3936898024325201639 0.83619221718104175256 -3.3998527459389182859 -0.61608864201907775904;-1.0354916409632775043 -1.1224503626700941261 -0.53199197529072883572 -2.4598111949838394885 1.1669346433016747344;-0.46804501350629107437 0.51842535943750334138 -1.3156392807469277084 -0.77010092339428681818 0.40787740192672089501;-2.1156598898478686799 1.3013428238632867018 -1.1228208491515885292 0.80277327820721633422 -0.055616279189297734842;1.1140591597227280651 2.2053151464639948465 0.35155927981828527518 -2.9940833127153618776 -3.3718850037638130601;-3.9707213681001882755 -0.59002446748243697616 -0.92470178657698831604 1.8805989367313227234 0.66354000097343268649;-1.129709669627428914 -1.0365381012403456218 -1.6732998615871650383 -0.71620774514052187865 0.3665294339329966955;1.6776102544715247866 -0.60626624136944118337 -0.75767048050315777274 -1.803807858495661165 0.53582815899016733585;-0.083960459723912847507 0.40472914670806664494 2.5000292343364636238 1.4723117159680394472 -5.5635847563789093684];

% Layer 2
b2 = 1.1717201452657743932;
LW2_1 = [3.0213371020650505727 0.12212281814632856836 1.9495078243410939312 4.4334569460306081368 1.5692948784708828924 -2.8314334280108668374 2.36545956545819136 1.2335402046648098473 0.80463692243876028254 -5.8025620521139087415 -0.17837761463117873806 0.98983059893853431177 3.149546734863588604 -4.5120516229386007367 -6.1928065335435116268 2.8438006211518755961 -0.26063855200327973316 2.8493027318833443751 0.31736891623195051526 -2.0628060510155834528 0.50775848943583246076 -0.4525122619005163549 -2.1949691817846250785 -1.8932303163101313892 0.63504311726593631882 -1.0325999308959790124 -0.6467452541017780776 1.0572372915878047728 1.3886917677919341507 -3.9473576313623062184];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
