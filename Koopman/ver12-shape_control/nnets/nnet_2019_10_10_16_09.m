function [Y,Xf,Af] = nnet_2019_10_10_16_09(X,~,~)
%NNET_2019_10_10_16_09 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 16:09:25.
% 
% [Y] = nnet_2019_10_10_16_09(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.12520182470669;-0.919903580947738;-0.964677203024396;-0.629975818805019;-1;-1];
x1_step1.gain = [1.02168829524382;1.07363252809921;1.1531025043986;1.59009301111279;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.4177775554587106477;-0.68251624089936968609;-0.90891195885740183602;2.0562421719777028706;-3.9786820736977066559;3.3552658184724126755;0.24853396585870621283;-0.23853940906690188073;-1.4015695946664235016;2.0839718272369429641;1.1848272368417085421;-0.62709500305194776359;-0.89872731277422357454;-0.13558279211830528976;-0.35013491775101257542;-0.81414507539915648149;-1.0014720161962089584;-0.62423419005174052288;-1.0449434649676858644;-0.68278095154601325945;-0.88704676015204320105;-0.034014962226997173811;-3.0125231786421098334;-1.8383147870654770184;3.1441661667423836946;1.0150436845858930024;0.7318366074658486653;-3.4418415931845909306;2.5942134610034162101;1.4771381043962128476];
IW1_1 = [-4.3635643026569672642 -2.1807621459576758127 -1.9909760276401919921 1.6131110105605726002 -1.5533916140775654302 -0.67573838099654304212;2.4164909712934954378 -0.071964303396699430548 0.25145382624739642807 1.4790694769206143011 3.001235749359243421 -1.1402633540974815851;-1.9777732751638525954 -0.86044809991932813542 -1.0443066241343592626 -0.70528014115542059237 -1.1306450733235879902 2.2991661478926279649;3.518899133790549083 3.2412550408515570233 4.2314888011486706532 -0.28141414897443861598 1.5346462843873827087 -3.1413871535169950455;3.2776905769579793848 5.8092073330459088609 2.4195180332307808513 -4.251629988231181656 2.0777892966406983355 3.2993318122987171925;-9.4767196757918785721 -0.64836010282857980958 -6.4137204904362867808 -0.43035789333531060397 5.3224224862278859405 1.5958503647586781415;-0.84895858216383890404 0.78799621077111248191 0.32705318290551210758 -0.22527039664035430899 0.099016457933167600913 -0.61510461314559761181;-3.3509643206540196125 -0.018059440919768597611 -4.0730194249276525653 3.8906603601651426061 -5.5867638312569791736 0.13064959794796981996;5.1386968011281899393 1.3124167990559048036 5.1082857374625412206 -1.938636271950475054 -1.3207008496674139675 4.1062803792910420597;2.4876689813265842055 0.39802997772248016606 -2.9543125872690900735 2.9617464933257240389 5.9198757086090925128 0.82612788755094235249;-0.082645682683552684766 2.3699989976725697183 6.7058249203629216595 -1.3797840506575731467 1.1928152350345204713 5.8729455074072847154;-0.90064043946611660463 -1.9094232340772157031 0.20694965665151635048 1.0508305465558813729 3.5408540600253428643 -0.69799894900968317835;0.29109774027040319355 1.7218328176209318769 1.3206422052442885473 -0.63936365353142832202 0.31857462450068607662 0.40826187743769665195;-15.317803949449320555 -2.043220906482700272 -6.5879711560722462593 -1.9113494979880152336 -7.6585665426127045308 7.0144701803206199742;0.5461041852875915259 0.50457322278485750022 1.8419364398863100618 -0.28472635339432944557 -1.6656084374667516901 0.82436375119493077168;4.1189093391482254347 1.5213600081406952746 -1.0266056700442600658 -3.1416240342215457915 -3.2201350440174101308 5.8135757932870451015;-1.723213499970188689 2.7467073321402435404 10.268167988445286554 5.3804263595553756261 0.21761638206866631973 -0.88835179417041265637;0.2499626364356810071 0.2760040372182528956 2.2738111408378074429 -0.81882939779742502928 1.5577508244813826899 0.30211947135843331136;8.0601963124583981823 -2.9313870424722670016 4.1064888676065409712 13.407737331632665345 -6.4328177910763013614 -7.662538404930818281;0.11171955324207789861 6.5446085602239056911 1.0265350294823019084 -2.6131699560037167096 3.2536997021770850402 -1.5417192244180299987;-0.80815391889392651503 -1.7922972133622705471 1.4639146462743533039 1.1006946822857328616 3.3983611980598156244 -0.53481778924498590833;1.936762382878691735 3.2852510482515109302 2.1295758423009698568 -3.9167531848893970547 -0.52704014060865889135 3.4961006693282090652;-2.7435073111274088653 0.084941034370734969094 -2.0127726099722558217 -0.69875152201039925082 -2.9630803343469258593 -4.026391879342834379;3.0354907579735357359 0.66561216578535287169 5.8613709342638280475 -2.6989728502234116014 4.613131820793372917 -3.7547287127792925432;2.38649193156461914 -0.86966188867786919925 1.097727621411051846 0.56576903334381190014 2.6903664796744615195 3.6071614313922344408;-1.2576364015823491282 1.2956943240827387687 -1.3920873722494198077 0.3136605865546640004 2.3162301066927204474 -0.37739958513692473119;-0.14786662732059782654 0.12719886391942317183 -1.9884110923328781606 0.55535576797262975468 -1.2824373120803240766 0.024392385786869617142;-1.2747612125605660705 2.4181192005459850591 0.15472490602184121866 0.34860480226886192412 -3.0310779771487061929 -3.6004096016810902547;-4.6946787545228367833 -3.2066198504407270597 -4.3901511812276883262 4.0984582364048538494 -5.3764528552839294662 3.065878133607735645;-0.14712543079498971443 -0.90674258529580420429 -1.8144211986548639537 0.60635836031587153627 -1.3878704693450059082 0.11011360378998065468];

% Layer 2
b2 = [-0.33631671264961393586;0.17907206503825595645;0.67764445731747535717];
LW2_1 = [0.1303126414910537878 -0.78258396740539226677 -1.1105543053521642616 -0.49464650684604716258 0.27576060495366638836 -0.27774821026570678528 0.4279253142692158729 0.16671029872722623044 -0.039829447390280721397 0.19879623397965764942 -0.20901208468211740499 -1.042537083437299783 -0.90675993818010502956 -0.057856265132286428809 -0.012508508617828949239 0.3372122795884998081 -0.0096695725647397458291 3.7781113229528107134 -0.18407214693877144152 -0.32144374842104023182 1.9362979569562022153 -0.040561854431589570991 -2.4892246787520515561 1.0181917697911102572 -6.2112268061809627895 0.01024577676220952277 5.8207062379026464072 -4.3577999694063827008 0.77898195597344621621 -2.4239863058115576067;-0.82912039252957869806 0.59253748832582331385 0.80716267373698757925 0.24058814735835765131 -0.48679940084331868588 0.060270795393459135336 1.8305540738415972957 -0.27575101181103772729 0.223003565605252696 0.13534482622615262581 -0.075994812927451194096 -1.8088826752671092191 1.8515075477285616312 0.11614537665559400426 -1.9292887409498178375 -0.27827961101427539647 0.047637272840565264564 0.56238076891849453354 -0.09384299442234959876 -0.31582303699762109828 1.5979371799991246572 0.062284699946472905918 -1.5426762916971681339 0.18038270528965646977 -3.2345658142032718274 -1.6487158009956073279 1.0593944356606364021 -2.0469364814679331666 0.63002509259295758071 1.0684542786667741154;-0.57559612065654552904 0.7556390435389953586 0.53014029859584854698 0.0025675854356352481936 -0.40110952305657937567 0.11271796538019390743 1.5606311600517523974 -0.30864307374610866486 0.39539297635044884371 -0.10228428466522897222 0.24495090386054507725 -1.7492286544148862859 3.4841820905248375162 0.24922036349752277329 -2.7385301384161415683 -0.14050354993679187166 -0.13649780065141320362 -0.69990484078299375348 -0.17677015357262873541 -0.4093582437048459699 0.98618097109965374703 -0.51991495143422994385 0.87049633923544422753 -0.021757020466967345179 2.1658104314845858518 -1.8758074682170218228 -1.0354755121730492284 1.1361308003691166224 0.24174471310510262101 2.4224336996243054365];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
