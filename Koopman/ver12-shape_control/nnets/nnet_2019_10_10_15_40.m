function [Y,Xf,Af] = nnet_2019_10_10_15_40(X,~,~)
%NNET_2019_10_10_15_40 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 15:40:38.
% 
% [Y] = nnet_2019_10_10_15_40(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.870529476424574;-0.653758942446831;-0.723837594880846;-1.55242771955881;-0.968176111583366;-1;-1;-1;-1;-1;-1];
x1_step1.gain = [0.721388909521628;0.873096891808657;0.983150215685652;0.934521236937008;1.39227634850687;1;1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.6379245861829614395;-1.6679294866537419662;-0.42300602404976578308;-0.020526871814050870468;-0.13306727439725096751;-0.060613078814013093831;0.01546431467718071065;0.010370575838002007996;-0.23186835944142189514;-1.2843682716120432552];
IW1_1 = [-0.58404328062727706161 -0.95425818708120957456 0.60987290791262083189 0.37638043360839940066 -0.69821833434342073232 1.1150275567511784836 1.9367852637502780411 0.086918654823748359162 1.3250851516993460422 0.083021133933882981792 -0.32581747403677813191;2.8309787994013992929 0.80883368696146451526 1.3064087776485096004 -1.2171759370333945505 -1.3727548385746939363 -0.85152943433130601214 0.45475476929424485384 2.3876119742073158569 1.4645247926507185543 1.0013323500038078251 0.37961341103573348343;-0.5251206844171432131 -0.33251821028129951996 -0.47760177274336290676 0.43040523654556694932 0.54599955264381871967 0.09699602772177293164 -0.57107540339784401695 0.0090522060585307186076 -0.86527199210247029981 -0.64169895845255719991 -0.0865174828261406903;-0.016113821344145972531 -0.016991562610984480008 -0.025971420762789070025 -0.0060290338627724138904 0.017528256441157696183 -0.044633793427036889956 0.010429143103128955122 0.36899562760055648614 -0.018576052980478055532 0.001915324098326613711 0.19647852377011451597;-0.17486470474384505081 -0.036863882161207416066 -0.18717128365533861056 0.16802538682358825195 0.25307139272271222952 0.26603443461235748435 -0.60312934889906744118 0.0029554500185893120383 -1.0647089761321364421 -0.56345377798287343829 -0.11639939404377275256;-0.08593923933768971013 0.086434775878734007581 -0.17479754993408591623 0.12046288052213441344 0.26611973945326411473 0.50893985809060671155 -0.58855175165682804828 0.013167260193506601443 -1.4403105261276873961 -0.42177236070871038098 -0.1234470285998025274;0.024206627050761989756 0.057704221827989753135 0.026202327581295436348 0.024082974371786896456 -0.010283092470676082064 0.12782762827625979152 -0.37184465712357372968 -0.0060707158774084332004 -0.029678534760605418397 -0.2151449765751801968 -0.015439122546099472502;0.020337810617251744078 -0.2577734366121082199 -0.011407849285249830121 -0.29308333280963655421 -0.013695571083240074689 1.1426418196369538816 0.069215511409256427755 -0.033499711970539296224 0.80333301137574963935 -0.038776151877131903589 0.013991893980175217072;0.039572297717169031828 -0.74065239995050879962 -0.016268423235939397098 -0.18277498983114909281 0.014145443844888694329 -2.1128757627719156886 -1.8997114070763589933 -0.20238731272225210511 0.070573169494335688534 0.082356850482994639617 0.15305386427000869376;0.63028184964768663168 -0.37291146163728638996 0.52861733783649800245 -0.32824304516984276203 -0.41368302842900972482 0.82804955768236121472 1.2660447286419600488 0.057531430281605629162 1.0324894227057033191 -0.071729727969178369573 -0.22827653034703354606];

% Layer 2
b2 = [-0.016496638585057496473;0.030421605741094804448;0.089034480348906736014];
LW2_1 = [0.17488939201963119019 -0.091163559270303895499 0.89374710885671093674 -0.03629562057799139152 -3.0032224400224922789 1.5263103367697148371 2.1702076311953901744 0.54678133010035412376 -0.23272409924838469153 0.27308008656026855343;0.089015509193270697663 -0.002389899445473977601 0.089993410805512041861 -0.10937465945343304019 -0.84304284778959215352 0.67843296996572088897 -2.0505130076934272587 -0.12745771681669507136 -0.20214110878419355721 0.11819202714341917049;0.077939824666884469084 0.054374032436917615896 0.047145575704982206622 2.7301951132787678489 -0.35488313423035366956 0.21967115428382316678 0.50447591254132007066 -0.063161434074022790308 -0.042794905696216543889 0.12027437372197732901];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
