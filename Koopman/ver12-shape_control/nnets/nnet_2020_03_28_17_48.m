function [Y,Xf,Af] = nnet_2020_03_28_17_48(X,~,~)
%NNET_2020_03_28_17_48 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:48:38.
% 
% [Y] = nnet_2020_03_28_17_48(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.571741268026306;-0.192826101013207;-1;-1];
x1_step1.gain = [2.38974265540084;4.31703721768656;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.8153609920407594025;6.5294325469211784707;-9.7140086161531655762;-3.0473113381555796408;-4.0885213948765235514;3.4980834938157157055;1.7850612901518227993;-4.6501167820753082083;4.1058344256395473693;-2.6689298144152662218;-0.54052743581443196685;1.1987629654405307367;1.1127438943887504319;-0.3507889406983152325;2.3821014202754948741;-0.76316820233287174791;3.6870428231493552751;2.4117839824910580759;-2.5065537725500552924;4.5107432878407252019;5.7836308558340929764;-4.6474057252999250167;-1.1431528727521691469;1.6076102484696952466;-4.8296794410125887254;2.69605953181871838;5.6400258396570341901;-3.9994399312973141214;1.3557837364315044049;5.4736308886968414456];
IW1_1 = [-0.44034329132414729013 -0.64700073442462957551 -1.5267803499393082234 -4.3008690465850918372;-2.9396545110535257095 0.08941997046952010475 -4.065835511161210114 -4.3487266082314732785;1.1100376298954999221 1.106097193249655275 1.125042501756899016 10.12235552238810854;2.4318999414909097112 1.5427358555839452148 0.14179989660088976322 -0.95603552605379915619;-0.060584380562001896586 -0.2707348163033931332 -2.6811535257948553301 4.9266930784088502904;0.35014856890378331933 0.28970504639137534264 -3.6717092688673815815 1.1825127809604736306;-0.81168137682785734821 -0.33900519266519169026 -0.51626825084197214277 -2.1207607116631006505;5.1921955645838391291 0.30434917061359140211 -3.8986222383336590624 2.6916699409743496396;1.4898942505238572664 1.4860949310758317932 3.1856355284237598546 -3.7837888390497687041;-0.87943600940398081178 -0.74145829406852825638 -7.1164783312594162012 4.9291854333242426378;1.408663179249120212 0.54266504984481789275 4.9336726788528322274 -0.51959430083858626492;0.84604063940833873492 -0.37330006920473629561 -4.5316604625929235439 0.0011070201588050179731;-2.3175226879968682248 -0.73498360721398503514 3.0747937853798879004 0.072779085144097352411;1.5431262284394009487 -0.11530889469539576386 -3.3578034210394545056 1.217190441768521536;-0.15684895859267192209 0.094366232777614730831 0.6911428426349476295 -3.8568444446915437496;-0.20518576417212727736 -0.27942006983916684026 -2.3913279830596469999 2.9633271511022409861;0.056784580171124948711 0.50160919421012428732 5.8147170267442200853 -4.2197315498463954242;-0.25276368315415898014 -0.16545088869786919727 5.2305988693881895202 1.6521843039416319598;-3.6683872656133491574 0.4595437382150836525 1.1133167503998069314 0.75866240369817883327;-1.4169618150156291225 -0.83245637673766614828 -1.4209956795990019707 -5.5310952012723886284;1.4885715092803006865 0.24867973744921401114 -2.1861596525870083951 -14.568744055060150799;0.17383365993074170741 0.057885839651415610385 -8.1332493267069434495 -0.66312113894979995976;-0.77592464435923969024 -0.28866954565655233989 -2.3776692680938720237 -0.26453215531159013363;0.83129212771555349715 0.52243821788438715714 2.5789024940436080513 -0.10466474184017400539;0.1867014552057885135 0.37517257006650500673 7.4492130448595306191 -2.9871380556396163186;0.48959236941454897796 -0.012112417348102030162 2.0461174784418512118 1.882285018342309435;0.11733193169909231224 -0.21017373754439960809 -5.316308654706835668 -4.3572259625351152934;-1.9791396359769599655 -0.65534631380409080759 -1.458064169302350388 -0.032606318714057808128;0.20683393933548099852 0.25529068400226961888 -1.6254951443646772358 1.0636996888706307107;0.80014656396809102912 -0.13134892409141724068 -5.2424109794583859667 -4.0142417579660820692];

% Layer 2
b2 = [0.58853141672666975381;-0.65987989379572065118];
LW2_1 = [1.1730727052024270129 0.51132149657704117907 0.84247076291711031626 -0.028684922608421887374 -2.5547204870800257481 -0.92105271444379210877 1.2634435019535155131 -0.20917793522834784992 -0.17497932169381405498 0.7685478436351785847 1.2338480166925036574 3.4119215872973147619 -0.41278301929585814456 -2.6372154205026343554 -3.5478999394709025417 -2.9616105270913948289 -1.3785786338749264068 -2.8575802907540630571 1.5493307251923582601 -0.76391049746132511089 -0.16867048305324267021 -1.6628659510587759929 -2.1006115155077589307 -1.3298706065162830825 0.24846972324224253503 1.5029546521503880374 -2.5952710038731150455 0.061197117655656052548 0.95947366278042334198 2.2259049265179737809;-2.5907196015427804703 -0.76035841938150106056 -1.6015866311281634626 -0.14500709669779004996 4.7223185854905285197 2.4069361286698578439 -2.5844184362848707792 0.33156273766818350479 0.50208423725640149993 -1.4540455161759755498 -2.2811196088755179012 -5.9916906925866539879 0.56146528867011802344 4.267455931276882275 6.5205369030969473343 5.4118133539585739911 2.6301696016929834165 5.1762672743660163022 -2.5389516607259658976 1.6592851572379092584 0.31955949790257581755 3.0951651650455782594 0.78055140373906317652 0.11901449268707491036 -0.59953606334559872426 -2.2530099514550716577 4.5993442878096715276 0.078127319460078961666 -3.714392289990427809 -3.9699758517258811885];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
