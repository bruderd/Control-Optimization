function [Y,Xf,Af] = nnet_2020_05_17_13_16(X,~,~)
%NNET_2020_05_17_13_16 neural network simulation function.
%
% Auto-generated by MATLAB, 17-May-2020 13:16:28.
% 
% [Y] = nnet_2020_05_17_13_16(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.257793127173094;-0.736536733632658;-1];
x1_step1.gain = [1.87757115252136;1.94967667699126;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4504128914043254994;3.8642041933166320078;3.1804502701204073745;-3.1598777096433892098;-2.8599049422438924672;-1.2765367037837653807;1.614066214530276433;2.8184471337319010331;-0.45074458727291344395;0.55725934591750514446;-2.2430394552872918723;-0.5222524663915684151;-0.72632737428574356553;0.83216485143764151733;0.8953955604173098326;-0.13010821087859159029;-1.707355273344227653;1.3614317933111552694;-1.5137634267648452102;-1.4684157752191626667;-0.72464527762854469284;1.2115999003544704049;2.5737433255165167445;-2.7608772800725436269;-2.8320623722730138283;5.2845591213726734736;2.9793261537805277861;3.4235582353744704598;-4.2448429043864157606;-5.2745628015153691592];
IW1_1 = [-1.3150571230867904582 -5.4135645537494347934 6.4570228470534978271;-0.77175670221726910825 3.489022895726680229 -2.5907698662577325344;-2.9239781979068002471 -2.6681427850853078887 0.68263272538370489695;2.7436787610147455041 1.7677109859717707874 2.9818974772201323198;3.1348253358494755361 -0.58655079989651148775 -3.419939308442242698;1.0437554844628167405 0.47395634442173506518 3.7360308561487061141;-1.5873385794459482501 -0.25232160725188296224 -2.3136393957771108632;-1.5320301656275396862 0.20795884971252467932 3.265327467332295619;3.0701083974582332736 3.6872289107449121026 -4.1955222851661426731;-1.8425612917136982016 0.60945493705569542264 -6.2601109208904963666;1.9286250025249052076 4.5666495646265774511 0.80354247545300228062;-3.6240684568662655529 -0.29656551094278255087 -0.23341267132831189368;1.6498334891679080627 -0.46767741003191354299 4.0128671751414897173;-2.3796292669325844749 1.8282544266789666487 2.5096204415310698899;-2.538384576774573187 -3.3283410385308465074 -0.89417973883538992563;-0.50641772453826383593 -2.1543827006923508272 2.7704168494553651492;-0.27058843870473647808 3.8757912548683113307 1.477669891864105578;2.5934696434670878595 -4.4053345353340009893 -4.2115930566649550926;-5.3931260372252571855 -5.3939589544840256252 6.2266163553667279729;-3.2002490329632755639 0.76119335049696434936 0.032934375555119563272;-2.4854494506087800865 -0.46859124634115362218 3.4543845401331734202;2.5111858406493183793 -4.0078550049854202442 -1.4134539965000982864;3.4179379524451252159 -1.0877389650264055465 3.3077617822879581411;0.68627559275446903264 4.3142181317125087858 1.6798843356843635721;-0.13935459565033914142 2.1593648836420249459 -4.4628833205360614045;5.6728997384681694172 -1.6038628098480862683 -0.13352724713714722582;0.56800219490560721614 -3.6622795652382822418 1.4904941800034989807;0.69183200745376938201 -0.16838543766276339864 -4.343186464381302514;-4.9009712238790212879 0.73202004062073389168 0.6738371637540631065;-3.8860424939698750002 0.42644152655906486515 5.1365828958361889889];

% Layer 2
b2 = 0.01459291236538951507;
LW2_1 = [-0.69564359306578127384 -0.85690555917188637736 1.1307298600502464492 0.43408722552999234878 -0.81823745771281763961 2.4802894383737585926 1.3721435492254923094 -1.2610799680767954545 0.54310789555008531782 0.56655188834743741566 -2.4460264919934897598 -0.57702986817276924469 -1.3257783277873751437 -0.23512979386791080239 -2.7381116477677518439 0.73967271326352124206 0.39788942564199986096 -0.11349595703581911998 -0.42254723800441607029 0.94212705746281344421 -0.97942997135027232147 0.066090257100879901131 -0.62113153962906930694 0.71796360709209205986 -1.1263899425711962898 1.2709096767225322999 1.1541814782283656982 -0.76181834952649973847 2.4696212324092523538 -0.93425084631725274775];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
