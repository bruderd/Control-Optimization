function [Y,Xf,Af] = nnet_2020_03_28_17_56(X,~,~)
%NNET_2020_03_28_17_56 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:56:56.
% 
% [Y] = nnet_2020_03_28_17_56(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.255762247695552;-0.272835534864615;-1;-1];
x1_step1.gain = [3.83183605745104;3.71945671471182;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.1203846477672452231;3.1088552336633727968;-2.1513992771673340343;-2.7325675856389914919;2.0296027518716579507;-3.6282149865353510165;2.4745409058629390664;-1.6491867829415749469;-2.4709612983940063557;-1.8482059108328696695;-0.94070512641319570246;-0.57416146865832684565;0.68815107463143365685;0.44980649142979445276;0.63629788663925224146;0.30152201639811848644;-0.39323418375829161109;0.82684585652409103851;1.3524737491992420146;0.68697700531713046246;-1.012485259127224424;-1.4112485712929203618;-1.4455834298418905881;-2.4869327566656309614;-1.776092371376684298;2.6245631356965746228;2.3633045210767718025;2.8249530851933530862;-4.0440719055981420027;-2.8775840033047410671];
IW1_1 = [-1.3622439973094657706 1.9860337228476350191 -0.98300075746342130412 2.2018796421938287011;-0.63489234022479867914 0.69353187959201101354 1.8824856068295665601 1.4826687306724273263;1.3606951379400440416 3.4223496921818368222 -0.87278801211873635602 -0.23743710042760943213;0.99034353771589977988 2.4041060382797354578 2.3308924793305956236 -1.3180274786240508966;-0.2740417647481036556 0.16260461941326220803 3.4925973230839311157 -0.72045205790884803143;1.1205432349484294452 -0.39672823826617942267 2.5139285966844515663 2.723250320429399185;-0.97454671559713934581 -0.54329742689679916268 1.8577573787476757694 1.9486532445185447138;2.3722129898273269788 1.4283943142025381512 -0.026882413715294425222 -1.648912006299878108;2.8982089585826358302 1.0870635919101059308 -2.3887104287406346614 1.7640040530335532321;1.8820504515741578455 -2.7760445626853789136 1.1017188637118300321 -0.19998441863052143774;1.4965882643977135302 1.4351576499625271488 0.12739929680627570807 -2.4735079736405554129;0.27195059915672209483 1.4320416868310787972 -1.2509421043602977353 1.8921627493068398085;-0.61602511162051309945 1.8180620889371419402 1.8846699356937948178 1.4953273004105651633;-4.3844874423092985438 1.9003032201914427102 -1.7707060607932079144 0.086061567944392541873;2.4153758914630509835 2.8789632077048299408 -1.1885424048288206755 0.078493246283602935431;1.2210057956097590814 1.8788581013909908535 -0.94032187752526097402 -1.0855903714558943207;-1.1369926063841191421 -0.83919163749778713512 -2.5767770656383457428 1.8558228365034312723;3.0016255382918450856 3.4936815540078742792 -1.3891928950483343197 0.011459897243628050165;1.1625121155341728851 -1.5883139692456367253 -3.2405036039637380441 -1.5670062759687930498;2.3888516131393240371 -1.2999713877027205822 1.1521538534691118105 0.68845990188520211905;-1.3108746002697133637 3.7330158911179078807 -1.301012283026880656 0.21229711493836178615;-0.80549768251063591507 1.7161150090444863281 3.0785570386873786219 1.4485180154957746357;-1.5569614452492563927 4.6917248578202190856 -1.6799313755857476771 0.25108392349747488126;-1.5460066072152951477 1.2674593461059697752 -1.8001131713341997909 0.33553943744427783269;-0.95993029308311417225 0.084814592647325354191 -0.79766816772222692844 -1.8745729079356554525;3.9455972406896515636 -1.7977065488378158875 -1.114260297853203463 -0.73337629291761519124;1.8633969567622301611 -1.4812424539913944255 -2.1598004315371603923 0.65047437971462562789;0.24149714960804685715 3.1597706512881398311 -1.4032479879330566064 -1.3615576095508414856;-0.025814263094010948818 -2.2753722724643639097 -1.0335791355260743885 2.8198491181803166938;-2.6607907539216832937 0.3952023221562573907 -1.4705157113918940759 -2.260509906418899817];

% Layer 2
b2 = -1.1250250867806244059;
LW2_1 = [-0.025835403396499603823 0.33856875751745818537 -0.04999368474854010147 -0.15749115740477642733 0.27329853531268122335 -0.42533474932714976369 0.22294546660599665056 -0.0015559112912100193059 -0.071078259849894825928 0.16508945852012330002 0.11841330113876212538 0.13130632402648639845 0.098353363959189518684 -0.068208551041099449441 -0.53972887744921338449 0.11059797504070521812 -0.073744988319493429141 0.39972891173154179167 0.58208252788733405581 0.11237002403218121493 -0.28584982086797144918 0.72632305064671465189 0.23160830389136710661 -0.26751837827452684682 0.34474767578897519416 -0.064310514922812825334 -0.15245767560822215403 -0.15607848092423115549 -0.52365519627904089095 -0.093825664372434711136];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
