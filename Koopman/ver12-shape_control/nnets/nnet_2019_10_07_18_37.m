function [Y,Xf,Af] = nnet_2019_10_07_18_37(X,~,~)
%NNET_2019_10_07_18_37 neural network simulation function.
%
% Auto-generated by MATLAB, 07-Oct-2019 18:37:46.
% 
% [Y] = nnet_2019_10_07_18_37(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 14xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 6xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.344326159333196;-0.517553555947992;-0.557473644049545;-0.466928982587789;-0.486317707926407;-0.280318541936946;-0.364949747308814;-0.382425280216545;-0.266832023591362;-0.309755075534744;-0.219079507217016;-0.292682497464485;-0.289870170777274;-0.292560137902923];
x1_step1.gain = [1.87487355411819;2.47257721600772;1.60763047016583;2.20398729866931;1.73796796339077;3.08522207773902;2.22392139697451;3.02960670209758;3.7298659024471;3.039463850763;4.05162051885896;4.06196447203158;3.61274111439959;4.04444745591946];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.9941430513422981896;-0.99019060498061806097;-2.2960889561189445907;-0.16392603400957247994;-0.71208051506433822642;-2.8455912998870336317;-0.57724128316494294211;2.5319147837821716074;-0.67768589384611788162;0.91934137885991418226];
IW1_1 = [0.8293009765999037608 -1.1795505176795688662 7.9825839883130740304 -1.9632820886440993657 3.3753523816808934654 1.1998425373284891116 0.20794750918471061052 0.84113886520426262017 0.23696858292459455075 -0.86064234274455231333 -2.8316308574029522838 0.24112314350904417992 -0.62693014414889591812 -2.2578011672407489741;-0.11812150566437938648 0.79484335982715870195 -0.24403016690902781805 0.26221484461429095392 0.23077563134122580646 -0.61803608211704952335 3.6130954206307421828 1.9273787132936390787 -2.5409489048198872219 -1.0423777441277335409 0.7273727933999584172 0.011274718642882017999 -0.11595704466940262578 0.020743225734314734571;-1.3828039769962710004 0.91484364069662549301 5.9668701187249402196 -1.7192485048733259223 2.4330577439276086515 -1.7930337032336414183 -13.933882365552584304 -2.6277245860835947155 0.75129025959850925798 5.0881285630505423967 -4.7403003874773181892 -2.3391186992577610582 -2.5876868353850621673 -0.10790668106281260663;0.75212390308749588197 0.72064483238645948848 -0.082163930374328827955 -0.53951320545710390597 0.57151906077595360234 -0.52887259093192418025 -2.8842012295234584762 -1.1211104761440124911 0.44704134204230133731 0.47335832910903224979 0.45240072219318616664 -0.53634977820237184076 0.36923688840318669158 0.29478873885772821639;1.6530599900491318444 1.2917232830917622088 -0.98852757248456823991 -0.028107380964343474383 -1.4650086933864208127 -0.41859217354807431999 -0.013239612706115188451 0.080163892162714842082 0.18377931892645232859 -0.012097474176463819673 0.28178067506069154335 -0.022451017983034379788 0.25745211323581751461 0.17863808869539396507;-0.93633644332011778388 1.1081684328779977111 -7.5429167020718228542 1.7163513556913299052 -3.1922258073900282582 -1.2170589577136532444 -1.2851157526685086374 -1.2518719121771262337 -0.48083165455019322154 1.2544631476895689026 2.4394438661741593144 -0.29378373008262020916 0.6023339301150090197 2.3444968033905659865;-0.58125385662347150983 -0.97776474002412028241 0.10515695648076284208 1.1029074305642867504 -2.0865876240003728981 -0.40177918754526320555 3.4251218853139087095 2.0823622230178560066 0.52545779352064558854 -0.86650660416108493678 0.7838700468380243036 0.91817355986271731449 -0.018441875235378733799 -0.045100505498336426746;2.201688887162092545 -2.4151770365987248468 -2.9420744104873546299 0.79173326938516730422 -0.58240946231140156009 -0.47459505837305526743 2.2654993191965231425 -0.16625656761113630222 -1.6004714000973416788 -0.31233837473737091628 0.54713023162499074825 0.4631666518360057494 -0.29593889771460318849 0.14816135706106114966;-0.77922577757858635383 0.85824061565471898572 0.34653312357847165792 0.21800992716117909009 -0.61127183150666730693 0.49334356568602893978 0.99051185032172517353 0.43522747223716795606 0.088722078329462134016 -0.28269113996611244799 -0.22614978859119178045 0.17803017161487114106 -0.076668900773216891453 -0.081184386020712179244;-2.1399563804563976888 -1.7213298143513846572 1.3468680216781854231 -0.069930370128619218084 1.7189413201159475797 0.52014241431570729102 -0.03910494785043795718 0.001637749044402620445 0.21384674199074879541 0.077556355926438808046 -0.51793562816468441401 0.064903212272188079424 -0.24030304715223499423 -0.346944865771130595];

% Layer 2
b2 = [0.39670391053351666821;-0.24273830638450863417;0.17393285618077011789;0.3584519957048389327;-0.39971495244632765376;0.35448934700963347089];
LW2_1 = [-0.63018769353105519304 0.056788162035884610923 0.085303198829071766318 -0.74459495268986131133 2.3730616007862361805 -0.84619687418870059847 -0.51249522993738594323 -0.15937450850562448479 -0.31671369764933071655 0.94304400357439566172;1.0876145126945810926 0.03030701003699866336 -0.13156673124753853754 0.9570642432131324373 -1.8537414193442325328 1.3856150920850949237 0.64358417805627865516 0.23989407248954827678 0.42534284875967814932 -0.7491348899545146045;-1.1138045954279263139 -0.056186752752574939396 0.14389423631485603883 -0.98492922793084458633 1.636978883699347076 -1.3904106219538578948 -0.6490317551192074097 -0.22614922191795069906 -0.41488837030122388549 0.68218095238530696012;-1.1000371931734611586 -0.484989705316514641 -0.22285544467303719518 -0.32582989077941276745 -2.3055765657310853811 -0.97882338298416060596 -0.15983111125632287752 -0.59497780199805683221 0.72380867908906731945 -2.2410278107258014835;1.891675618235706624 0.72025925581963501365 0.33762672512983060713 0.83924620972969488086 3.4362228498835505341 1.7441673922063489766 0.2381646738366293703 0.84185740831880984114 -0.026091846555752598591 3.5270912065738180274;-1.9419211983681439193 -0.71797051954214485825 -0.33981178414742263527 -0.87889798383567430129 -3.3893646168910476213 -1.8088103271858906318 -0.23352423112505990566 -0.80535029832362081681 -0.13009904474960740095 -3.506033819337600832];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1;1;1;1];
y1_step1.xoffset = [-1;-1;-1;-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
