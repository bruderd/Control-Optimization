function [Y,Xf,Af] = nnet_2020_03_28_17_44(X,~,~)
%NNET_2020_03_28_17_44 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 17:44:55.
% 
% [Y] = nnet_2020_03_28_17_44(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.821122096501074;-0.53982592601971;-0.440641806412878;-0.438573249607426;-1;-1];
x1_step1.gain = [1.05413186237842;0.797015596385495;1.91976319592972;1.87404014427378;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.2234352533902441706;2.654983293628331964;4.4281392690741494533;-2.2980466173962263987;-3.9184333395886117302;10.013705607076616388;-0.10336618143011477855;-1.4717328253151247264;-0.41553821317124450818;1.1616889992124632691;4.7667587355429716922;-0.20144169039872195093;-3.6758997247402662722;1.3290793961121567524;0.11473509490270615563;-1.5575298822799870102;0.77549789177597150402;1.7383915210133598084;-2.3659838500450449672;-2.0303313426346787374;-2.0793213269677721655;-2.733594111484975997;1.2806828906689735614;7.5411119082287028093;-0.59516410198331004544;-1.6398964766183752317;-2.7175964659747964269;2.4329285304400247725;-1.6358673781286636739;-3.4099278692619328091];
IW1_1 = [-0.043736403255996883499 1.4648529647483274907 0.23018643970848989833 -0.66753254557953300985 -4.4433428624976984977 -2.8033739500778116494;0.68916527840467078914 0.72024949095395873755 0.64945681498740459592 -0.60813017461726559532 -2.6386842679923483423 -0.62960255698693845527;-2.1389412463029322531 -0.20786748603002036528 -0.86464778685307652761 1.4158436704169823361 -6.4063935531730962225 -2.2897579375214469621;0.21041052266470799958 2.1476444515083596976 -0.91773568639288738424 0.99647638625108236887 -4.5339896719659851243 3.675709589107339248;1.043475676760116766 -2.4704006361584478491 -0.26734102498418377269 0.25621492434971043783 2.9050298807454018046 -0.57943597006742419975;3.7356609857302349731 1.7668062730763427481 0.0039339258966655851063 -0.61991245677458461927 0.13608874993706526757 -10.40446695126380483;0.45628385244918234775 0.36203135841258626826 1.109532753545817485 -1.6084727941522971584 -0.073927595708265486651 -2.3723226621561050997;2.2496471719071307049 -0.44482508656525698854 -2.2728255185564090191 1.291376151505176928 -1.9372670787857853014 -0.61034738811149447102;0.81877691731027235633 -0.1260625030614394293 0.46734252441783574739 -0.46737631931605760904 0.53026316177704868604 -0.84583767821065847237;-2.295878142323660942 3.1875576987787392902 -0.68275043988220218694 -0.080282638661463179286 1.9264597845992632585 1.3298619055188845017;-1.7312410717634427737 2.3410456266350019305 -0.88601435957856344849 -1.2970759295956777457 -0.53354085205921153445 -3.7427404679188187586;-0.7079679026221984417 0.19604764743763608559 -0.9290861946802643212 -3.5833893865249177857 0.52269743274949354017 -1.6901379781271461678;0.59294405284829621028 0.90948211758213948208 -2.0965025365773639621 -0.0078628758767187584278 -1.6621466838889660256 7.935337251808956438;1.3053400252596392139 0.67673001712558489285 1.072138361750544 -1.1831061158960509694 2.8108036693815132701 -3.420484008331583059;-2.4915867162412705937 -0.33582443607623302384 -1.4714854419574809885 -1.7686690648266656378 -1.9314780321149600528 0.70055164745205200649;1.7274446355639216932 1.8790081420143667223 0.11688202589992037483 2.5278364666471442312 -4.6872122950309531575 3.6108012148772279382;1.0784454211985627925 0.5232248703506207077 0.53385100948953390088 -0.5688281086898698824 3.6216921783976072646 -0.5235510539528237528;0.55506552711432699532 0.82976421714868786594 1.3816961424125282498 -0.080493943406647561201 -1.4241428866832648303 -4.5571170252594992434;-0.85007568216318274423 0.03028507193594832253 -0.45542341213574716319 0.52913897394748821146 -4.159031899412150679 2.585965963700965542;1.4675977003751572436 0.44897229148714246083 0.95681261692392205465 -1.9020783478717013804 4.1660428702566658643 0.70524707901794114751;-2.2336515620704573415 -1.5973029340265161302 -0.23556625807420256136 0.17489567113106052609 0.18794188119228427691 3.159185455926569297;0.32682562092890676819 1.5821980934386286055 1.424100653018632201 0.11119041100069548822 -5.7894432201589314246 0.36615550657259915424;1.7110702562405537552 1.6907675271302013975 2.4756313967042848923 -1.160085860105811717 0.85707245135725040885 0.8469009729931897823;1.5793814635719862771 2.0189470399165339032 -0.99746668716334296878 0.19876406628671569599 3.3434785115176266501 -7.4252422530145638646;-0.057194878810284413562 0.056191211679686180192 0.84459140107219765614 -0.050726155087616055239 -1.780160166178572867 -1.3391822132521764566;-0.34774296555347516957 -1.0166922650953902352 0.38621539659474091177 0.1634028424536229096 -0.32099836748899057692 1.855700321501524197;0.029975655483032118132 -1.1739719337756737705 0.10088712077128034195 -1.6526013516517388258 -2.3505013814623088031 -1.645174056105017879;1.111801307564834973 1.7932213512669477051 0.65933526786105811635 -1.079636772123391486 -0.6447974648405409015 -1.0429969800779008704;-2.555476774900147241 -0.65592326015653268367 -3.4641559129926600136 0.7304301234181413971 -1.3575844591513026582 -0.75432490459744228062;-0.89167068924171344335 -0.45496388282111643875 0.38599839789233586496 -0.28787192392579730171 0.79497834610093764951 0.29843809387655972909];

% Layer 2
b2 = [0.23365848666976479775;-0.04944918512729679777];
LW2_1 = [-1.5894281695076639682 2.70257908287687032 -1.5388856304090763327 -1.5318970656231598593 0.71999639337559240282 0.48282359438918848182 -1.4168918858462817845 0.27021194239015638994 0.46019346158764962151 0.61676852880768451293 0.94541501556056894984 0.50241882119075431667 0.70698330320683100414 2.7580354471202954691 0.60375245961341961198 0.93038917519597719163 2.9757991638643823684 1.1577884206768589426 3.1038052464714511736 -3.709076134906222233 -1.0949113451903595973 -0.5854019405326769121 0.80103672556276972472 0.68550499257673191966 0.25171341072889052981 2.2943920079151518543 0.69321618189520683995 -1.3303642407258460256 0.57244078746976490013 -0.026089394517211379754;2.7538197492371478958 -4.3618853409587741154 2.942272039888042201 2.6267497101029411155 -1.6149850816980753088 -0.82280817722102261857 2.3026776732026021932 -0.40763326346880490725 0.59191104056903220965 -1.1010258131552637106 -1.8487876489731929208 -0.95377612841871206584 -1.4154124269181203033 -5.3178828550908452399 -1.2275595209766150262 -1.4841113009444502069 -5.1430693716085285061 -2.0498336994000259104 -5.5321216666891395164 7.0943955605518960184 2.0933432270941323416 1.3581203325117352509 -1.459886854181901672 -1.277716847687242252 -1.9264708928507592312 -4.640624468223483845 -0.58680818463132922158 1.7130484927304292508 -1.0866651231158315216 -0.043247105071069658067];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1];
y1_step1.xoffset = [-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
