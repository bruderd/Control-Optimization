function [Y,Xf,Af] = nnet_2020_03_06_18_54(X,~,~)
%NNET_2020_03_06_18_54 neural network simulation function.
%
% Auto-generated by MATLAB, 06-Mar-2020 18:54:15.
% 
% [Y] = nnet_2020_03_06_18_54(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.384094210539818;-1;-1];
x1_step1.gain = [2.73356052650064;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.265478440023938056;3.3207062523990926728;5.0167811309487273519;4.135900967130884176;2.7984770324457586277;1.3733352723575440457;-2.9973560133373045034;2.8039894358647252659;1.7155479984100701074;-2.5075272153381304996;0.71273094590425922767;0.54169062472787932183;1.0084473978993047094;1.0342653907152037362;0.94643614390283903326;0.5348619924469896203;-0.20888701590376709816;-1.8067375791819573205;-0.81565318130463326796;-1.752493722950524635;-2.4890536307024873075;-2.2795910844974982545;2.7223622296030853818;3.3825643344877858176;-1.6457682213509561286;5.1387047840072890281;3.5922415950033705911;3.1399534480666213554;-4.4369815993421157785;-3.9137478637292697492];
IW1_1 = [-3.5304218764185191226 2.2342481414590866784 1.319287370202151255;-0.9483894885182261314 2.4316527984429296971 -2.8299680915631344469;-1.1198348864625322641 -4.4572950419597550109 -4.6746960079239538999;-2.5612814096169258526 2.605846890755028511 1.490200455553599479;-1.168377828319748124 3.7370770431075506224 3.3348806604984915225;-0.53660694172972911442 -2.4794331887829197392 2.6884200224816634517;4.3150551783625692437 0.31084779585676852731 2.0623136878018031304;-1.7905865297612830744 -1.2377566776789392655 -3.5391357786533981233;-2.1285700216703058452 -3.4016367208089692831 -2.5625982265859961196;1.3768241114452972607 0.36998427177068721194 4.2089799764566446783;-0.41489589981649982464 -4.5752441122950289198 -3.3922657850916975164;0.76327992022529744798 3.3413980482198679667 -0.14220316538683375196;1.4908744580719563988 1.4119221858286257199 3.2561309331760464048;-1.3406622437871733577 -4.7616054664319253931 0.46607440033295399751;3.7264217745350660671 -1.1133991046683671122 -3.7157107763363455;-0.086255744202653555908 2.4726567158089562959 -1.2376220614636148643;-2.8668619735284415206 -3.9197337779875436325 3.9436733401304056024;-1.1690868119869852748 -6.613497314916971348 1.4610018983700086004;-3.3520528610800095493 2.8597813564860770086 -0.052802275755657407386;-1.8840175215743477644 0.056385566157589758762 -2.0607694415206583294;-0.75317675827057617433 2.3788538625827611028 -2.0577712206356642;-2.8391575723877386928 3.3313371145750445557 0.51779722126760341361;2.0957953127319286502 1.4768032376489212965 -4.0445101191221537462;3.0526644810798200247 -2.5545449980779908472 0.41714198847535854942;0.47011771207761182678 2.7676748663672707806 -0.085059056023649673439;-0.29116166747195731945 4.3242254400339001918 -3.6345582181005511302;2.3420500544562279366 -3.0204387397654341996 2.0128120179944986035;0.14413917510063270488 -3.7296919133882404651 -2.9525335253253723877;-3.0017500337057696491 -2.5164542505766402947 0.95218010032292155209;-3.8151322993873191258 1.604525574745626848 -1.8315523915427633916];

% Layer 2
b2 = [0.26170276160463179504;0.031237521825688466248;-0.085563762186605663018];
LW2_1 = [-0.22045112687485168834 -0.50689101515033019307 0.0068828895778019066887 -0.3577604302945537329 0.18360643912105778508 -0.21295746416411670543 0.16933160696725108041 0.54554631917005846908 -0.17077811108188833966 0.47508708066884303145 0.38693283986221449489 0.67160710350689944992 0.14996270088565147316 0.47782969612256465108 0.013157710734242067732 0.42058088477599991917 0.17610148446387258181 0.56901862179968809574 0.15922179531619010118 -0.37853446408330043704 0.37457970666647266711 -0.45328844240760168827 0.36363916692443276624 -0.094364738825984867399 0.20615807014939782627 0.7680148466730122303 -0.36665026949917089993 -0.41847409932883145034 0.18273674687221097557 -0.43696391984919802365;0.011857154188722990318 0.58605886823818098552 -0.46123374772702097069 0.21402626685987480304 0.05836807165561114924 -0.022016745595673004737 -0.23099891189428858884 -0.25692968103270052982 0.25358918965869381434 -0.36253538359389669843 -0.31686098174423887874 1.4322563165084056802 -0.23286856285137982892 -0.16980907734585931612 -0.095299359498429575543 -0.72003422719504128757 -0.33489846997750150059 0.36298187719520957906 -0.14211069614661533955 0.23857376577907837834 -0.080828105814440193155 0.055826667621221098825 -0.17478306718019398502 0.50535660082278854865 0.089324322991268023664 -1.3797636764421516986 0.61705460248105992171 0.69086472695869416416 -0.35654174989892950531 1.0265457102124169175;0.06909811605683634228 -0.78775756008725306145 0.9228210702992255543 -0.61540744501714450543 -0.47537240393334451172 0.42699447198662432434 -0.20833452262285348522 -0.83819278522644813378 0.7777489967349370259 -0.35715341650166548826 -0.026035257241072320977 -0.81839764361693911887 0.27707947940855737201 -1.6432949054348120477 0.17804136432353445674 -0.9231580937238341722 0.24094033503718936817 -1.3685889878238073347 0.17310812544562370618 -0.0079521886857212842337 -0.82518994933813794024 -0.73932724417472794887 -0.5956566349008886041 -0.65108115626095375283 0.91789002600255553688 1.0909387659303584339 0.15341371746982981894 0.082052912368679745136 -0.052454371801641780371 0.22122967783075347947];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
