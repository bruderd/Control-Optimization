function [Y,Xf,Af] = nnet_2020_03_28_18_00(X,~,~)
%NNET_2020_03_28_18_00 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 18:00:27.
% 
% [Y] = nnet_2020_03_28_18_00(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.384317272684495;-2.49189213678494;-1.111747851861;-1;-1];
x1_step1.gain = [0.595574622822916;0.542711415552053;1.23946819905277;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.9968268664676505075;-2.645253200522751591;2.1362451300132190291;-2.1942038580825165006;2.2062796542951721435;1.7175107334637933487;-1.5978771077895830288;-1.0763117891109699187;-1.5446022954367681912;-1.0789382694351292713;-1.2983574765656915595;0.84199168822158798609;0.69878370652757104686;-0.5532335650132320648;-0.14779172109032515103;0.13137401113533600516;0.22834740821300261726;-0.22375314089191400413;1.5304237735856938141;-0.056606846455528950224;-0.74633222378773955707;1.1038206902995273406;-1.1874545308721695669;1.7132349454610977801;-1.6737785633061614821;-1.5953778065938697406;2.0889029203663116441;2.7590071731859739934;-2.8236799542103749872;3.30809387813878919];
IW1_1 = [-1.3065859683763734189 -0.28278586068922362262 -1.3902022056568592578 1.474513317042044358 0.84999877722404593161;0.81552077924617960569 -2.2099914758090668521 -0.5145640253361669636 -0.44732530853813623484 -0.19260453490320428305;-1.3817326486743919389 -1.043131855834570354 1.4009952670121956775 -1.0054524374525333208 1.3787767246978102076;1.6714177247295851636 -0.28243426162619778008 0.40599191337481504993 1.8534647173091809425 -0.62971871748121099888;-1.1655139908611305 -1.7411678211104228975 -0.45422954000604992553 -1.012438732048058565 -0.7862277812283106071;-1.7302554890851218339 1.4269615575702720989 -0.081762616360169473873 1.1276453960476469085 -1.2222839665096996153;1.2014060451681904951 -0.70068859445432218891 1.3290028282612835753 1.4802491659852798911 -1.2948657490888546562;1.1504472980415771932 2.1043344772049654701 1.5311015373141254603 -0.9017936725904180939 -0.4088256721258867743;0.1238898273859004584 -1.5973040105138340827 -1.4464371659673402881 2.834215399785923406 1.9797663667652944941;0.13756332264984985625 -1.6493271025027980148 -0.42697196405567644506 2.210815313578301744 0.12484421809756039712;0.20241036462624703574 -0.2915337904299002969 0.98712958262803374154 2.3539984369660973407 -1.311683341274512804;-1.3465848945592746588 0.60697561483420203743 1.2571720789415754549 1.0213239071645991984 1.3885537023891802999;-1.0433675452377222381 -0.75933319639764684794 1.6622206460496207203 -1.388150906191874423 0.99731685281460225045;-0.43887700342736229997 -0.16575910913044344941 -1.3553989840508735565 1.4089538334242766027 1.6667138252657753839;0.87534548107395060423 2.7303491595528686098 0.65244335975845624276 0.4681364413763068888 -0.20559327743236727182;1.8087626761079431681 1.3006247377617368155 1.4731611204882626431 1.8167853706863590357 0.0059033263114488671031;1.3950928314091115556 0.23889497312658822259 -1.7339231999722066746 0.44770540400856712049 -1.4170913719548490217;-1.2620268727644585738 -1.4952959365562843441 -0.68412693112472366952 3.3347520967896371324 -0.2867468379843630677;1.2346445160612731229 0.22671307595527101508 0.2531464227082775853 -0.62435432625643827453 -1.3861416326180331371;-1.5720574199975039242 1.2962924978469878567 1.611620178773180978 -0.78065099269112470104 -0.98193874674728542917;-0.70178907730143891275 -1.0580389760187296488 -1.5171371169944138924 -1.800232127887257505 0.60418391380074354391;1.5331733812125971639 -0.18366414989562876436 0.83346377415246497566 -0.46679698772465305634 -1.581142673419262179;-2.5510844604644415945 1.0449233288361736705 -0.19514620267739804516 -1.425068332325604592 -1.6889987152033021367;1.7274990592168817383 -0.94851734076154470277 1.755364998367101137 -1.4680906057389611075 -0.46929343414887758623;-2.7843070821746338517 -0.10340859973634665414 -1.3065036595204277958 1.1728869567802762131 -0.82671805756193761372;-0.98989731976991357509 2.2615284304365013135 -0.92717201343054300722 0.81636754232183750268 0.68922948053826604831;1.7099518101668691461 1.8505578466780099323 -1.0128600058299772613 -0.48619364580292445677 -0.25745037166050305233;0.15780838679561137727 1.1353100902321298094 0.44879013602199152588 -1.7298863545112803664 -1.0831985743247742882;-1.3176118468959416852 2.1053738869371549924 -0.7059868817235134264 -1.5555128676494838214 0.64891919126194474998;1.4690191559283782841 0.27162955644566039171 0.5722773504296921887 -1.3519883325587174205 -0.96431581815708478089];

% Layer 2
b2 = 0.6089731286822155365;
LW2_1 = [-0.67583524248530690848 0.32557234769582776845 0.022060067756447507975 -0.096283441909238390299 -0.39439954585011588462 1.1961512059934953367 0.027781302277701855341 0.70595811063886848569 -1.2504704617219790652 0.60836680606986448527 -0.8678216972684914543 -0.044816119238737385511 0.047765696860377716837 0.95947100113751793149 0.98319230435549742619 -0.73492364218747385785 0.030546936657454573649 0.92615477765277709477 1.2612753943876797713 0.045337297307337182106 1.1279791219818515735 -0.64258330544471742307 -0.74663235157733265357 1.3042211354815596014 1.2492012406981853889 0.4172590877917869423 -0.45280861145980239035 -0.70076994513477541826 -0.74837793328069479593 -0.47660925213008714652];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
