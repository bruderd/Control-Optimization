function [Y,Xf,Af] = nnet_2020_03_28_18_12(X,~,~)
%NNET_2020_03_28_18_12 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 18:12:39.
% 
% [Y] = nnet_2020_03_28_18_12(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.526011159856828;-1;-1];
x1_step1.gain = [1.89882542808282;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.0058651856481723996;-4.811858589805490638;-3.7691289036195798623;-2.8569336036846468829;2.6116590830521393407;-1.4104747628919975799;-1.6088462661970244216;2.3805782514231750291;1.3272994188806841453;1.5668662971566207354;1.7920478950717813049;-0.6878389855121144203;-0.95491926152448092235;1.1011096689690251793;0.51267603310600851074;-0.35021425505130293621;-0.48216838616930424166;0.10325680523727043258;2.2039714838417356901;1.5302798209535353191;1.6065079375628725789;2.5569169878665389817;1.5434453562736851762;3.1216598266168098519;-2.9751166704125733276;-3.6166362249965091635;-1.7366037076489502233;4.2559530881192122465;2.716550208755830198;4.9111283527124296455];
IW1_1 = [-2.4620040404395560074 -2.7051242942080557796 -0.19791109611953555669;3.6627345582038577376 2.5242341133802330688 1.3527892802614926993;3.667024869916708063 -2.2540226196041923679 0.613419875003848869;0.40874997406303087422 3.5907437789353515711 -2.3539308792720832209;-1.8826298780445920311 2.0991140847134941438 -2.5701707156785666974;4.2837223030884077346 -4.6184087065853303145 0.59561778449597946317;3.4853176350187080601 -1.5405773898888708295 0.87649479081300485372;-1.2485233386140559553 -1.4341214241460595868 2.7930067231846074094;-2.0180974279699839258 -4.1623709015609584583 0.12863049508724266889;-2.2425264548869736636 1.840610652505278777 -3.9514284347388142216;-2.2742370752363449959 0.33662980554093752117 3.6996166742073457456;6.6370908195062439106 -5.1743666053930912341 -0.42433162839188032223;1.4224609095069071785 2.41080239308688693 -0.20533698743091041705;-3.3039676139849802894 -1.8572799210298256423 -0.9364175002298961159;-3.8833728074000122277 -0.70196603223801445903 -2.9808682434809097295;4.7471364488424656614 -3.9095492897795884879 -0.78075179072372768996;1.1299819409884375165 -0.16621048825319945097 -3.8772390550518491814;0.93409743229266817277 -3.0017947260628941031 -3.1720959761725637804;4.27219354842712562 -5.8071187721293417994 -0.26612938371703848128;1.0814801658786024063 -3.7595666305424271236 4.7561165820465509668;3.0540487496007706625 -0.10568779820138131387 1.7831442746107333264;2.7026410216650544882 2.2655103141368724273 3.6049464933377080023;4.186956069013505477 -2.3769887493295458469 1.4423379547633929931;3.8346516083511743567 -2.7949849572495448768 -3.7666199997113412046;-3.2736364144583447455 -2.0703800795797353551 -2.4827636994581845364;-3.1080235682249766072 2.4587321227614031827 -1.0628431283517667527;-7.0368250835614318817 4.3487273741977405805 1.0371594547971330069;3.7837846282795917219 1.4700042817222693792 0.28891834679944622399;5.7729883606544705188 -7.1446160715893922699 -0.5834299853012354653;0.93807664942938617791 -2.3348529130410056176 3.3338629624694631204];

% Layer 2
b2 = -0.18299370688533259099;
LW2_1 = [-1.5530383457248060353 -0.68118774495717204776 -0.59976682118270141508 0.54506065016973181958 1.0814627938191383461 -0.70654246676532861393 1.2623191939721554178 0.78078579976968498499 0.029518117839281158427 -0.14831902882227965268 -0.31416459490195070003 0.96290501983312404288 -0.69955555790126200399 0.28621345034107248395 -0.1604556714178586585 -0.6974742442482001481 0.035717450826707110301 -0.10162318772251364984 -3.1195370064712228952 0.26688482080258690843 0.78623049190176985679 0.33637258895530991465 1.2149883856518086667 -0.12593861995362570783 0.68226261626782525038 -0.53212024262277213271 -0.46901210445565377771 -1.5590747920360534806 2.064240982029835525 -0.24907059298076786313];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
