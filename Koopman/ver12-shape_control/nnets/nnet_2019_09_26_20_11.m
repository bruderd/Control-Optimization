function [Y,Xf,Af] = nnet_2019_09_26_20_11(X,~,~)
%NNET_2019_09_26_20_11 neural network simulation function.
%
% Auto-generated by MATLAB, 26-Sep-2019 20:11:59.
% 
% [Y] = nnet_2019_09_26_20_11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.29314364305129;-1.66769218554851;-1.45913407697569;-1.1679506923709;-0.977312613282879;-0.999471085038777;-0.862876886189051;-0.501290667071299;-1.1094155614972;-0.517623477038333;-0.628295225320176];
x1_step1.gain = [0.836744323501247;0.599546323050454;0.72183418419025;0.822090744195554;1.06713090585747;0.964606584826076;1.13097608358273;2.08897912166256;1.1513216829866;1.77663167300562;1.63143860785399];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.72212375659208649648;-10.165869999024179648;3.8308541303349472606;0.35376724980382839858;-2.8046024483911824454;1.4127279748720968922;-0.48946271225096910085;4.7193965459411604257;-0.4556720027754429525;1.7224523432624376795];
IW1_1 = [2.4922140005676509666 -0.49492841291389355618 0.82249673304350667813 -0.20057561056956726975 -0.4675298517888055172 1.3534805603702428911 0.21601630378276892586 1.4265460802457854417 0.68695427448000567772 -0.14769293376443307086 -0.80545870691525722762;-3.1686933859360846277 9.1970898174259829716 3.316395171306638634 8.9568439816549307864 27.87233174196269303 9.2783809553345388821 1.6012236019093979422 4.1153520175167424 30.606856532655246639 -11.107451288949224733 16.70666832078117281;-2.263164847897366716 -1.7035980585276706556 2.9053357089711866479 -2.2471651255458762186 -2.1918798534067720496 -3.2355381604952673236 5.2179964399791884944 3.7173232463843355333 -8.3556556295248913813 1.3131633833824485347 -1.5101887444215917888;-4.6815085337919866149 0.44935296282318260008 1.3600422613678970762 0.17371037595744970305 0.9491188189792463259 -2.0868566264824370826 0.60194146903751399869 -3.6958719217145592495 -1.6684530062235232162 1.6476907758631638146 3.0761819926392948155;-6.5638675021343386717 -24.189695976193533511 -24.44263962852522809 38.045489034336348766 19.397164495345418089 -29.442252583518222053 21.65144530545346413 4.6162512255747998324 9.482598474508254327 -16.105436382737906342 7.6761709505134554377;5.5989173744070690475 15.890489592940626906 -12.994527543067491138 -21.03372200354483823 0.45105684179220251195 -19.748821531374943561 0.08350702588622802014 -4.3233120509271616427 -7.4913336214923544887 4.6601619523735591244 -5.1352509267760648726;0.83493554939092939904 1.3084430529755968209 2.6143614202985987482 3.5185086627352157862 0.79898530086503594116 1.8141589826401853802 -1.1344624050198912624 -5.3834358217888187426 2.7783019545937417405 2.7007711715767555027 4.5577637706563294273;-6.3682948602908240332 5.9311074458740815629 -2.7536964745537222399 2.0579876983974201288 -3.1241993419450304614 1.752824113725067523 -1.1308266392592882799 -6.3699841015700622293 -5.0955851631073016961 7.1632229964734968064 2.4662234101855942114;-4.3855153729316151967 2.4841504786470238741 -7.717923466378981523 -5.0191372184433635795 -0.62029816670252513333 -5.092807140823325085 0.0066677586658425297417 -0.57493451992172572851 -2.6733717057852484089 3.324030595588518544 1.6750819695222107786;-1.8034175724583061395 3.1131388692109727145 6.0242195452847671078 -4.8017856485575807213 -8.4379760356992257186 10.287671778419147373 2.5502829898924739283 -2.9772670421991542788 -2.7489582032270214462 5.4066941903442495843 -8.1677784430373243652];

% Layer 2
b2 = [0.042812181585669760453;0.21366018142972750815;-0.050950270557144093642];
LW2_1 = [0.64615797775002181691 -0.0016192672448670487016 -0.034821536060690466696 -0.14938359256521951957 0.0087832575122231502235 0.026451053693299114711 -0.042696088083356689702 -0.082223240515823678431 -0.16201430916994311038 -0.012302978339211612796;0.82933657311715069937 -0.073776997611118722009 -0.33565240840135518452 0.68730662354885563303 0.010189679419546349148 0.048752195264906310335 -0.94308038641077818198 0.36890497774806130238 -0.2382174692773488256 -0.28999854005006558966;0.014054820314588149788 -0.23878693219017713134 -0.13146061930213168156 0.082334163360233553197 0.18565891949656920801 0.4239557415266527185 0.093970533135133982316 -0.044874156455103716978 -0.32926661880335961197 0.031909857155924661876];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1;1;1];
y1_step1.xoffset = [-1;-1;-1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
