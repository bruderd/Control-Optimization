function [Y,Xf,Af] = nnet_2019_10_10_18_49(X,~,~)
%NNET_2019_10_10_18_49 neural network simulation function.
%
% Auto-generated by MATLAB, 10-Oct-2019 18:49:46.
% 
% [Y] = nnet_2019_10_10_18_49(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.82821575961219;-0.932837415539731;-1.07379524847515;-1.22010171896523;-1;-1;-1;-1];
x1_step1.gain = [0.831456586885427;1.0514722248605;1.0453185643052;1.01561787554676;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.0689722589155929988;2.1018017320839086359;-1.5847237873046433609;-1.998374021057108596;1.7644627872013660674;1.3862050157164753639;-1.3327588845953939334;1.1965984029517295895;-0.93005668844674893592;1.0218365904619344242;-1.1961261780502754348;-0.32693026708803918368;-0.40628765143121409187;0.027156582528993077064;-0.4342278407809991303;-0.26953750706404389081;0.25899116945818267954;0.13114828017332566534;-0.7218214097685249353;-0.14931802996500534442;0.23624490886808086065;1.3747629427200920293;1.5812838718842479047;-1.1425836313476485095;0.98831399417904330917;1.5002966965511923547;-1.6477950345740985938;-1.5596463487709575357;1.9474367637635270345;2.3943088170093527189];
IW1_1 = [-1.0217897392523740407 0.25536864476036830185 0.44298617228596148809 -0.55896975779640944992 1.1699817777924119699 -0.95622898963692626317 -0.49965256889113918159 0.057482597686474345977;-0.50591771651896433326 0.37934035222240009011 1.1260827071183805437 -0.39698337785414450352 0.24174054321302340664 0.21319239887927238231 1.0446610608235862294 1.2464786474292270935;0.65713322668062534859 1.2524095981083136486 -0.71752364608882346353 0.35632125299698508281 -1.0958074418838330555 1.1222457900597035962 -0.1131028731584314273 -0.15930612861528470336;0.42412441345692669659 0.84392065831115681274 0.59137010979320336901 -1.2128771529706339205 0.067112802342904481767 -0.1029523777614450436 0.62707179657917844207 0.98743200350393967035;0.29489677964779709152 -1.1589542136036568021 -0.9441402538986538584 0.31409613393965601924 0.19762643111694766507 1.0009683489242433563 -0.62242258041999010132 0.75459403174579620099;-1.1316529748577304204 0.32643393362711470296 -0.78728215093143316672 0.45537414862610609001 -0.2387552954795690574 -1.1780101530158899603 0.0041879382503768949886 0.95401316628446919399;1.2793945536034141419 0.48783847810621877583 0.11319150109719794406 0.8404001810153001184 1.0466111576237062675 -0.65637760714003789975 0.69715665055892994673 -0.60789434458792601657;-0.097707769796946244978 -0.49072224707962708301 -1.5065698864936312162 0.66774764425691268688 0.068120139098201387684 0.26271463428353769576 -1.1567411478872438035 0.94767934345825233233;1.0074030421197266438 -0.8980201685059479022 -0.61179943478757436992 0.83608179733495924246 -0.70498836646169116271 0.037231870686641174717 -0.40513443422844697128 0.19959773185872609069;-0.92401536772464887282 -0.93775445382116928705 0.33889211898968246706 -0.038796182715509615335 -0.52868824070671893711 1.0595250547302677013 0.22641402259360932092 0.91228549510238110543;0.0067769874164796120239 -1.3140128790918426116 0.74638736852350440198 -0.50593906757475393121 -0.089451164043382894175 0.99449167008845240634 0.88873436417137563481 0.51673224298984077318;-0.023538604074196452232 -0.073944241303461388792 -0.60953748367406790365 1.0189772339869120898 0.60395417264616280129 0.10593551446404157745 -0.97108692198870893986 -1.2399390165717025791;0.65919757384464816585 -0.25490986569958112851 -1.5238156089301793106 -1.1128638807613462358 -0.063455813204129213334 0.61767240438297965621 0.6193870226084818853 0.36739289042097422744;-0.17208580426420319598 -0.68755389987826498466 0.13622742520814648537 -1.5511723551580278713 -0.91853757938370117486 0.69926811681531064746 -0.27974560989714308823 -1.074323351584376196;-0.15038549139523246789 -0.24788640192961880482 1.0302247791089540474 -0.79248977294018330131 -0.51098711004570718242 0.40146375928932775956 1.3630491660490109407 1.1556763223369974636;1.2311307597475138476 -1.100484385138188026 0.60511967115734055511 -0.51941600859936742918 -0.48295396854328498382 -0.38228521772552193081 0.06531197406337843625 -0.27181022128180976072;-0.91570433682327245783 1.6057155932882090088 -0.62076317710305806141 1.0854958646787651322 0.45161718996136840376 -0.71102390446924146339 0.054822225261150103748 0.58314671913609694709;0.61613316864899636549 0.041066500844948720939 -0.56574178580329104182 0.97747522826867394574 -0.63473130276366207525 0.89565793668042892328 -0.28158873845456111606 1.2620112045336711049;-0.91508365879060438175 -0.16913639907427235887 -1.2702056759521154206 0.66313225943878950641 0.52470145836084192137 0.18216190926796563265 1.8384256486071626213 -0.73976116106637912484;-0.26721538126570409943 -0.83002032781595425082 -0.76698932724834256724 -0.5700432236704026101 0.85399198290708455694 -0.69301783062113320177 0.69056681852470813698 -1.0121835087042585499;0.19145510679518457087 -1.3164180588195910637 -0.6333202585745875135 -0.97594797514308506692 1.4291848106777600425 0.78476746357639892704 0.086078102821133400946 -0.07762918330437146297;-0.25678303687013032119 2.2234064385393987884 -0.96572960731202683871 -1.8541467502411546064 -0.073100198915762179541 0.9791640156540667439 0.61036372155185236732 1.3271178610884648563;0.16540694365081215489 -0.8846744703074566063 -1.1643550419437300736 -0.49185629059277674591 -0.017652649558716322631 -1.1960083773389740269 0.59520823187490456974 0.44505470645989930745;-0.15939648588173449539 -0.045487119397634410978 -0.49183786778029076059 1.2492501338405845868 1.430583534909617649 0.70515081107031896135 0.99847553373140740529 -1.120338688147210604;0.13795136006283181818 -0.5918631322678961082 0.65232256798169896417 -1.0166635447561240824 1.2814103947237625025 1.4628043006479385379 -0.016181676251907164271 -0.082008398044532346272;1.2200822523386087859 -0.14137045981353529855 0.51162622900030585438 -1.3626877132057917397 -1.8281725817531697675 -0.51007441651845553121 -1.5868992491642237574 0.37295630570315535524;-0.40248097167564372834 -0.4366490589423770996 -0.42016384702758208247 0.25006955881153070109 0.99713791764583203925 0.07499830929004254465 1.2164373966151500461 -1.2184467302938744027;-0.6718252926798536917 -0.18830908349915209676 -1.3342787599171503921 -1.2230934340621766321 -0.057708777713360540074 1.1295641235712980954 0.54575433403972106738 0.17672322480900365393;-0.011055694419453716143 1.4081397214209823154 -0.77542309763792338639 -1.6374589725369017579 -0.040030267488600973502 1.0862295108706621072 1.4410752076838955205 0.84589595125632210948;0.089755410669306784355 -0.21966112014765076799 0.63181881261709660347 0.70352862637482305175 -1.0651360154619504694 -0.98511050426943780334 -1.8625923975102536279 -0.42005634366495142595];

% Layer 2
b2 = 0.8322476926799187158;
LW2_1 = [0.1353518100791709089 0.51273708307745191615 0.50029257450254260853 0.19825297114071410709 0.18551560445918355291 0.20852704534326468866 0.23116836802643028759 0.29338684040504747763 -0.13473423994388822322 -1.1038181278406722363 0.35664767960353216392 0.72860481648770092367 -0.26830379371780965769 -0.57470031785229325205 0.31674300238231223315 1.0531434320188042264 0.66016214790609717422 0.1848300716175155789 1.056988301692192822 -0.77782649102976297861 -0.46293445485625922542 0.75207347714043970566 0.6754531158153621595 -1.9729672867278882364 0.73828487079474702792 -0.34616916571709821504 1.1701447172857903922 0.36531602166983495605 -0.97276546722449375171 -0.53462462995997928061];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
