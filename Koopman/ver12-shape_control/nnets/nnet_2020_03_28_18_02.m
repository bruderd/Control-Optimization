function [Y,Xf,Af] = nnet_2020_03_28_18_02(X,~,~)
%NNET_2020_03_28_18_02 neural network simulation function.
%
% Auto-generated by MATLAB, 28-Mar-2020 18:02:55.
% 
% [Y] = nnet_2020_03_28_18_02(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1.05581164079534;-1.09106655397469;-1;-1];
x1_step1.gain = [1.31468179463475;0.974371056524029;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.528623398489961982;3.185846131528221381;2.9612671765727904827;2.7761453348657991747;2.2906099635566117279;-2.3241239986188597655;-1.3943912562755829132;-1.8058758969345196643;-1.71617632070856585;2.2887764687676925845;2.1455795904725398771;-0.033299387904485805434;-1.5667709781886285381;0.16820726592781976017;-0.06586928396055523327;0.64376308570902840422;-0.52734448966805380632;1.0992537115111558066;0.10345041238644120396;-0.82763057727019817555;0.7725568079741224059;-1.4410697665373071175;1.4151172855687716989;1.629529377999652251;1.9621620560942039102;2.101588424430612001;2.764538563173666752;2.9393512120427947032;-3.338641867037711819;-3.3959423427703696596];
IW1_1 = [-2.431963475832626731 2.14994754364866969 1.071142849478065262 -0.25529675278827618223;-0.95177224684137184951 1.7772935827859224212 1.5012441711726525195 -2.3783756502848705239;-1.3466119757610885976 2.0298416816715616484 1.9829064288492428414 -0.53264604506569479536;-1.4685153502672569914 1.6206075907076045173 -1.7827179461911768499 -1.0371477564010926908;-1.9642886636459757632 -2.4229303994390396504 0.78169658251958673567 0.691170444982128096;0.665050618414140704 -1.2685558221468269391 2.6070332161217200095 1.4213894624217073837;0.23715939513797007487 -2.5794331234612544179 -1.4140652667243032159 -1.6867690279974247858;2.0648778683436104231 -1.2481165165068579537 2.1638041553339286693 -1.2912611990284796892;1.681582017307430954 -2.3990606306018542604 -2.0656831747292860868 -0.1439477997223602701;-3.0417877014500436239 -2.7653377496397575364 1.4012441426803226019 0.84891977147648645108;-0.63815775759793780253 -0.36379959170000886193 -3.0843781003395700502 -1.8446872021460984925;1.2806496412369015037 -1.0773850975529901675 4.0703395960740431647 -1.8391829767873457691;-0.68051394886506832993 -2.4906772012195763644 -4.3454170342553855022 2.1049936955519128468;-1.0627881462792274636 -0.421921281377987345 1.1890024269153143255 -2.2354460102630264728;-0.6136847671319984876 -2.3848651022140239242 0.36798004801418393583 2.2184065760128945932;1.121134609522062231 -1.9537313971218199793 -2.0108362600915619112 1.1963789603397072536;0.86745213876354010374 -0.98056014858782269972 2.1716359411631733778 1.5115927589879596393;1.6165811085249932599 2.0586114333569036638 3.2126775001240002183 -2.7035317503973801401;2.1277912245348957754 -1.9011398451196488413 -0.1946853543612144799 -1.9091806392049954777;-0.18339466490121911213 0.2498503068732349508 -1.3647975107934542383 -2.8786120442986358192;1.2995294388559968102 -0.27684835966137905094 2.6743146763779974684 1.1534042214413229299;-0.40797061715827026562 -2.3944336913565713587 -1.6897457819867593987 -1.8835971504657531561;0.42074011932466964803 0.68566579709026620471 -3.2847583652473066884 0.052008884057558303626;-0.7727593000015644531 2.9550114203416688596 5.0289632297948907436 -0.75345847325367176772;1.717799921775938099 1.1290784933522748368 -2.1133544834080129071 0.30431488813384816039;-0.2404645568301541636 -1.9413662247236560532 2.4900112189050362943 0.15494537017228410258;1.4167052879033898982 0.740068400529221182 -2.1825808485682607341 1.714225777655710159;1.382575237513921973 -0.94616767925413258755 -2.9354723770026422969 0.22639886776832965354;-2.5331920029792054372 -0.34122654438653932107 -1.3684346099168158695 -0.32777905656105882359;-2.3420967429843142504 -1.1983228908431275972 1.5112879172596631605 -0.11274679586590738434];

% Layer 2
b2 = 0.25581509789838546842;
LW2_1 = [-0.67092310858367665283 0.79646895017107111059 -0.26471862754736336099 -0.37077153376785337846 -0.51470608762903202749 -1.9744193068471715957 0.99645455204224886447 -0.77148281986713940217 -0.5994051063537435553 0.31042299051727817449 -0.74630305552603837249 0.50494698492534451084 -2.4213891570414123322 0.12949787388158057189 0.55466396959868902172 0.17044143186010107804 0.56674260463079484396 -1.513666409599066176 0.89991953751605247014 -0.13968944766027785453 0.22163147380461711844 -0.74604721853604283321 -0.56686552951249014054 -1.2819139834239425824 -0.27263636696215332034 -1.0027938302019248074 -0.23520233231993487033 0.97301278305094440757 0.46632046104415780796 0.35403525903222665683];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
