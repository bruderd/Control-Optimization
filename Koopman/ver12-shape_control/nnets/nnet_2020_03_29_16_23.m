function [Y,Xf,Af] = nnet_2020_03_29_16_23(X,~,~)
%NNET_2020_03_29_16_23 neural network simulation function.
%
% Auto-generated by MATLAB, 29-Mar-2020 16:23:46.
% 
% [Y] = nnet_2020_03_29_16_23(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.23192724972694;-2.17056057715858;-0.656014116912863;-1;-1];
x1_step1.gain = [0.569708836812958;0.787685585988801;1.26153886318808;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.6716863460473820879;-2.6837196168542898356;2.5668587018486639373;3.0337192127300216526;-1.4995374960736989056;2.585473599255608157;2.3236754987831376162;-1.3511711315194365746;-0.88376461586599130982;1.2914022941005736111;1.8937218458050146808;0.11977766584754134804;-0.74936876514153627493;0.27186470359056835733;1.0480621445629996202;-0.76844707280620605516;0.84620391905044844982;0.33784937256375596748;0.57786835304144201775;2.9976117088317404402;1.0797230010042480064;-2.2546655891066471611;1.9296435267004281577;-1.9858668174125140293;-2.0968872333066070901;4.4096427576340904153;-1.6735972582052909274;-3.2127220719422080464;2.718262145806789043;-3.0985039578299615748];
IW1_1 = [-0.31252522487354278402 0.35268157236138342192 3.5312329668818787098 -0.47680877561667928122 -3.8316611000874725157;3.6818355538057327969 -0.84022635560412961553 1.398644036462118434 -0.93976684222912287847 -2.1763929444298986127;-0.60407485596252818993 -0.99709326840235801281 0.25308931098344977784 -1.7301820041178987974 0.1367582603444947309;-0.040457883071059540236 -0.0058491043299029182867 2.0030858108061848633 4.3340190654684889182 -3.2315271065506911974;1.2897745504555619966 2.1352099194095819357 -1.5979881965945221811 -1.7858712794096887055 -0.93704075198837433192;1.2875368726736657887 -2.910994618646044696 -3.0191527941488485176 4.0986133908645490109 0.44084717038861620519;-0.2201366305392544187 1.4453000165542455591 -1.3825544782515308828 0.7851059272314313553 -0.33012098519988891665;4.1765405994817319524 0.52360385478890059119 -0.75939428115658791363 -4.5636863103378706441 -0.30165173435263537005;1.7758176674623953328 0.94972635420505957526 -2.4957009908080225458 0.40531602239062591853 0.13086601030681252467;-0.88563846021725611823 0.75829638431314716485 -1.4391913418450474893 -0.13781650136449796751 1.9145611069987880093;-0.97451406703206011617 2.1587151448324344294 -1.486817362041346513 4.9163316177874225588 -2.5206444583095217737;-1.7543895952211061573 0.87074778906101590881 1.9730885674345532976 1.6125969596550584484 -1.6611863594348565965;1.2207453700297812293 0.4271497958347462709 1.7897764599085697057 -0.40310957361802307597 -1.9633004434779572911;-0.02635882156905623025 -1.1517037901135043221 -1.2941026449810681953 0.92744624399816044669 -0.35070436984915515088;0.051204109715253888491 -2.0507925626949439213 -2.5450050757410478397 1.20657204319299316 2.12913112540551408;0.73217626641245858732 -0.34454283263800705717 5.019169727631613398 -1.3235747384475686772 -0.022863339363379357738;-0.19167700920294178379 0.74266854185522512832 -1.848548350942259777 3.7701398671275088148 -0.45059762251347740269;1.7480607263031826548 -0.65446893333346900512 -1.2322008499621734945 -1.4807912786444212827 0.94071128048894714357;-0.069953060729464569545 -0.99295508031277668337 1.2194536910019835307 2.3239606623681350328 0.56408424802697354483;2.0141044760699164939 -1.5277378499046252447 -3.2963611277222906182 1.8914151974714856763 -1.0862236199023687089;0.24438136868898555076 2.1467441380004927964 1.7712398960872428599 0.64142579127207988154 -1.3421507708053113106;-2.89302830568008984 0.52514793354958810845 -1.5512149856413131044 -4.2198091315804946433 2.7478873136989161452;2.4062758336543894622 1.6843664300607035234 0.48898469095973212672 -0.53444086948507985024 -0.97015512732218367464;-0.66494888378041316912 0.56787765076107721285 1.447195168270780874 -0.55898823630826521836 -2.2075367556547416115;0.26997210271295546402 -3.7983830233030273504 -3.2796187494158401954 -0.80225926051952411999 2.9595266085128355549;2.6327159204058059316 -0.42393706398741876074 -1.7916548034398938061 -2.2407013970090954302 -2.8904017977490719105;-1.5364424954515023547 -2.0886230460498804717 -0.88685507356353088237 0.9694827892586904694 0.97808574247728663487;-1.3375043179688692607 1.3775172397844299699 0.32847863249770098415 -2.6929890312449868972 -2.3260215729829889497;2.7129698065060137147 -0.82747633841882117789 -2.8577772779120658164 2.0142086724347700866 -1.3734813080477723535;-1.7839023790148609283 -0.040043893387758315583 -1.0261758947701917766 0.99034171242957402814 1.0847024078477875975];

% Layer 2
b2 = 0.31767033780123932196;
LW2_1 = [0.25181658844991328117 -0.72371686054056993953 1.0753901700963404142 -1.9941564265643396681 0.72393039710107653928 -0.49115995022870528874 -1.3002222492830932676 -0.78261770353505888398 -0.00063416564234340363007 -1.4453283436473964851 -1.1659391093218312019 -0.73059612689486241877 -1.8313759270107652366 0.18449083414400940795 -0.90703978360657988578 0.20991878786638809573 1.8193910225975389316 -1.0114346449697537711 0.59646634279811150403 1.8929234535546086704 -1.8649421381396378283 -1.9312039915535093026 -0.75700238913806994212 -1.0569929743820369872 -1.2760521704795795284 2.2117697350474343487 -0.99671508808526110279 1.5238191509412286617 -2.8071639056993831218 0.60118489791361517938];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
