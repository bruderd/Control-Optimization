function [Y,Xf,Af] = nnet_2019_11_04_16_52(X,~,~)
%NNET_2019_11_04_16_52 neural network simulation function.
%
% Auto-generated by MATLAB, 04-Nov-2019 16:52:28.
% 
% [Y] = nnet_2019_11_04_16_52(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.161443988792658;-0.0348157881121125;-1];
x1_step1.gain = [4.48952859324753;7.93185821039875;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.1640172843214942056;-3.6393161776297411336;-4.0823086191447357507;-6.6639030316233611728;-4.7212367099936685122;2.8720611087682308415;-3.2667860221647049279;2.7121230270828826647;2.4651654841986219147;6.5598765788489021844;-0.23699001218097320853;-1.7072272430717199132;-3.0797481117218730162;-0.29013135406969153829;-2.0762236487228951098;2.1524089281000113871;2.508948614750794448;-1.3110195342190700263;0.39260367393528433633;0.16144241852247923075;-4.1502231434678957811;-1.2480466951619648697;7.7939164044287538857;-2.1013999468706754392;0.93871804298461269944;5.0730067027722034467;2.019462867067657097;-6.7540348500994067393;3.4012318271699566452;4.5773477355215383966];
IW1_1 = [0.84792460324103380298 -3.1745905952577389009 -2.6209086147016811275;-0.36478383514302836765 -5.2508182004625068018 -4.6832192932752310099;1.4119966080623940208 4.0463280619318435782 -1.8166474629653599493;0.6737885824008564839 -7.1173300814954041371 -2.5294715654277744044;2.7486344644512512581 -0.16665713976105059335 -1.5764345863403093073;-0.78422938985037959903 4.6215887451399861874 3.1991830721600487131;0.02952412916886182695 -0.74732484382595065764 3.0768330099573915071;-2.1495918084753116162 -3.2973188076784136769 2.1459885816397048508;-0.72607663749673045928 -1.8347465607864847925 -3.8589444823352554437;-0.66474340724575564643 -3.9092359417343249817 -8.7676063565608703954;-0.53905365354099510355 -5.9777014764094023036 -1.8174591110799698246;-4.4409127737387397161 1.0662392694592899289 11.192828492970654963;6.1437102240896646066 -9.2823418885447921411 -14.144419593670582103;-4.0548780241142567959 -0.19623039870652669858 -5.9284603617946851628;3.1340304571037544967 2.3613384955284835165 2.9390641201907259372;-2.8199268200920526439 8.0870015969288449043 -3.2854411019902722835;-3.0621365457099702923 9.4425528211138267665 -3.8757388559722656396;-3.1020949502505730244 2.6497697756487981202 -2.405567815360012407;-2.8248995192349273253 5.6051431030740159756 2.4380516854211680133;2.7434723280388007005 -1.048587584085968194 -1.2713872510704777863;8.6457368567649517388 -10.356056078369391571 -19.903275328108122721;-3.3411220730961948 2.607530577828592655 -1.5926437620327626998;1.2090752197449436967 10.793481527257696939 3.1131543267595951363;-3.3929633346985754727 5.239606135645031415 0.39735738078188798106;5.9142265303703149826 -4.2720000013608618872 -13.668463277931920175;0.88074427120303633298 5.4885743333061016713 -1.1282636916475630162;1.8934851972489863403 -4.6672795836021307991 -1.0367759533440874531;-4.8045406887380295302 -5.5292573297063603022 8.3777111899231240244;2.9576452865042224261 -2.9998274978191563633 1.1617728044070410043;3.1660963482792481294 -2.687648802297704087 -1.1983494957285232285];

% Layer 2
b2 = 1.3706527668054178104;
LW2_1 = [-0.99461397960608111113 -1.4211373140369958357 1.7627206727982731582 0.62068520321013664898 -1.7079320561609097062 -1.9038350669224313183 2.6603740910798849839 0.87641447983880704786 4.6155292391085351866 -5.413702659408446749 -0.38297653417587113056 0.72060715773444794507 -0.7144939553297137147 -0.76233870072062359657 0.56908436998985012512 2.8077725745045021277 -2.1735460754717763621 -2.1950577944482660975 -0.59775849543388115404 0.60180791491541263394 0.3825655237648740159 3.0255461412288342515 -0.24510740820986667843 -0.9295760164375012069 0.86364304497428789897 0.60175566456350915168 -1.3163997482278675388 -0.082014148983927614989 2.0988286823175186235 0.72344439510381530756];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1;
y1_step1.xoffset = -1;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
